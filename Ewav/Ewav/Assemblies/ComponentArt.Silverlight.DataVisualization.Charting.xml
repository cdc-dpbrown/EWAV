<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ComponentArt.Silverlight.DataVisualization.Charting</name>
    </assembly>
    <members>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnimator">
            <summary>
            Provides a CompositeAnimator for animating Axis objects.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnimator.#ctor">
            <summary>
            Initializes a new instance of the AxisAnimator class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnimator.GridAnimator">
            <summary>
            Gets or sets an Animator object for animating the Axis grid.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnimator.StripesAnimator">
            <summary>
            Gets or sets an Animator object for animating the Axis stripes.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartAnimator">
            <summary>
            Provides a CompositeAnimator for animating a Chart.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartAnimator.#ctor">
            <summary>
            Initializes a new instance of the Chart class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAnimator.CoordinateSystemAnimator">
            <summary>
            Gets or sets an Animator for animating the CoordinateSystem.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAnimator.SeriesAnimator">
            <summary>
            Gets or sets an Animator for animating a Series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAnimator.CoordinateSystemBeginTime">
            <summary>
            Gets or sets the starting offset at which the CoordinateSystemAnimator begins animating.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAnimator.SeriesBeginTime">
            <summary>
            Gets or sets the starting offset at which the SeriesAnimator begins animating.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAnimator.CoordinateSystemAnimationDuration">
            <summary>
            Gets or sets the duration for which the CoordinateSystemAnimator should animate.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAnimator.SeriesAnimationDuration">
            <summary>
            Gets or sets the duration for which the SeriesAnimator should animate.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.PieSeries">
            <summary>
            A single series to be used within PieChart.  Multiple series within a single PieChart will be represented as inner rings in the pie.
            </summary>
            <remarks><para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.PieSeries.YPath"/> property to the name of the data property containing the Y value for the series.</para>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.PieSeries.ShiftPath"/> property to the name of the data property containing the value for the amount 
            of shift from center for each data poin in the series.</para>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.PieSeries.YPath"/> property to the name of the data property containing the Y value for the series.</para>
            <para><see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPoints"/> collection is automatically populated with <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> objects when the chart is bound to data.</para></remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.Series">
            <summary>
                This is a base class that represents a single data series within a chart.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase">
            <summary>
                Base class for Series and CompositeSeries classes.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.MainChartAreaMember">
            <summary>
            A base class that all sub-members of the chart should inherit from. 
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreaMember">
            <summary>
            Base class for all sub-members of the chart.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreaMember.VisibilityProperty">
            <summary>
            Identifies the Visibility dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreaMember.OnVisibleChanged(System.Boolean)">
            <summary>
            Called when the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreaMember.Visible"/> property is changed.
            </summary>
            <param name="visible"></param>
            <remarks>
            Override in derived classes to handle change to the property <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreaMember.Visible"/>.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreaMember.Animate(System.TimeSpan)">
            <summary>
            Invoke the associated Animator to animate this ChartAreaMember.
            </summary>
            <param name="duration">Amount of time the animation should last.</param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreaMember.Id">
            <summary>
            Identifier for this ChartAreaMember.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreaMember.Visual">
            <summary>
            Pannel where all visuals of this ChartAreaMember are drawn.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreaMember.Visibility">
            <summary>
            Gets or sets the visibility of this <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreaMember"/>.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreaMember.Chart">
            <summary>
            Gets the chart object that this area member belongs to.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreaMember.ActualAnimator">
            <summary>
            Animator object used by this ChartAreaMember. Read-only.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreaMember.Animator">
            <summary>
            Animator object to be used.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreaMember.EnableAnimation">
            <summary>
            Whether to invoke this ChartAreaMember's Animator when animating.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MainChartAreaMember.YAxisIdProperty">
            <summary>
            Identifies the YAxisId dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MainChartAreaMember.OnMouseEnter(System.Windows.Point)">
            <summary>
            Called when the mouse enters the main chart area.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
            <remarks>
            Override this function in deriving class if necessary.
            This function is called from the charting framework and should not be called from user's code.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MainChartAreaMember.OnMouseLeave(System.Windows.Point)">
            <summary>
            Called when the mouse leaves the main chart area.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
            <remarks>
            Override this function in deriving class if necessary.
            This function is called from the charting framework and should not be called from user's code.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MainChartAreaMember.OnMouseMove(System.Windows.Point)">
            <summary>
            Caled when the mouse moves over the main chart area.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
            <remarks>
            Override this function in deriving class if necessary.
            This function is called from the charting framework and should not be called from user's code.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MainChartAreaMember.OnMouseLeftButtonDown(System.Windows.Point)">
            <summary>
            Called when the left mouse button is pressed.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
            <remarks>
            Override this function in deriving class if necessary.
            This function is called from the charting framework and should not be called from user's code.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MainChartAreaMember.OnMouseLeftButtonUp(System.Windows.Point)">
            <summary>
            Called when the left mouse button is released.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
            <remarks>
            Override this function in deriving class if necessary.
            This function is called from the charting framework and should not be called from user's code.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MainChartAreaMember.OnMouseRightButtonDown(System.Windows.Point)">
            <summary>
            Called when the right mouse button is pressed.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
            <remarks>
            Override this function in deriving class if necessary.
            This function is called from the charting framework and should not be called from user's code.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MainChartAreaMember.OnMouseRightButtonUp(System.Windows.Point)">
            <summary>
            Called when the right mouse button is released.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
            <remarks>
            Override this function in deriving class if necessary.
            This function is called from the charting framework and should not be called from user's code.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MainChartAreaMember.CreateVisual(System.Object)">
            <summary>
            Draws the visual representation of this mainChartAreaMember.  To be called by charting framework only, do not call directly from code.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MainChartAreaMember.YAxisId">
            <summary>
            Indentifier of the associated Y-axis Axis object.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MainChartAreaMember.Context">
            <summary>
            Contains objects relevant to this member, including the chart, coordinates and axis the member belongs to.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MainChartAreaMember.CoordinatesMapping">
            <summary>
            The CoordinatesMapping of the chart that are related to this MainChartAreaMember.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.MainChartAreaMember.PropertyChanged">
            <summary>
            Notifies when a property of this member changes.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.YAxisIdProperty">
            <summary>
            Identifies the YAxisId dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.SeriesPathProperty">
            <summary>
            Identifies the SeriesPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.ColorPathProperty">
            <summary>
            Identifies the ColorPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.LabelPathProperty">
            <summary>
            Identifies the LabelPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.MissingPointHandlerProperty">
            <summary>
            Identifies the MissingPointHandler dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.MissingPointChartKindProperty">
            <summary>
            Identifies the MissingPointChartKind dependency property.
            </summary>        
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.MissingDataPointMarkerProperty">
            <summary>
            Identifies the MissingDataPointMarker dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.PaddingProperty">
            <summary>
            Identifies the Padding dependency property.
            </summary>   
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.RelativePointSpaceProperty">
            <summary>
            Identifies the RelativePointSpace dependency property.
            </summary>   
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.BarRelativeBeginProperty">
            <summary>
            Identifies the BarRelativeBegin dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.BarRelativeEndProperty">
            <summary>
            Identifies the BarRelativeEnd dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.ColorProperty">
            <summary>
            Identifies the Color dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.ChartKindProperty">
            <summary>
            Identifies the ChartKind dependency property.
            </summary>   
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.LineKindInternalProperty">
            <summary>
            Identifies the LineKindInternal dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.LabelProperty">
            <summary>
            Identifies the Label dependency property.
            </summary>   
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.ShowPointAnnotationsProperty">
            <summary>
            Identifies the ShowPointAnnotations dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.TextureProperty">
            <summary>
            Identifies the Texture dependency property.
            </summary>   
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.MarkerInternalProperty">
            <summary>
            Identifies the MarkerInternal dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.MarkerSizeInternalProperty">
            <summary>
            Identifies the MarkerSizeInternal dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.MarkerStrokeInternalProperty">
            <summary>
            Identifies the MarkerStrokeInternal dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.MarkerStrokeThicknessInternalProperty">
            <summary>
            Identifies the MarkerStrokeThicknessInternal dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.MarkerFillInternalProperty">
            <summary>
            Identifies the MarkerFillInternal dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.MarkerVisibleInternalProperty">
            <summary>
            Identifies the MarkerVisibleInternal dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary> 
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary> 
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.EnableDataPointPopupProperty">
            <summary>
            Identifies the EnableDataPointPopup dependency property.
            </summary> 
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.DataPointPopupProperty">
            <summary>
            Identifies the DataPointPopup dependency property.
            </summary> 
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.ValueFormattingStringProperty">
            <summary>
            Identifies the ValueFormattingString dependency property.
            </summary> 
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.SelectedProperty">
            <summary>
            Identifies the Selected dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.AnimatorProperty">
            <summary>
            Identifies the Animator dependency property.
            </summary> 
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.DefaultAnimator">
            <summary>
            Implementation of IAnimationProvider interface.  
            Use Animator property to set the animator for the series. 
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.Animate(System.TimeSpan)">
            <summary>
            Invokes the animation on this series.
            </summary>
            <param name="duration">duration of animation.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.SelectAllPoints(System.Boolean)">
            <summary>
            Select or unselect all data points in this series.
            </summary>
            <param name="select">Indicates whether points should be selected or unselected.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.SelectionVisualHintProperty">
            <summary>
            Identifies the SelectionVisualHint dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.Id">
            <summary>
                This property is the name of the series. It could appear in a legend or a data point popup if the label property is not set explicitly.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.DataSource">
            <summary>
                This property represents the data source. Any standard binding type can be assigned to it such as a collection of objects.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.YAxisId">
            <summary>
            Identifier of the associated Y-axis Axis.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.SeriesPath">
            <summary>
            Used to dynamically create series at runtime.  Specifies a data source property so that a new series will be created for each unique 
            value of the property at runtime, when the data source is analyzed.  
            </summary>
            <remarks>
            To learn more about the use of this property, see the <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Charting_HowTo_DynamicSeriesCreation.htm">Automatic Series Creation</a> tutorial.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.ColorPath">
            <summary>
            Name of a property in a DataPoint DataContext object that contains the point's Color value.
            </summary>
            <remarks>Value can be a string <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Calc_IntroductionTo.htm">Calc</a> expression that is evaluated at run-time. 
            Use Calc to create conditions or calculations on the actual values assigned.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.LabelPath">
            <summary>
            Name of a property in the bound DataContext object that contains the DataPoint's label value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.MissingPointHandler">
            <summary>
            Defines how missing point values are calculated
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.MissingPointChartKind">
            <summary>
            The Chart kind applied to missing points.  Must be compatible with the series' chart kind.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.MissingDataPointMarker">
            <summary>
                This marker is used for missing (interpolated) data points. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.Padding">
            <summary>
            Specifies the indent on the Z-axis of the series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.RelativePointSpace">
            <summary>
            Proportion of the total space assigned to a datapoint that is allocated to whitespace.
            The space is evenly distributed on both sides of the datapoint.
            Value must be between 0 and 1.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.BarRelativeBegin">
            <summary>
            Relative starting point of the bar rectangle within the range alocated to the data point alonx x-axis. Value is from 0 to 1 and smaller than <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.BarRelativeEnd"/>.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.BarRelativeEnd">
            <summary>
            Relative ending point of the bar rectangle within the range alocated to the data point alonx x-axis. Value is from 0 to 1 and must be greater than <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.BarRelativeBegin"/>.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.Color">
            <summary>
                The Color to be used for drawing this series. 
                If not specified, the color is taken from the curent palette.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.ChartKind">
            <summary>
                This property indicates the chart type of data points belonging to this series. Select from bar charts, area charts, line charts, pie/donut charts and financial charts.
                Different series in a chart can have different chart types (except for pie/donut chart types which can not be mixed with other types).
                In addition, the chart type can be overriden for each data point and a different one selected. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.Label">
            <summary>
                This property is the label of the series. It appears in a legend or a data point popup to represent the series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.DataPointAnnotations">
            <summary>
            Collection of DataPoint annotations (labels).  Read-only.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.ShowPointAnnotations">
            <summary>
            Whether the Y values of datapoints are displayed on the datapoints when drawn.  Default: false.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.Texture">
            <summary>
            Specifies the texture to apply to the series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.Overlays">
            <summary>
                This property is a collection of Overlay elements that will be displayed on top of data points.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.Stroke">
            <summary>
            Used for the stroke of the series drawing.  If null the brush is taken from the palette
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.StrokeThickness">
            <summary>
            Thickness in pixels of the Stroke for line series drawings.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.EnableDataPointPopup">
            <summary>
            Shows a pop-up when mouse is over a specific DataPoint.  Default pop-up shows the Y value of the datapoint, but this can be customized through a custom template.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.DataPointPopup">
            <summary>
            Specifies the DataPointPopup instance that defines the popup when DataPoint is moused over.
            Used for customizing the popup template and settings.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.ValueFormattingString">
            <summary>
            Format string used for displaying annotations of all DataPoints within the series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.Selected">
            <summary>
            Whether this series is selected.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.YAxis">
            <summary>
            The Y-axis that this series is drawn against.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.OwningChart">
            <summary>
            Gets the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase"/> object that this <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase"/> belongs to.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.Chart">
            <summary>
            Gets the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase"/> object that this <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase"/> belongs to.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.XPath">
            <summary>
                The name of a property in the DataPoint's DataContext object that contains the data point's x-value.
            </summary>
            <remarks>Value can be a string <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Calc_IntroductionTo.htm">Calc</a> expression that is evaluated at run-time. 
            Use Calc to create conditions or calculations on the actual values assigned.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.Animator">
            <summary>
            Specifies the type of Animator to be applied to this series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.ActualAnimator">
            <summary>
            Implementation of IAnimationProvider interface.  
            Use Animator property to set the animator for the series. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.SelectionVisualHint">
            <summary>
            Gets or sets the type of visual indication of selected data points and series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.EnableDataPointSelectionOnMouseClick">
            <summary>
            Gets or sets whether data point selection on mouse click is enabled.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.EnableSeriesSelectionOnMouseClick">
            <summary>
            Gets or sets whether series selection on mouse click is enabled.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Series.#ctor">
            <summary>
            Initializes a new instance of the Series class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Series.Dispose">
            <summary>
            Cleans up after object is disposed.  Do not call directly from code.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Series.IsXCrossSectionVisibleProperty">
            <summary>
            Identifies the IsXCrossSectionVisible dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPointAt(System.Object)">
            <summary>
            Gets the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> at the given X-coordinate.
            </summary>
            <param name="X">X-coordinate</param>
            <returns>
            Returns the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> whose X-coordinate is the value of the argument. 
            </returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPointBefore(System.Object)">
            <summary>
            Gets the closest <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> before the given X-coordinate.
            </summary>
            <param name="X">X-coordinate.</param>
            <returns>
            Returns the closest <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> whose X-coordinate is less than to the value of the argument. 
            </returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPointAtOrAfter(System.Object)">
            <summary>
            Gets the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> at the given X-coordinate or the closest point after it if no point is at located at the given coordinate.
            </summary>
            <param name="X">X-coordinate.</param>
            <returns>
            Returns the closest <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> whose X-coordinate is greater than or equal to the value of the argument. If such a point doesn't exist,
            the closest point after the X-coordinate is returned.
            </returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPointAfter(System.Object)">
            <summary>
            Gets the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> after the given X-coordinate.
            </summary>
            <param name="X">X-coordinate.</param>
            <returns>
            Returns the closest <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> whose X-coordinate is greater than the value of the argument.
            </returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Series.GetPointAtX(System.Object)">
            <summary>
            Returns the DataPoint from this series at the given X coordinate
            </summary>
            <param name="xCoordinate">must be of the same type as the XValue parameter</param>
            <returns>DataPoint at given place</returns>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Series.ActualBrushProperty">
            <summary>
            Identifies the ActualBrush dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Series.DefaultAnimator">
            <summary>
            Implementation of IAnimationProvider interface.  
            Returns the default animator.
            Use Animator property to set the animator for the series. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Series.AnimationProgressProperty">
            <summary>
            Identifies the AnimationProgress dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Series.SelectAllPoints(System.Boolean)">
            <summary>
            Select or unselect all data points in this series.
            </summary>
            <param name="select">Indicates whether points should be selected or unselected.</param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.FinancialDataPointWidth">
            <summary>
                Width of data points in pixels for financial charts.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPoints">
            <summary>
                A collection of DataPoint objects representing data points belonging to this series.  
            </summary>
            <remarks>The collection is automatically populated when the chart is bound to data.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.ActualBrush">
            <summary>
            The <see cref="T:System.Windows.Media.Brush"/> used to fill this series. The solid color brush is computed from the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase.Color"/> property 
            if the property  is set, otherwise the color is taken from the palette.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.Sum">
            <summary>
            Gets or sets the (logical) sum for the entire Series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.AnimationProgress">
            <summary>
            Gets or sets a value indicating the current progress of the Series animation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.AnnotationAnimator">
            <summary>
            Controls the animation performed on the Annotation.  
            </summary>        
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.IPieMainChartAreaMember">
            <summary>
            Interface all sub-members of the Pie Chart should impelement.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieSeries.YPathProperty">
            <summary>
            Identifies the YPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieSeries.AnimatorProperty">
            <summary>
            Identifies the Animator dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieSeries.ShiftPathProperty">
            <summary>
            Identifies the ShiftPath dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PieSeries.DefaultAnimator">
            <summary>
            Implementation of IAnimationProvider interface.  
            Returns the default animator.
            Use Animator property to set the animator for the series. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieSeries.YPath">
            <summary>
            Name of the data source property that contains the value of each data point in this series.
            </summary>
            <remarks>Value can be a string <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Calc_IntroductionTo.htm">Calc</a> expression that is evaluated at run-time. 
            Use Calc to create conditions or calculations on the actual values assigned.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieSeries.Animator">
            <summary>
            The Aanimator used to animate this series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieSeries.StartingAngle">
            <summary>
            The starting angle for Pie/Doughnut charts. in degrees.  For full pie/doughnut charts set BeginPieDoughnutAngle = EndPieDoughnutAngle
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieSeries.EndingAngle">
            <summary>
            The ending angle for Pie/Donut charts, in degrees. For full pie/donut charts set BeginPieDonutAngle = EndPieDonutAngle 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieSeries.ShiftPath">
            <summary>
                The name of a property in a DataPoint DataContext object that contains the amount in pixels a data point pie or donut slice should be shifted away from the center.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.PieSeriesAnimator">
            <summary>
            Animator used for animating PieSeries.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnimator">
            <summary>
            Base class for all animators that animate series.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnimator.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnimator.AnnotationAnimator">
            <summary>
            Animator used to animate the annotations of the series.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PieSeriesAnimator.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PieSeriesAnimator.Create(System.String)">
            <summary>
            Creates an instance of this animator.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PieSeriesAnimator.SetType(System.String)">
            <summary>
            Sets the type of animator.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PieSeriesAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieSeriesAnimator.DataPointAnimationOverlapProperty">
            <summary>
            Identifies the DataPointAnimationOverlap dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieSeriesAnimator.DataPointAnimationOverlap">
            <summary>
            Gets or sets the amount of overlap on DataPoint animations.
            The value 0 means that there is no overlap and data points are animated sequentially.
            The value 1 means that animations completely overlap and animation of all data points is simultaneous.
            Values between 0 and 1 describe animations that combine these two extreme approaches.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.PieSeriesAnimatorTypeConverter">
            <summary>
            Type converter for <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.PieSeriesAnimator"/>.
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PieSeriesAnimatorTypeConverter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PieSeriesAnimatorTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PieSeriesAnimatorTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesAnimator">
            <summary>
            Animator used for RadarAreaSeries.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesAnimator.#ctor">
            <summary>
            Initializes new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeriesAnimator"/> class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesAnimator.Create(System.String)">
            <summary>
            Creates an instance of the animator.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesAnimator.PolygonAnimator">
            <summary>
            Area polygon animator.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesAnimatorTypeConverter">
            <summary>
            Type converter for <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesAnimator"/>.
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesAnimatorTypeConverter.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesAnimatorTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesAnimatorTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeriesAnimator">
            <summary>
            Animator used on RadarLineSeries.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeriesAnimator.#ctor">
            <summary>
            Initializes new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeriesAnimator"/> class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeriesAnimator.Create(System.String)">
            <summary>
            Creates an instance of this animator.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeriesAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeriesAnimator.PolygonAnimator">
            <summary>
            Area polygon animator.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeriesAnimator.MarkersAnimator">
            <summary>
            Markers animator.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeriesAnimatorTypeConverter">
            <summary>
            Type converter for <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.LineSeriesAnimator"/>.
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeriesAnimatorTypeConverter.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeriesAnimatorTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeriesAnimatorTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeries">
            <summary>
            An area-type series used within RadarChart.  
            Area series will colour an area around the centre with the outer bounds defined by lines connecting the data points.
            </summary>
            <remarks><para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeries.YPath"/> property to the name of the data property containing the Y value for the series.</para>
            <para><see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPoints"/> collection is automatically populated with <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> objects when the chart is bound to data.</para></remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesBase">
            <summary>
            Base class for area series of RadarChart.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.IRadarMainChartAreaMember">
            <summary>
            Interface all sub-members of RadarChart should impelement.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesBase.AreaKindProperty">
            <summary>
            Identifies the AreaKind dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesBase.GradientCenterColorShiftProperty">
            <summary>
            Identifies the GradientCenterColorShift dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesBase.GradientOuterColorShiftProperty">
            <summary>
            Identifies the GradientOuterColorShift dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesBase.DoubleLineProperty">
            <summary>
            Identifies the DoubleLine dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesBase.SeriesLineVisibleProperty">
            <summary>
            Identifies the SeriesLineVisible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesBase.AnimatorProperty">
            <summary>
            Identifies the Animator dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesBase.DefaultAnimator">
            <summary>
            Implementation of IAnimationProvider interface.  
            Returns the default animator.
            Use Animator property to set the animator for the series. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesBase.AreaKind">
            <summary>
            Routine to use for generating the line connecting datapoints.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesBase.GradientCenterColorShift">
            <summary>
            State of the color fill at the inner edge (towards the center) of the RadarAreaSeries.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesBase.GradientOuterColorShift">
            <summary>
            State of the color fill at the outer edge of the RadarAreaSeries.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesBase.DoubleLine">
            <summary>
            Whether to draw a thin border on the line connecting datapoints.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesBase.SeriesLineVisible">
            <summary>
            Whether to render a separate line connecting the datapoints in the series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesBase.Animator">
            <summary>
            The Aanimator used to animate this series.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeries.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeries.YPathProperty">
            <summary>
            Identifies the YPath dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeries.YPath">
            <summary>
            The name of a property in a DataPoint DataContext object that contains the point's radial-axis coordinate value.
            </summary>
            <remarks>Value can be a string <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Calc_IntroductionTo.htm">Calc</a> expression that is evaluated at run-time. 
            Use Calc to create conditions or calculations on the actual values assigned.</remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesRange">
            <summary>
            A series representing an area on the RadarChart that stretches between "From" and "To" values of each datapoint.
            </summary>
            <remarks><para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesRange.FromPath"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesRange.ToPath"/> properties to the names of the data properties 
            containing the Y value for the beginning and the end of the range.</para>
            <para><see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPoints"/> collection is automatically populated with <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> objects when the chart is bound to data.</para></remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesRange.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesRange.FromPath">
            <summary>
                The name of a property in a DataPoint DataContext object that, for range charts, contains the data point's From value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesRange.ToPath">
            <summary>
                The name of a property in a DataPoint DataContext object that, for range charts, contains the data point's To value.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries">
            <summary>
            A line series drawn within a RadarChart.
            </summary>
            <remarks><para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries.YPath"/> property to the name of the data property containing the Y value for the series.</para>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries.LineKind"/> property to specify what type of line will be connecting the data points.</para>
            <para><see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPoints"/> collection is automatically populated with <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> objects when the chart is bound to data.</para></remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries.YPathProperty">
            <summary>
            Identifies the YPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries.LineKindProperty">
            <summary>
            Identifies the LineKind dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries.MarkerVisibleProperty">
            <summary>
            Identifies the MarkerVisible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries.MarkerProperty">
            <summary>
            Identifies the Marker dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries.AnimatorProperty">
            <summary>
            Identifies the Animator dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries.DefaultAnimator">
            <summary>
            Implementation of IAnimationProvider interface.  
            Returns the default animator.
            Use Animator property to set the animator for the series. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries.YPath">
            <summary>
            The name of a property in the DataPoint DataContext object that contains the point's radial-axis coordinate value.
            </summary>
            <remarks>Value can be a string <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Calc_IntroductionTo.htm">Calc</a> expression that is evaluated at run-time. 
            Use Calc to create conditions or calculations on the actual values assigned.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries.LineKind">
            <summary>
            Routine to use for generating the line connecting datapoints.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries.MarkerVisible">
            <summary>
            Whether to display a Marker at each data point value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries.Marker">
            <summary>
            The Marker object displayed at each data point value if MarkerVisible is set to true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries.Animator">
            <summary>
            The Aanimator used to animate this series.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarMarkerSeries">
            <summary>
            Marker series used in <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart"/>s.
            </summary>
            <remarks><para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarMarkerSeries.YPath"/> property to the name of the data property containing the Y value for the series.</para>
            <para><see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPoints"/> collection is automatically populated with <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> objects when the chart is bound to data.</para></remarks>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarMarkerSeries.YPathProperty">
            <summary>
            Identifies the YPath dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarMarkerSeries.YPath">
            <summary>
            Name of the data source property that contains the value of each data point in this series.
            </summary>
            <remarks>Value can be a string <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Calc_IntroductionTo.htm">Calc</a> expression that is evaluated at run-time. 
            Use Calc to create conditions or calculations on the actual values assigned.</remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisChartAreaMember">
            <summary>
            Base class for axis area items.
            </summary>
            <remarks>
            Objects that populate chart axis areas (left and right, top and bottom i.e. not the main graph area)
            except <see cref="!:Legend"/> belong to classes that derive from <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisChartAreaMember"/>.
            The following derived classes are implemented in the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.XYChart"/>:
            <list type="bullet">
            <item><see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates"/></item>
            <item><see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabels"/></item>
            <item><see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar"/></item>
            <item><see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine"/></item>
            <item><see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartLabel"/></item>
            </list>
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisChartAreaMember.AxisStackPanel">
            <summary>
            The <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateAxisStackPanel"/> associated with the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisChartAreaMembers"/> collection that this member belongs to.
            </summary>
            <remarks>
            This member acts as a connection between this axis area member and the rest of the chart object model. It is passed to this object
            as the "context" argument of the <see cref="!:CreateVisual"/> method. 
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisChartAreaMember.AxisId">
            <summary>
            Identifier of the Axis associated with this axis area member.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisChartAreaMembers">
            <summary>
            Observable collection of <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisChartAreaMember"/>.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinateLevel.PopulateCanvas(System.Windows.Controls.Canvas,ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates,ComponentArt.Silverlight.DataVisualization.Charting.Coordinates,System.Boolean,System.String)">
            <summary>
            Creates visuals and populates the local canvas if there is no overlapping. 
            </summary>
            <param name="coordinates"></param>
            <param name="breakIfOverlapping"></param>
            <returns>Returns "true" if there is no overlapping. If there is ovelapping, some annotations might be missung.</returns>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates">
            <summary>
            Object describing system to map value intervals along the side of the Chart.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates"/> class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.CoordinatesProperty">
            <summary>
            Identifies the Coordinates dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.TemplateProperty">
            <summary>
            Identifies the Template dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.FormattingStringProperty">
            <summary>
            Identifies the Format dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.ScaleProperty">
            <summary>
            Identifies the Scale dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.FontFamilyProperty">
            <summary>
            Identifies the FontFamily dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.FontSizeProperty">
            <summary>
            Identifies the FontSize dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.FontStyleProperty">
            <summary>
            Identifies the FontStyle dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.FontWeightProperty">
            <summary>
            Identifies the FontWeight dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.FontBrushProperty">
            <summary>
            Identifies the FontBrush dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.LabelValueConverterProperty">
            <summary>
            Identifies the LabelValueConverter dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.AngleProperty">
            <summary>
            Identifies the Angle dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.LabelGapProperty">
            <summary>
            Identifies the LabelGap dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.LabelMarginProperty">
            <summary>
            Identifies the LabelMargin dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.MaximumAnnotationLevelProperty">
            <summary>
            Identifies the MaximumAnnotationLevel dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.MinimumAnnotationLevelProperty">
            <summary>
            Identifies the MinimumAnnotationLevel dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.UseSeriesColorProperty">
            <summary>
            Identifies the UseSeriesColor dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.CreateVisual(System.Object)">
            <summary>
            Draws the visual elements.  To be called by charting framework only, do not call directly from code.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.BuildVisualFromCoordinates(ComponentArt.Silverlight.DataVisualization.Charting.Coordinates,System.Boolean)">
            <summary>
            Creates visuals and populates the local canvas if there is no overlapping. 
            </summary>
            <param name="coordinates"></param>
            <param name="breakIfOverlapping"></param>
            <returns>Returns "true" if there is no overlapping. If there is ovelapping, some annotations might be missung.</returns>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.Coordinates">
            <summary>
            Object describing the system to uniquely determine the positions of datapoints.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.Template">
            <summary>
            Template for custom annotation content.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.FormattingString">
            <summary>
            A standard or custom format string that is supported by the object to be formatted.
            Possible values for FormattingString are the same as the values supported by the object's ToString(format) method.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.Scale">
            <summary>
            Scale applied only to numerical coordinates. The value displayed in the annotation should be multoplied by the scale to
            obtain the actual value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.FontFamily">
            <summary>
            Represents a family of related fonts.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.FontSize">
            <summary>
            Gets or sets the font size.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.FontStyle">
            <summary>
            Represents the style of a font face, such as normal or italic.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.FontWeight">
            <summary>
            Refers to the density of a typeface, in terms of the heaviness of the strokes.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.FontBrush">
            <summary>
            Object describing how text is painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.LabelValueConverter">
            <summary>
            ValueConverter to use on annotation text.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.Angle">
            <summary>
            Amount of degrees to rotate the annotations from their default orientation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.LabelGap">
            <summary>
            Minimum distance between axis labels, in pixels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.LabelMargin">
            <summary>
            Distance between axis label and axis line, in pixels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.MaximumAnnotationLevel">
            <summary>
            Maximum tier or depth of axis coordinate annnotation detail.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.MinimumAnnotationLevel">
            <summary>
            Minimum tier or depth of axis coordinate annnotation detail.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.UseSeriesColor">
            <summary>
            Whether the FontBrush should inherit the assigned Color of the first series that uses these axis coordinates.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates.Visible">
            <summary>
            Whether to render the AxisLabels for this axis.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.#ctor">
            <summary>
            Initializes a new instance of the Axis class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.ReferenceValueProperty">
            <summary>
            Identifies the ReferenceValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.UseReferenceValueProperty">
            <summary>
            Identifies the UseReferenceValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.ReversedProperty">
            <summary>
            Identifies the Reversed dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.LogarithmicProperty">
            <summary>
            Identifies the Logarithmic dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.LogarithmBaseProperty">
            <summary>
            Identifies the LogarithmBase dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.MinValueProperty">
            <summary>
            Identifies the MinValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.MaxValueProperty">
            <summary>
            Identifies the MaxValue dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.ReferenceValue">
            <summary>
                A value on the axis that designates the reference value (the origin). 
                The default value is 0.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.UseReferenceValue">
            <summary>
                A flag that indicates whether a reference value is used or not. By default this property is true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.Reversed">
            <summary>
                A flag indicating whether the axis direction should be reversed or not. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.Logarithmic">
            <summary>
                A flag indicating whether the axis is logarithmic scale or linear. By default this property is false.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.LogarithmBase">
            <summary>
            The base of the logarithmic scale.  Default 10.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.MinValue">
            <summary>
                The minimum extreme of the axis. Set this value explicitly to change the range of the axis.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.MaxValue">
            <summary>
                The maximum extreme of the axis. Set this value explicitly to change the range of the axis.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.ActualMinValue">
            <summary>
            Value finaly used in drawing and axis coordinates computations
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.ActualMaxValue">
            <summary>
            Value finaly used in drawing and axis coordinates computations
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.ActualLogicalMinValue">
            <summary>
            Logical value finaly used in drawing and axis coordinates computations
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.ActualLogicalMaxValue">
            <summary>
            Logical value finaly used in drawing and axis coordinates computations
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.ComputedMinValue">
            <summary>
            Value set when the annotation values define axis values range
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinatesMapping.ComputedMaxValue">
            <summary>
            Value set when the annotation values define axis values range
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabelContext">
            <summary>
            Context available when binding.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabelContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabelContext"/> class.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabelContext.RangeStart">
            <summary>
            X-coordinate at the start of the range that this axis label will demarcate.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabelContext.FormattedStartValue">
            <summary>
            Formatted <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.Coordinate"/> object of the start of the range that this axis label will demarcate.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabelContext.RangeEnd">
            <summary>
            X-coordinate at the end of the range that this axis label will demarcate.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabelContext.FormattedEndValue">
            <summary>
            Formatted <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.Coordinate"/> of the start of the range that this axis label will demarcate.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabelContext.Series">
            <summary>
            Collection of all series in the Chart.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabelContext.Index">
            <summary>
            Index of the datapoint at the start of the range that this axis label will demarcate.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabelContext.LastIndex">
            <summary>
            Index of the datapoint at the end of the range that this axis label will demarcate.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabels">
            <summary>
            Custom content applied to the regions between intervals along the axis. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabels.CoordinatesProperty">
            <summary>
            Identifies the Coordinates dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabels.TemplateProperty">
            <summary>
            Identifies the Template dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabels.PopupProperty">
            <summary>
            Identifies the Popup dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabels.CreateVisual(System.Object)">
            <summary>
            Draws the visual elements.  To be called by charting framework only, do not call directly from code.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabels.BuildVisualFromCoordinates(ComponentArt.Silverlight.DataVisualization.Charting.Coordinates,System.Boolean)">
            <summary>
            Creates visuals and populates the local canvas if there is no overlapping. 
            </summary>
            <param name="coordinates"></param>
            <param name="breakIfOverlapping"></param>
            <returns>Returns "true" if there is no overlapping. If there is ovelapping, some annotations might be missung.</returns>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabels.Coordinates">
            <summary>
            Object describing the system used to uniquely determine the positions of datapoints.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisLabels.Template">
            <summary>
            Template used for each AxisLabel on this Axis.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine">
            <summary>
            An <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisChartAreaMember"/> that represents the axis line around which tick-marks and annotations are positioned.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine"/> class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine.CoordinatesProperty">
            <summary>
            Identifies the Coordinates dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine.DepthProperty">
            <summary>
            Identifies the Depth dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine.MarginProperty">
            <summary>
            Identifies the Margin dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine.CreateVisual(System.Object)">
            <summary>
            Draws the visual elements.  To be called by charting framework only, do not call directly from code.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine.Stroke">
            <summary>
            How the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine"/> is painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine.StrokeThickness">
            <summary>
            Thickness of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine"/>.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine.Coordinates">
            <summary>
            The Coordinates associated with this AxisLine.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine.Depth">
            <summary>
            The width of the enclosing axis line rectangle if vertical, or height if horizontal. The rectangle encloses the line and tickmarks.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisLine.Margin">
            <summary>
            Optional margin around the axis line when drawn.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar">
            <summary>
            Axis area item which renders a resizable scrollbar control, which can be used to navigate the range of graphed axis values.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar"/> class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.HeightProperty">
            <summary>
            Identifies the Height dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.WidthProperty">
            <summary>
            Identifies the Width dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.RangeMinValueProperty">
            <summary>
            Identifies the RangeMinValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.RangeMaxValueProperty">
            <summary>
            Identifies the RangeMaxValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.MinimumViewportSizeProperty">
            <summary>
            Identifies the MinimumViewportSize dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.CreateVisual(System.Object)">
            <summary>
            Draws the visual elements.  To be called by charting framework only, do not call directly from code.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.Height">
            <summary>
            Height to draw the scrollbar for this Axis, in pixels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.Width">
            <summary>
            Width to draw the scrollbar for this axis, in pixels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.RangeMinValue">
            <summary>
            Minimum value of the visible range, represented by the scrollbar.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.RangeMaxValue">
            <summary>
            Maximum value of the visible range, represented by the scrollbar.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.Minimum">
            <summary>
            Maximum possible value of the range that can be scrolled to.  Handled by the control by default.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.Maximum">
            <summary>
            Maximum possible value of the range that can be scrolled to.  Handled by the control by default.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.MinimumViewportSize">
            <summary>
            Gets or sets the minimum viewport size that represents the data set drawn by the chart.
            </summary>
            <remarks>
            If this <see cref="!:AxisScrolBar"/> is related to a date/time axis the value has to be a <see cref="T:System.TimeSpan"/> value.
            For a numeric axis, the value is numeric.
            For a string axis, the value is interpreted as minimum number of coordinate values along the axis. 
            </remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.ChartContextWrapper">
            <summary>
            Wraps the Chart context and synchonizes the chart state with AxisScrollBar
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisScrollBar.ResizableScrollbarWrapper">
            <summary>
            Wraps the ResizableScrollBar and synchonizes viewports of ResizableScrollBar and AxisScrollBar
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartLabel">
            <summary>
            Custom content positioned between other axis area elements or between a <see cref="!:Legend"/> and the rest of the axis area.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartLabel.CreateVisual(System.Object)">
            <summary>
            Draws the visual elements.  To be called by charting framework only, do not call directly from code.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartLabel.Child">
            <summary>
            Custom content that is be defined explicitly i.e. not via a DataTemplate.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartLabel.Orientation">
            <summary>
            Direction in which the custom content should align to. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartLabel.RangeFrom">
            <summary>
            Minimum axis value defining the lower edge of the space in which to render the ChartLabel.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartLabel.RangeTo">
            <summary>
            Maximum axis value defining the upper edge of the space in which to render the ChartLabel.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup">
            <summary>
            A popup that summarizes all Series that are spanned in the X-Axis on a mouse hover over the chart coordinate system area.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.RelativePoisitionXProperty">
            <summary>
            Identifies the RelativePositionX dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.RelativePoisitionYProperty">
            <summary>
            Identifies the RelativePositionY dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.XOffsetProperty">
            <summary>
            Identifies the XOffset dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.YOffsetProperty">
            <summary>
            Identifies the YOffset dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.IndexTemplateProperty">
            <summary>
            Identifies the IndexTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.DataTemplateProperty">
            <summary>
            Identifies the DataTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.ShowChromeProperty">
            <summary>
            Identifies the ShowChrome dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.RectangleTemplateProperty">
            <summary>
            Identifies the RectangleTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.PointerVisibilityProperty">
            <summary>
            Identifies the PointerVisibility dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.RelativePositionX">
            <summary>
            Relative position of the popup, along the Chart area's X-axis.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.RelativePositionY">
            <summary>
            Relative position of the popup, along the Chart area's Y-axis.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.XOffset">
            <summary>
            Offset of the popup from its relative position, along the Chart area's X-axis, in pixels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.YOffset">
            <summary>
            Offset of the popup from its relative position, along the Chart area's Y-axis, in pixels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.IndexTemplate">
            <summary>
            Custom XAML that replaces the default index section (typically the upper half) of the popup.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.DataTemplate">
            <summary>
            Custom XAML that replaces the default data section (typically the lower half) of the popup.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.ShowChrome">
            <summary>
            Whether to display control chrome and an index header in addition to the value template. Default: true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XRangePopup.PointerVisibility">
            <summary>
            Gets or sets the PointerVisibility property.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreasManager">
            <summary>
            Manages areas arround main chart area including axis annotations and legend areas
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.IMainChartAreaMemberContext">
            <summary>
            Defines the chart, coordinate mapping and axis relevant to every chart sub-member.  
            All elements of the chart should implement this interface.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.IMainChartAreaMemberContext.GetAxis(System.String)">
            <summary>
            Axis relevant to this member.
            </summary>
            <param name="axisName"></param>
            <returns></returns>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.IMainChartAreaMemberContext.Chart">
            <summary>
            Parent chart.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.IMainChartAreaMemberContext.CoordinatesMapping">
            <summary>
            ChartCoordinatesMapping relevant to this member.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreasManager.FindValidYAxis">
            <summary>
            This function is called to make sure the YAxis has data defined.
            If all series have independent axes, then the default y-axis is invalid and we are 
            fixing that situation here.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreasManager.InitializeChartAreas">
            <summary>
            Creating layout elements, on chart construction
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartAreasManager.CreateMissingAndReferencedAxes(ComponentArt.Silverlight.DataVisualization.Charting.AxisPosition,ComponentArt.Silverlight.DataVisualization.Charting.AxisChartAreaMembers)">
            <summary>
            Inspect the contents of axis area collections and creates missing axes 
            </summary>
            <param name="position"></param>
            <param name="members"></param>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping">
            <summary>
             Deals with one-dimensional and two-dimensional coordinates in charting. 
             Used internall in the charting implementation. 
             To be used in user code only when implementing custom chart area members.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.Data2Logical(System.Object,System.Object)">
            <summary>
            To be used in user code only when implementing custom chart area members.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.Data2Logical(System.Object,System.Double,System.Object,System.Double)">
            <summary>
            To be used in user code only when implementing custom chart area members.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.Data2Target(System.Object,System.Object)">
            <summary>
            To be used in user code only when implementing custom chart area members.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.Data2Target(System.Object,System.Double,System.Object,System.Double)">
            <summary>
            To be used in user code only when implementing custom chart area members.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.Data2Device(System.Object,System.Object,System.Double)">
            <summary>
            To be used in user code only when implementing custom chart area members.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.Data2Device(System.Object,System.Double,System.Object,System.Double,System.Double)">
            <summary>
            To be used in user code only when implementing custom chart area members.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.Logical2Target(System.Double,System.Double)">
            <summary>
            To be used in user code only when implementing custom chart area members.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.Logical2Device(System.Double,System.Double,System.Double)">
            <summary>
            To be used in user code only when implementing custom chart area members.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.Target2Device(System.Windows.Point,System.Double)">
            <summary>
            To be used in user code only when implementing custom chart area members.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.Target2Device(System.Double,System.Double,System.Double)">
            <summary>
            To be used in user code only when implementing custom chart area members.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.XCoordinate(System.Windows.Point)">
            <summary>
            Relevant X-Coordinate of the provided Point.
            To be used in user code only when implementing custom chart area members.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.YCoordinate(System.Windows.Point)">
            <summary>
            Relevant Y-Coordinate of the provided point.
            To be used in user code only when implementing custom chart area members.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.GetTargetViewPoint">
            <summary>
            To be used in user code only when implementing custom chart area members.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.PieDevicePoint(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            To be used in user code only when implementing custom PieChart area members.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.Width">
            <summary>
            Width of this specific ChartCoordinatesMapping.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.Height">
            <summary>
            Height of this specific ChartCoordinatesMapping.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.Depth">
            <summary>
            Depth of this specific ChartCoordinatesMapping.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.ActualDepth">
            <summary>
            ActualDepth of this specific ChartCoordinatesMapping after all renderings have been done.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.IsHorizontal">
            <summary>
            Whether the object is horizonatal or vertical.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.Is3D">
            <summary>
            Whether the object is 2 or 3 dimensional
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.IsRadar">
            <summary>
            Whether the object is related to a RadarChart.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.IsNegative">
            <summary>
            Whether the object is positive or negative, relative to the Y-axis value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.PieAngleBegin">
            <summary>
            To be used in user code only when implementing custom PieChart area members.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.PieAngleEnd">
            <summary>
            To be used in user code only when implementing custom PieChart area members.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.CenterOffsetX">
            <summary>
            To be used in user code only when implementing custom PieChart area members.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.CenterOffsetY">
            <summary>
            To be used in user code only when implementing custom PieChart area members.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.PieThickness">
            <summary>
            To be used in user code only when implementing custom PieChart area members.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.PieCenter">
            <summary>
            To be used in user code only when implementing custom PieChart area members.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.ActualPieThickness">
            <summary>
            To be used in user code only when implementing custom PieChart area members.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping.PieRadius">
            <summary>
            To be used in user code only when implementing custom PieChart area members.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateAxisStackPanel">
            <summary>
            Custom StackPannel implementation used for arranging objects in the CoordinateAxis.  For internal use by charting engine.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateAxisStackPanel.Dispose">
            <summary>
            Unhook associated event handlers.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateAxisStackPanel.PositionProperty">
            <summary>
            Identifies the Position dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateAxisStackPanel.TryToConvertMinMax">
            <summary>
            Converting values that might be set in XAML a
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateAxisStackPanel.AxisAnnotation">
            <summary>
            Object describing the labels (annotations) along the axis.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateAxisStackPanel.MinValue">
            <summary>
            Minimum value of the range to draw datapoints in.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateAxisStackPanel.MaxValue">
            <summary>
            Maximum value of the range to draw datapoints in.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateAxisStackPanel.Members">
            <summary>
            Collection of sibling CoordinateAxisStackPanels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateAxisStackPanel.Position">
            <summary>
            Location of axis annotations relative to the chart (e.g. Top, Bottom, Left, Right).
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateLines">
            <summary>
            A collection of CoordinatLines displayed in the CoordinateSystem, that form the grid behind the series.  They can be Major or Minor.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.IXYMainChartAreaMember">
            <summary>
            Interface all XYChart sub-members should implement.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateLines.MajorProperty">
            <summary>
            Identifies the Major dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateLines.CoordinatesProperty">
            <summary>
            Identifies the Coordinates dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateLines.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateLines.StrokeDashArrayProperty">
            <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateLines.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateLines.AxisIdProperty">
            <summary>
            Identifies the AxisId dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateLines.CreateVisual(System.Object)">
            <summary>
            Draws the visual elements.  To be called by charting framework only, do not call directly from code.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateLines.Major">
            <summary>
            Whether this CoordinateLine represents a major or minor (larger or smaller) interval demarcation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateLines.Coordinates">
            <summary>
            Object describing the system to uniquely determine the positions of datapoints.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateLines.Stroke">
            <summary>
            Object describing how the CoordinateLine is painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateLines.StrokeDashArray">
            <summary>
            Pattern of dash sizes to apply to the drawn CoordinateLine.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateLines.StrokeThickness">
            <summary>
            Thickness of the drawn CoordinateLine.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateLines.AxisId">
            <summary>
            Identifier for the associated axis.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripeContext">
            <summary>
            Context object available inside <see cref="!:CoordinateStripe"/> templates.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripeContext.Brush">
            <summary>
            Object describing how the CoordinateStripe is to be painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripeContext.Rect">
            <summary>
            Object that is to be drawn as the CoordinateStripe.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripeContext.MinValue">
            <summary>
            Smallest value on the axis that this CoordinateStripe runs parallel to.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripeContext.MaxValue">
            <summary>
            Largest value on the axis that this CoordinateStripe runs parallel to.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripeContext.Odd">
            <summary>
            Whether this CoordinateStripe has an odd index.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripes">
            <summary>
            Rectangles used to visually separate axis intervals in the main chart area.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripes.MajorProperty">
            <summary>
            Identifies the Major dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripes.AxisIdProperty">
            <summary>
            Identifies the AxisId dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripes.CoordinatesProperty">
            <summary>
            Identifies the Coordinates dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripes.BrushProperty">
            <summary>
            Identifies the Brush dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripes.StripeTemplateProperty">
            <summary>
            Identifies the StripeTemplate dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripes.CreateVisual(System.Object)">
            <summary>
            Draws the visual elements.  To be called by charting framework only, do not call directly from code.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripes.Odd">
            <summary>
            Whether this CoordinateStripe has an odd index.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripes.AxisId">
            <summary>
            Identifier of the associated Axis.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripes.Coordinates">
            <summary>
            Object describing the system to uniquely determine the positions of datapoints.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripes.Brush">
            <summary>
            Brush to apply to the CoordinateStripe.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateStripes.StripeTemplate">
            <summary>
            Custom XAML template that replaces the default CoordinateStripe.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame">
            <summary>
            Region bordering the main chart area.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame"/> class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.FillProperty">
            <summary>
            Identifies the Fill dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.DepthPlaneFillProperty">
            <summary>
            Identifies the DepthPlaneFill dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.DepthPlaneStrokeProperty">
            <summary>
            Identifies the DepthPlaneStroke dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.DepthPlaneStrokeThicnessProperty">
            <summary>
            Identifies the DepthPlaneStrokeThicness dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.TemplateProperty">
            <summary>
            Identifies the Template dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.Fill">
            <summary>
            Object describing how the frame area is painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.Stroke">
            <summary>
            Object describing how the frame lines are painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.StrokeThickness">
            <summary>
            Width of the frame lines.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.DepthPlaneFill">
            <summary>
            Object describing how the 3D-effect area is painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.DepthPlaneStroke">
            <summary>
            Object describing how the 3D-effect lines are painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.DepthPlaneStrokeThicness">
            <summary>
            Width of the 3D-effect lines.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemFrame.Template">
            <summary>
            Custom XAML template that replaces the default CoordinateSystemFrame rendering.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels">
            <summary>
            Labels applied to the axis of a RadarChart.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.TemplateProperty">
            <summary>
            Identifies the Template dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.CoordinatesProperty">
            <summary>
            Identifies the Coordinates dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.FormatProperty">
            <summary>
            Identifies the Format dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.FontFamilyProperty">
            <summary>
            Identifies the FontFamily dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.FontSizeProperty">
            <summary>
            Identifies the FontSize dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.FontStyleProperty">
            <summary>
            Identifies the FontStyle dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.FontWeightProperty">
            <summary>
            Identifies the FontWeight dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.FontBrushProperty">
            <summary>
            Identifies the FontBrush dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.LabelValueConverterProperty">
            <summary>
            Identifies the LabelValueConverter dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.Template">
            <summary>
            Custom XAML template that replaces the default axis label.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.Coordinates">
            <summary>
            Object describing the system to uniquely determine the positions of datapoints.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.Format">
            <summary>
            A standard or custom format string that is supported by the object to be formatted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.FontFamily">
            <summary>
            Gets or sets the preferred top-level font family for the text content in this element.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.FontSize">
            <summary>
            Gets or sets the font size for the axis labels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.FontStyle">
            <summary>
            Represents the style of a font face, such as normal or italic.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.FontWeight">
            <summary>
            Refers to the density of a typeface, in terms of the heaviness of the strokes.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.FontBrush">
            <summary>
            Gets or sets the System.Windows.Media.Brush to apply to the label text.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarAxisLabels.LabelValueConverter">
            <summary>
            An object that exposes methods for modifying the data as it passes through the binding engine.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarGlare">
            <summary>
            Used to set the amount of glare on RadarCharts.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarGlare.StrengthProperty">
            <summary>
            Identifies the Strength dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarGlare.Strength">
            <summary>
            Strength of the glare layer, between 0 (no glare) and 1 (maximum).
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarXAxisLabels">
            <summary>
            Defines the labels visible on the X axis of the RadarChart.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarXAxisLabels.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarXAxisLabels.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarXAxisLabels.Orientation">
            <summary>
            Relative direction in which the outer axis labels are drawn (Circular, Horizontal, Radial).  Default is Horizontal.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarYAxisLabels">
            <summary>
            Defines the labels visible on the Y axis of the RadarChart.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarYAxisLabels.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ConstantLine">
            <summary>
            Creates a fixed constant line that can be styled, on the coordinate grid behind the chart.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ConstantLine.#ctor">
            <summary>
            Creates a fixed constant line that can be styled, on the coordinate grid behind the chart.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ConstantLine.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ConstantLine.StrokeDashArrayProperty">
            <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ConstantLine.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ConstantLine.AxisIdProperty">
            <summary>
            Identifies the AxisId dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ConstantLine.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ConstantLine.CreateVisual(System.Object)">
            <summary>
            Draws the visual elements.  To be called by charting framework only, do not call directly from code.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ConstantLine.Stroke">
            <summary>
            Object describing how the CoordinateLine is painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ConstantLine.StrokeDashArray">
            <summary>
            Pattern of dash sizes to apply to the drawn CoordinateLine.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ConstantLine.StrokeThickness">
            <summary>
            Thickness of the drawn CoordinateLine.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ConstantLine.AxisId">
            <summary>
            Identifier for the associated axis.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ConstantLine.Value">
            <summary>
            The value at which the constant line is drawn.  Must be of the same type as used by the axis the line is drawn on.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ConstantRange">
            <summary>
            Custom content applied over an interval of axis values in an XYChart's main area.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ConstantRange.FromProperty">
            <summary>
            Identifies the From dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ConstantRange.ToProperty">
            <summary>
            Identifies the To dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ConstantRange.AxisIdProperty">
            <summary>
            Identifies the AxisId dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ConstantRange.BackgroundProperty">
            <summary>
            Identifies the Background dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ConstantRange.BrushProperty">
            <summary>
            Identifies the Brush dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ConstantRange.TemplateProperty">
            <summary>
            Identifies the Template dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ConstantRange.CreateVisual(System.Object)">
            <summary>
            Draws the visual elements.  To be called by charting framework only, do not call directly from code.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ConstantRange.From">
            <summary>
            Minimum axis value defining the lower edge of the space in which to render the ConstantRange.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ConstantRange.To">
            <summary>
            Maximum axis value defining the upper edge of the space in which to render the ConstantRange.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ConstantRange.AxisId">
            <summary>
            Identifier of the associated Axis.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ConstantRange.Background">
            <summary>
            Brush to apply to the background of this ConstantRange.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ConstantRange.Brush">
            <summary>
            Brush applied to the area of the coordinates covered by this ConstantRange.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ConstantRange.Template">
            <summary>
            Template for custom content.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker">
            <summary>
            A class that defines the vertical line that allows the user to track the relevant X coordinate 
            by moving the mouse over the chart coordinate area.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.Dispose">
            <summary>
            Cleans up after disposing.  Not to be called directly from code.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.VerticalVisibleProperty">
            <summary>
            Identifies the VerticalVisible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.HorizontalVisibleProperty">
            <summary>
            Identifies the HorizontalVisible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.SeriesIdProperty">
            <summary>
            Identifies the SeriesId dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.AnimationProgressProperty">
            <summary>
            Identifies the AnimationProgress dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.MarkerSizeProperty">
            <summary>
            Identifies the MarkerSize dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.OnMouseEnter(System.Windows.Point)">
            <summary>
            Overrides the base class method. For internal use, do not call directly from external code.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.OnMouseLeave(System.Windows.Point)">
            <summary>
            Overrides the base class method.  For internal use, do not call directly from external code.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.OnMouseLeftButtonDown(System.Windows.Point)">
            <summary>
            Overrides the base class method.  For internal use, do not call directly from external code.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.OnMouseLeftButtonUp(System.Windows.Point)">
            <summary>
            Overrides the base class method.  For internal use, do not call directly from external code.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.OnVisibleChanged(System.Boolean)">
            <summary>
            Overrides the base implementation.  For internal use, do not call directly from external code.
            </summary>
            <param name="visible">The member visibility.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.CreateVisual(System.Object)">
            <summary>
            Draws the SeriesTracker.  Not to be called directly, for use by charting framework.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.VerticalVisible">
            <summary>
            Whether to render the vertical crosshair when the SeriesTracker is used.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.HorizontalVisible">
            <summary>
            Whether to render the horizontal crosshair when the SeriesTracker is used.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.SeriesId">
            <summary>
            Identifier of the Series that this SeriesTracker should sweep.  Can be a comma-delimited list.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.AnimationProgress">
            <summary>
            Current progress of the annimation, with 0 just beginning and 1 meaning it has finished.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTracker.MarkerSize">
            <summary>
            Gets or sets the tracker marker size in pixels.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker">
            <summary>
            A class that defines the popup that shows the values of all relevant DataPoints of the currently tracked X value.  
            The popup is visible whenever the mouse is hovered anywhere on the coordinate plane of the chart.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker.IndexTemplateProperty">
            <summary>
            Identifies the IndexTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker.DataPointTemplateProperty">
            <summary>
            Identifies the DataPointTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker.SeriesIdsCSSProperty">
            <summary>
            Identifies the SeriesIdsCSS dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker.ShowDefaultChromeProperty">
            <summary>
            Identifies the ShowDefaultChrome dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker.OnMouseEnter(System.Windows.Point)">
            <summary>
            Overrides the base class method.  For internal use, do not call directly from external code.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker.OnMouseLeave(System.Windows.Point)">
            <summary>
            Overrides the base class method.  For internal use, do not call directly from external code.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker.OnMouseLeftButtonDown(System.Windows.Point)">
            <summary>
            Overrides the base class method.  For internal use, do not call directly from external code.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker.OnMouseLeftButtonUp(System.Windows.Point)">
            <summary>
            Overrides the base class method.  For internal use, do not call directly from external code.
            </summary>
            <param name="position">Mouse position within the main chart area.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker.CreateVisual(System.Object)">
            <summary>
            Draws the SeriesAnnotationTracker.  Not to be called directly, for use by charting framework.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker.IndexTemplate">
            <summary>
            Custom XAML template that replaces the default index area.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker.DataPointTemplate">
            <summary>
            Custom XAML template that replaces the default data area.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker.SeriesIdsCSS">
            <summary>
            Comma-delimited list of Series identifiers to be swept by the SeriesTracker.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationTracker.ShowDefaultChrome">
            <summary>
            Whether to render a chrome effect on the SeriesTracker.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTrackerTemplateNameConverter">
            <summary>
            Converter used to instantiate SeriesTracker from XAML.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTrackerTemplateNameConverter.#ctor">
            <summary>
            Initializes a new instance of the PaletteTypeConverter class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTrackerTemplateNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesTrackerTemplateNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.XRangeDataPointSelector">
            <summary>
            Provides support for selection of <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> along the X-Axis range.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.XRangeDataPointSelector.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.XRangeDataPointSelector.Dispose">
            <summary>
            Cleans up after disposing.  Not to be called directly from code.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.XRangeDataPointSelector.CreateVisual(System.Object)">
            <summary>
            Creates the selection visual.  Not to be called directly, for use by charting framework only.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XRangeDataPointSelector.SelectionProperty">
            <summary>
            Identifies the Selection dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XRangeDataPointSelector.SelectingRectangleTemplateProperty">
            <summary>
            Identifies the SelectingRectangleTemplate dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.XRangeDataPointSelector.OnVisibleChanged(System.Boolean)">
            <summary>
            Overrides the base implementation. Called from charting framework. Do not call from user code.
            </summary>
            <param name="visible">The member visibility.</param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XRangeDataPointSelector.Selection">
            <summary>
            Collection of input data items in the current selection.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XRangeDataPointSelector.SelectingRectangleTemplate">
            <summary>
            DataTemplate for the selecting rectangle. Use to customize appearance of the <see cref="!:XRangeDataSelector"/>.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XRangeDataPointSelector.SeriesId">
            <summary>
            The series Id of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.Series"/> whose <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/>s are used to create the selection.
            </summary>
            <remarks>
            May be ommited in the case when all the series are created form the same set of data items. Note that it is not true in the case of dynamic series or
            series with private data sources.
            </remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ObjectCollection">
            <summary>
            A collection of objects.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle">
            <summary>
            Supports zooming on a chart by the method of drawing a zoom-rectangle with the mouse.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.Dispose">
            <summary>
            Cleans up after disposing.  Not to be called directly from code.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.CreateVisual(System.Object)">
            <summary>
            Creates the selection visual.  Not to be called directly, for use by charting framework.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.ZoomRectangleTemplateProperty">
            <summary>
            Identifies the ZoomRectangleTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.BackButtonEnabledProperty">
            <summary>
            Identifies the BackButtonEnabled dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.HomeButtonEnabledProperty">
            <summary>
            Identifies the HomeButtonEnabled dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.XAxisZoomingEnabledProperty">
            <summary>
            Identifies the XAxisZoomingEnabled dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.YAxisZoomingEnabledProperty">
            <summary>
            Identifies the YAxisZoomingEnabled dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.SelectedRectangleProperty">
            <summary>
            Identifies the SelectedRectangle dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.ZoomRectangleTemplate">
            <summary>
            Custom XAML template for the zoom rectangle when it is drawn.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.BackButtonEnabled">
            <summary>
            Whether the back button is enabled, default true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.HomeButtonEnabled">
            <summary>
            Whether the Home button is enabled, default true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.XAxisZoomingEnabled">
            <summary>
            Whether one can expand the zoom along the X-Axis. Default is true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.YAxisZoomingEnabled">
            <summary>
            Whether one can expand the zoom along the Y-Axis. Default is true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.SelectedRectangle">
            <summary>
            Gets the range of values of the x and y-coordinates defined by this <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle"/>.
            </summary>
            <remarks>
            This property is set when the selection is made, i.e. when the left mouse button is released.
            </remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.SelectedZoomRectangle">
            <summary>
            Class that contains coordinates of the rectangle selected by a <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle"/>.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.SelectedZoomRectangle.XRangeStart">
            <summary>
            Starting x-coordinate.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.SelectedZoomRectangle.XRangeEnd">
            <summary>
            Ending x-coordinate.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.SelectedZoomRectangle.YRangeStart">
            <summary>
            Starting y-coordinate.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ZoomRectangle.SelectedZoomRectangle.YRangeEnd">
            <summary>
            Ending y-coordinate.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesAnimator">
            <summary>
            Description of how an <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeries"/> is to be animated.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesAnimator.#ctor">
            <summary>
            Initializes new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesAnimator"/> class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesAnimator.PolygonAnimator">
            <summary>
            Area polygon animator.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesAnimator.MarkersAnimator">
            <summary>
            Markers animator.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesAnimator.SeriesLineAnimator">
            <summary>
            Series line animator.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesAnimatorTypeConverter">
            <summary>
            Type converter for <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesAnimator"/>.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesAnimatorTypeConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesAnimatorTypeConverter"/> class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesAnimatorTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesAnimatorTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimator">
            <summary>
            Animator class for <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeries"/> animations.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimator"/> class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimator.DataPointAnimationProperty">
            <summary>
            Identifies the DataPointAnimation dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimator.DataPointAnimationOverlapProperty">
            <summary>
            Identifies the DataPointAnimationOverlap dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimator.DataPointAnimation">
            <summary>
            Specifies the type of animation to apply to the DataPoints of this series.
            </summary> 
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimator.DataPointAnimationOverlap">
            <summary>
            Gets or sets the amount of overlap on DataPoint animations.
            </summary>
            <remarks>
            The value 0 means that there is no overlap and data points are animated sequentially.
            The value 1 means that animations completely overlap and animation of all data points is simultaneous.
            Values between 0 and 1 describe animations that combine these two extreme approaches.
            </remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimatorTypeConverter">
            <summary>
            Type converter for <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimator"/>.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimatorTypeConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimatorTypeConverter"/> class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimatorTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimatorTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.LineSeriesAnimator">
            <summary>
            Animator that can be used to animate LineSeries.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.LineSeriesAnimator.#ctor">
            <summary>
            Initializes new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.LineSeriesAnimator"/> class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.LineSeriesAnimator.Create(System.String)">
            <summary>
            Creates a LineSeriesAnimator from the provided type.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.LineSeriesAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeriesAnimator.PolygonAnimator">
            <summary>
            Area polygon animator.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeriesAnimator.MarkersAnimator">
            <summary>
            Markers animator.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.LineSeriesAnimatorTypeConverter">
            <summary>
            Type converter for <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.LineSeriesAnimator"/>.
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.LineSeriesAnimatorTypeConverter.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.LineSeriesAnimatorTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.LineSeriesAnimatorTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesAnimator">
            <summary>
            Animator used for all marker series.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesAnimator.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesAnimator.DataPointAnimationProperty">
            <summary>
            Identifies the DataPointAnimation dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesAnimator.DataPointAnimationOverlapProperty">
            <summary>
            Identifies the DataPointAnimationOverlap dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesAnimator.DataPointAnimation">
            <summary>
            Specifies the type of animation to apply to the DataPoints of this series.
            </summary> 
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesAnimator.DataPointAnimationOverlap">
            <summary>
            Gets or sets the amount of overlap on DataPoint animations.
            </summary>
            <remarks>
            The value 0 means that there is no overlap and data points are animated sequentially.
            The value 1 means that animations completely overlap and animation of all data points is simultaneous.
            Values between 0 and 1 describe animations that combine these two extreme approaches.
            </remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesAnimatorTypeConverter">
            <summary>
            Type converter for <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesAnimator"/>.
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesAnimatorTypeConverter.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesAnimatorTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesAnimatorTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.OHLCSeriesAnimator">
            <summary>
            Animator used for animating financial (Open-High-Low-Close) series.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.OHLCSeriesAnimator.Create(System.String)">
            <summary>
            Creates an instance of this animator.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.OHLCSeriesAnimatorTypeConverter">
            <summary>
            Type converter for <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.OHLCSeriesAnimator"/>.
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.OHLCSeriesAnimatorTypeConverter.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.OHLCSeriesAnimatorTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.OHLCSeriesAnimatorTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeries">
            <summary>
            XYChart series-type which fills in the portion of the graph beneath the line connecting datapoints.
            Typically used to represent cumulative totals over time.
            </summary>
            <remarks><para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeries.YPath"/> property to the name of the data property containing the Y value for the series.</para>
            <para><see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPoints"/> collection is automatically populated with <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> objects when the chart is bound to data.</para></remarks>
            <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.XYChart"/>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase">
            <summary>
            Base class for area type series.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase"/> class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.MarkerProperty">
            <summary>
            Identifies the Marker dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.MarkerVisibleProperty">
            <summary>
            Identifies the MarkerVisible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.AreaKindProperty">
            <summary>
            Identifies the AreaKind dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.Is3DProperty">
            <summary>
            Identifies the Is3D dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.LineColorProperty">
            <summary>
            Identifies the LineColor dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.LineThicknessProperty">
            <summary>
            Identifies the LineThickness dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.LineDashStyleProperty">
            <summary>
            Identifies the LineDashStyle dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.LineDashesProperty">
            <summary>
            Identifies the LineDashes dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.DoubleLineProperty">
            <summary>
            Identifies the DoubleLine dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.SeriesLineVisibleProperty">
            <summary>
            Identifies the SeriesLineVisible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.GradientTopColorShiftProperty">
            <summary>
            Identifies the GradientTopColorShift dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.GradientBottomColorShiftProperty">
            <summary>
            Identifies the GradientBottomColorShift dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.LineKindProperty">
            <summary>
            Identifies the LineKind dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.AnimatorProperty">
            <summary>
            Identifies the Animator dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.createdAnimator">
            <summary>
            Returns the used <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesAnimator"/>, or, if none yet set, a new one with default settings using this series.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.DefaultAnimator">
            <summary>
            Implementation of IAnimationProvider interface.  
            Returns the default animator.
            Use Animator property to set the animator for the series. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.Marker">
            <summary>
            Graphic to draw at each datapoint.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.MarkerVisible">
            <summary>
            Whether the datapoint Markers associated with this AreaSeries are visible.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.AreaKind">
            <summary>
            Routine to use for generating the line connecting datapoints.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.Is3D">
            <summary>
            Whether to use 3D perspective rendering on this AreaSeries.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.LineColor">
            <summary>
            Color to apply to the Line associated with the AreaSeries.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.LineThickness">
            <summary>
            Thickness of the associated Line, in pixels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.LineDashStyle">
            <summary>
            Pattern of lines and spaces to apply to the associated Line.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.LineDashes">
            <summary>
            Pattern of dash sizes to apply to the associated Line.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.DoubleLine">
            <summary>
            Whether to draw a thin border on the line connecting datapoints.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.SeriesLineVisible">
            <summary>
            Whether to render a separate Line connecting the datapoints in the series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.GradientTopColorShift">
            <summary>
            State of the color fill at the top edge of the AreaSeries.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.GradientBottomColorShift">
            <summary>
            State of the color fill at the bottom edge of the AreaSeries.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.LineKind">
            <summary>
            Routine to use for generating the line connecting datapoints.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesBase.Animator">
            <summary>
            Object describing how the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeries"/> is to be animated.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeries"/> class. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeries.YPathProperty">
            <summary>
            Identifies the YPath dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeries.YPath">
            <summary>
                The name of a property in a DataPoint DataContext object that contains the data point's y-value.
            </summary>
            <remarks>Value can be a string <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Calc_IntroductionTo.htm">Calc</a> expression that is evaluated at run-time. 
            Use Calc to create conditions or calculations on the actual values assigned.</remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesRange">
            <summary>
            XYChart series-type similar to <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeries"/> except that it uses two Y-values 
            (From and To) to define an area with both a variable height and position.
            Used to convey a changing range of values, rather than an absolute amount.
            </summary>
            <remarks><para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesRange.FromPath"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesRange.ToPath"/> properties to the names of the data properties containing the Y value for the beginning and the end of the range.</para>
            <para><see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPoints"/> collection is automatically populated with <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> objects when the chart is bound to data.</para></remarks>
            <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.XYChart"/>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesRange"/> class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesRange.FromPathProperty">
            <summary>
            Identifies the FromPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesRange.ToPathProperty">
            <summary>
            Identifies the ToPath dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesRange.FromPath">
            <summary>
                The name of a property in a DataPoint DataContext object that, for range charts, contains the data point's From value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesRange.ToPath">
            <summary>
                The name of a property in a DataPoint DataContext object that, for range charts, contains the data point's To value.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeries">
            <summary>
            XYChart series-type which uses rectangular bars with lengths proportional to the values that they represent.
            Generally used for plotting discrete (discontinuous) data.
            </summary>
            <remarks><para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.BarSeries.YPath"/> property to the name of the data property containing the Y value for the series.</para>
            <para>Set the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.BarKind"/> property to change the visual type of bar drawn.</para>
            <para><see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPoints"/> collection is automatically populated with <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> objects when the chart is bound to data.</para>
            When there are more bars drawn than pixels available along the axis, XYChart will automatically draw the BarSeries as an <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeries"/>.
            </remarks>
            <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.XYChart"/>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesBase">
            <summary>
            Base class for Bar-type series.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesBase.BarKindProperty">
            <summary>
            Identifies the BarKind dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesBase.AnimatorProperty">
            <summary>
            Identifies the Animator dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesBase.DataPointRectangleTemplateProperty">
            <summary>
            Identifies the DataPointRectangleTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesBase.MaximumBarWidthProperty">
            <summary>
            Identifies the MaximumBarWidth dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesBase.createdAnimator">
            <summary>
            Returns the used <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimator"/>, or, if none yet set, a new one with default settings using this series.
            </summary>
            <returns><see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimator"/></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesBase.DefaultAnimator">
            <summary>
            Implementation of IAnimationProvider interface.  
            Returns the default animator.
            Use Animator property to set the animator for the series. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesBase.BarKind">
            <summary>
            Base shape to use for drawing the BarSeries datapoints.  Default is Rectangle.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesBase.Animator">
            <summary>
            <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesAnimator"/> to use for animating this series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesBase.DataPointRectangleTemplate">
            <summary>
            FrameworkElement custom XAML template for a data point used when <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesBase.BarKind"/> is 'Rectangle'.  This template is ignored for other chart kinds.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesBase.MaximumBarWidth">
            <summary>
            Gets or sets the maximum bar width in pixels.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.BarSeries.YPathProperty">
            <summary>
            Identifies the YPath dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.BarSeries.YPath">
            <summary>
            Name of a property in the DataPoint DataContext object that contains the data point's y-value.
            </summary>
            <remarks>Value can be a string <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Calc_IntroductionTo.htm">Calc</a> expression that is evaluated at run-time. 
            Use Calc to create conditions or calculations on the actual values assigned.</remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesRange">
            <summary>
            XYChart series-type similar to <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeries"/>, except that each datapoint uses
            two Y-values (From and To) to define a bar with a variable height and position.
            Used to convey a range of values or step, rather than an absolute amount.
            </summary>
            <remarks><para>Set the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.BarKind"/> property to change the visual type of bar drawn.</para>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesRange.FromPath"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesRange.ToPath"/> properties to the names of the data properties 
            containing the Y value for the beginning and the end of the bar.</para>
            <para><see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPoints"/> collection is automatically populated with <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> objects when the chart is bound to data.</para></remarks>
            <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.XYChart"/>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesRange.FromPathProperty">
            <summary>
            Identifies the FromPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesRange.ToPathProperty">
            <summary>
            Identifies the ToPath dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesRange.FromPath">
            <summary>
                The name of a property in a DataPoint DataContext object that, for range charts, contains the data point's From value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.BarSeriesRange.ToPath">
            <summary>
                The name of a property in a DataPoint DataContext object that, for range charts, contains the data point's To value.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.CandlestickSeries">
             <summary>
             XYChart series-type which uses "candlesticks" to represent stock price data (High, Open, Close, Low).
             </summary>
             <remarks>
             Each candlestick (datapoint) represents the range of price movement over a given time interval, with the upper and lower
             "wicks" representing the High and Low prices, and the "real body" representing the Open and Close prices.
             The body of the candlestick is colored green if the Close price is greater than the Open price, and red otherwise.
            <para>Set the <see cref="!:OpenPath"/>, <see cref="!:ClosePath"/>, <see cref="!:HighPath"/> and <see cref="!:LowPath"/> 
             properties to the names of the data properties containing the corresponding values for this series.</para>
             <para><see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPoints"/> collection is automatically populated with <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> objects when the chart is bound to data.</para></remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries">
            <summary>
            Represents the Open-High-Low-Close type of financial Series that shows the 4 data values of a single datapoing on an XYChart.
            </summary>
            <remarks><para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.OpenPath"/>, <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.ClosePath"/>, <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.HighPath"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.LowPath"/> 
            properties to the names of the data properties containing the corresponding values for this series.</para>
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.OpenPathProperty">
            <summary>
            Identifies the OpenPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.HighPathProperty">
            <summary>
            Identifies the HighPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.LowPathProperty">
            <summary>
            Identifies the LowPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.ClosePathProperty">
            <summary>
            Identifies the ClosePath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.DataPointWidthProperty">
            <summary>
            Identifies the DataPointWidth dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.AnimatorProperty">
            <summary>
            Identifies the Animator dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.DefaultAnimator">
            <summary>
            Implementation of IAnimationProvider interface.  
            Returns the default animator.
            Use Animator property to set the animator for the series. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.OpenPath">
            <summary>
                The name of a property in a DataPoint DataContext object that, for financial charts, contains the data point's Open value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.HighPath">
            <summary>
                The name of a property in a DataPoint DataContext object that, for financial charts, contains the data point's High value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.LowPath">
            <summary>
                The name of a property in a DataPoint DataContext object that, for financial charts, contains the data point's Low value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.ClosePath">
            <summary>
                The name of a property in a DataPoint DataContext object that, for financial charts, contains the data point's Close value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.DataPointWidth">
            <summary>
            Width of the datapoint marker.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.StockExchangeSeries.Animator">
            <summary>
            The Animator object used to animate this series.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CandlestickSeries.#ctor">
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.CandlestickSeries"/> class.
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries">
            <summary>
            A type of series used within XYCharts that draws a line between datapoints.  Different types of lines can be configured within this type of series.
            </summary>
            <remarks><para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.YPath"/> property to the name of the data property containing the Y value for the series.</para>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.LineKind"/> property to specify what type of line will be connecting the data points.</para>
            <para><see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPoints"/> collection is automatically populated with <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> objects when the chart is bound to data.</para></remarks>
            <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.XYChart"/>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase">
            <summary>
            Base class for all Marker Series classes.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.BubbleSizingFactorProperty">
            <summary>
            Identifies the BubbleSizingFactor dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.MarkerProperty">
            <summary>
            Identifies the Marker dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.MarkerPathProperty">
            <summary>
            Identifies the MarkerPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.MarkerSizeProperty">
            <summary>
            Identifies the MarkerSize dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.MarkerFillProperty">
            <summary>
            Identifies the MarkerFill dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.MarkerStrokeProperty">
            <summary>
            Identifies the MarkerStroke dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.MarkerStrokeThicknessProperty">
            <summary>
            Identifies the MarkerStrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.DataPointAnimationProperty">
            <summary>
            Identifies the DataPointAnimation dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.AnimatorProperty">
            <summary>
            Identifies the Animator dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.MaximumBubbleSizeProperty">
            <summary>
            Identifies the MaximumBubbleSizeProperty dependency property.
            </summary> 
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.ScalingTypeProperty">
            <summary>
            Identifies the ScalingType dependency property.
            </summary> 
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.DefaultAnimator">
            <summary>
            Implementation of IAnimationProvider interface.  
            Returns the default animator.
            Use Animator property to set the animator for the series. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.BubbleSizingFactor">
            <summary>
            Used only for bubble chart types to determine the size of a data point bubble. 
            If ScalingType is set to ScaleByWidth then the width of a bubble in pixels is the multiple of the bubble size value (bound to the ZPath) and the BubbleSizingFactor.
            Height is calculated approprietely to maintain aspect ratio.
            Likewise, if ScalingType is set to ScaleByHeight or ScaleByArea the height or the area of a bubble are calculated in the same fashion.
            If BubbleSizingFactor property is set then MaximumBubbleSize property is ignored.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.Marker">
            <summary>
            The type of image to draw as the marker on the datapoint.  
             Predefined marker templates that can be specified as strings include: Circle, Bubble, Square, Square3D,
            Diamond, Diamond3D, Plus, Plus3D, Cross, Cross3D, Triangle, TriangleE, TriangleW, TriangleS,
            Arrow, ArrowN, ArrowS, ArrowW, ArrowNW, ArrowNE, ArrowSW, ArrowSE.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.MarkerPath">
            <summary>
            Name of the data series of numeric values that define the location of datapoints on the Y-axis.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.MarkerSize">
            <summary>
            Gets or sets the size of the marker.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.MarkerFill">
            <summary>
                Defines the brush of the stroke of the marker shape.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.MarkerStroke">
            <summary>
            Object describing how the border of the marker image is painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.MarkerStrokeThickness">
            <summary>
            Thickness of the border of the marker image.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.DataPointAnimation">
            <summary>
            The kind of predefined animation to be applied to DataPoints.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.Animator">
            <summary>
            The Aanimator used to animate this series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.MaximumBubbleSize">
            <summary>
            Used only for bubble charts to determine the desired size of the largest data point bubble in the series. Other bubbles are then scaled relative to the largest.
            If ScalingType is set to ScaleByWidth or ScaleByHeight then this property represents the desired width or height in pixels for the largest bubble.  
            Likewise, if ScalingType is set to ScaleByArea then this property represents the area in pixels squared for the largest bubble. 
            If BubbleSizingFactor property is set then MaximumBubbleSize property is ignored.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeriesBase.ScalingType">
            <summary>
                This property is used for bubble charts to determine if bubble size scaling will be performed linearly in case of ScaleByWidth or ScaleByHeight scaling types
                or quadratically in case of ScaleByArea scaling type. See MaximumBubbleSize or BubbleSizingFactor properties.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.#ctor">
            <summary>
            Default constructor for LineSeries.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.YPathProperty">
            <summary>
            Identifies the YPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.MarkerVisibleProperty">
            <summary>
            Identifies the MarkerVisible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.MarkerProperty">
            <summary>
            Identifies the Marker dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.LineKindProperty">
            <summary>
            Identifies the LineKind dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.ThicknessProperty">
            <summary>
            Identifies the Thickness dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.DashStyleProperty">
            <summary>
            Identifies the DashStyle dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.LineDashesProperty">
            <summary>
            Identifies the LineDashes dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.DoubleLineProperty">
            <summary>
            Identifies the DoubleLine dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.AnimatorProperty">
            <summary>
            Identifies the Animator dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.YPath">
            <summary>
                The name of a property in a DataPoint DataContext object that contains the data point's y-value.
            </summary>
            <remarks>Value can be a string <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Calc_IntroductionTo.htm">Calc</a> expression that is evaluated at run-time. 
            Use Calc to create conditions or calculations on the actual values assigned.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.MarkerVisible">
            <summary>
            Whether the datapoint Markers associated with this LineSeries are visible.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.Marker">
            <summary>
            The Marker that will be drawn at the value of each DataPoint.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.LineKind">
            <summary>
                This property indicates what line shape will be used to represent the series.
                It is used for the line in a line chart or the top edge of an area in an area chart. 
                In other chart types this property is ignored.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.Thickness">
            <summary>
            Thickness of the Line, in pixels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.DashStyle">
            <summary>
            Pattern of dashes and spaces to apply to this series.
            </summary>
            <remarks>
            Use this property to set a predefined dash patern. Note that custom dash pattern can be set using 
            the property <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.LineDashes"/>. If set, the property <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.LineDashes"/> overrides <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.DashStyle"/>.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.LineDashes">
            <summary>
            Gets or sets a collection of Double values that describe the pattern of dashes and gaps that are used to draw this series.
            </summary>
            <remarks>
            Use this property to customize the dash pattern. Note that some predefined patterns can be simply set using property <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.DashStyle"/>.
            If set, the property <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.LineDashes"/> overrides <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.DashStyle"/>.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.DoubleLine">
            <summary>
            Whether the rendering of the line series will appear as a thicker, double line.  Default is false.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.Animator">
            <summary>
            Controls the animation performed on the line series.  Different pre configured animators can be assigned.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries.ActualAnimator">
            <summary>
            The currently used Animator of this series.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeries">
            <summary>
            A type of series used within XYChart where a marker is placed at the value of a datapoint.  
            There are choices of numerous markers as well as the option of providing custom XAML for a marker.
            </summary>
            <remarks><para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeries.YPath"/> property to the name of the data property containing the Y value for the series. 
            The Marker will be placed on the chart so that its centre is located at the height of the Y value it is representing.</para>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeries.ZPath"/> property to the name of the data property containing the Z value for the series. 
            The size of the marker for each data point is based on this value, relative to the Z values of all datapoints in the series.</para>
            <para><see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPoints"/> collection is automatically populated with <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> objects when the chart is bound to data.</para></remarks>
            <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.XYChart"/>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeries.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeries.YPathProperty">
            <summary>
            Identifies the YPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeries.ZPathProperty">
            <summary>
            Identifies the ZPath dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeries.YPath">
            <summary>
            Name of the data series of numeric values that define the location of datapoints on the Y-axis.
            </summary>
            <remarks>Value can be a string <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Calc_IntroductionTo.htm">Calc</a> expression that is evaluated at run-time. 
            Use Calc to create conditions or calculations on the actual values assigned.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeries.ZPath">
            <summary>
            Name of the data series of numeric values that define the relative sizes of datapoints.
            </summary>
            <remarks>Value can be a string <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Calc_IntroductionTo.htm">Calc</a> expression that is evaluated at run-time. 
            Use Calc to create conditions or calculations on the actual values assigned.</remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.OHLCSeries">
            <summary>
            Represents the Open-High-Low-Close type of financial Series that shows the 4 data values of a single datapoing on an XYChart.
            </summary>
            <remarks><para>Set the <see cref="!:OpenPath"/>, <see cref="!:ClosePath"/>, <see cref="!:HighPath"/> and <see cref="!:LowPath"/> 
            properties to the names of the data properties containing the corresponding values for this series.</para>
            <para><see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Series.DataPoints"/> collection is automatically populated with <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> objects when the chart is bound to data.</para></remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.OHLCSeries.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointBarVisualBuilder">
            <summary>
            Base builder class for bar type data points
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointBlockVisualBuilder">
            <summary>
            The builder class for block data points
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointFinancialVisualBuilder">
            <summary>
            Base builder class for financial data points
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointCandlestickVisualBuilder">
            <summary>
            The builder class for candlestick financial data points
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointOpenHighLowCloseVisualBuilder">
            <summary>
            The builder class for open-high-low-close financial data points
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointMarkerVisualBuilder">
            <summary>
            Base builder class for marker type data points
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangleVisualBuilder">
            <summary>
            The builder class for rectangle type data points
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup">
            <summary>
            A popup that summarizes all Series that are spanned in the X-Axis on a mouse hover over the chart coordinate system area.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.RelativePoisitionXProperty">
            <summary>
            Identifies the RelativePositionX dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.RelativePoisitionYProperty">
            <summary>
            Identifies the RelativePositionY dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.XOffsetProperty">
            <summary>
            Identifies the XOffset dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.YOffsetProperty">
            <summary>
            Identifies the YOffset dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.IndexTemplateProperty">
            <summary>
            Identifies the IndexTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.DataTemplateProperty">
            <summary>
            Identifies the DataTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.SinglePointDataTemplateProperty">
            <summary>
            Identifies the SinglePointDataTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.PointerVisibilityProperty">
            <summary>
            Identifies the PointerVisibility dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.RelativePositionX">
            <summary>
            Relative position of the popup, along the Chart area's X-axis.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.RelativePositionY">
            <summary>
            Relative position of the popup, along the Chart area's Y-axis.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.XOffset">
            <summary>
            Offset of the popup from its relative position, along the Chart area's X-axis, in pixels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.YOffset">
            <summary>
            Offset of the popup from its relative position, along the Chart area's Y-axis, in pixels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.IndexTemplate">
            <summary>
            Custom XAML that replaces the default index section (typically the upper half) of the popup.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.DataTemplate">
            <summary>
            Custom XAML that replaces the default data section (typically the lower half) of the popup.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.SinglePointDataTemplate">
            <summary>
            Custom data template of the data section related to a single data point.
            </summary>
            <remarks>
            This template is used if <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.DataTemplate"/> is not specified. It is repeated for each data point
            and displayed as as vertical stack.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XCoordinatePopup.PointerVisibility">
            <summary>
            Gets or sets the PointerVisibility property.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.CalcValueConverter">
            <summary>
            A ValueConverter for numeric values based on CalcEngine's Calc.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CalcValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the given value to the type of this converter.  Expects "Value" or "value".
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CalcValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ProportionMeasure">
            <summary>
            Defines the relationship between a funnel segment and the value it is representing.  
            The value can be represented by the FunnelSegment's height, area or percived 3D volume.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.Funnel">
            <summary>
            Allows users to creat funnel charts, with FunnelSegments.
            </summary>
            <remarks>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataSource"/> property to a collection of data objects that hold the necessary data values for the funnel segments. </para>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ValuePath"/> property to the name of the data property containing the values for all the segments. </para>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.LabelPath"/> property to the name of the data property containing the labels for all the segments.</para>
            To learn more about this control see the list of <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Charting_FunnelChart_Welcome.htm">Funnel tutorials</a>.
            </remarks>
             <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.FunnelSegment"/>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.#ctor">
            <summary>
            Allows users to creat funnel charts.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.Dispose">
            <summary>
            Clean up after dealocation.  Do not call from user code.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.PaletteProperty">
            <summary>
            Identifies the Palette dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.EffectivePaletteProperty">
            <summary>
            Identifies the EffectivePalette dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.AppearanceProperty">
            <summary>
            Identifies the Appearance dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ThemeProperty">
            <summary>
            Identifies the Theme dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ThemeVariantProperty">
            <summary>
            Identifies the ThemeVariant dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.DataSourceProperty">
            <summary>
            Identifies the DataSource dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ValuePathProperty">
            <summary>
            Identifies the ValuePath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.LabelPathProperty">
            <summary>
            Identifies the LabelPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ColorPathProperty">
            <summary>
            Identifies the ColorPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.InnerColorPathProperty">
            <summary>
            Identifies the InnerColorPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RelativeNeckRadiusProperty">
            <summary>
            Identifies the RelativeNeckRadius dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RelativeNeckHeightProperty">
            <summary>
            Identifies the RelativeNeckHeight dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RelativeSegmentGapProperty">
            <summary>
            Identifies the RelativeSegmentGap dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.BackgroundAreasSeparatorHeightProperty">
            <summary>
            Identifies the BackgroundAreasSeparatorHeight dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.Is3DProperty">
            <summary>
            Identifies the Is3D dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.HasReflectionProperty">
            <summary>
            Identifies the HasReflection dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ShowCenterLabelsProperty">
            <summary>
            Identifies the ShowCenterLabels dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ShowLeftLabelsProperty">
            <summary>
            Identifies the ShowLeftLabels dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ShowRightLebelsProperty">
            <summary>
            Identifies the ShowRightLebels dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ShowLeftStripesProperty">
            <summary>
            Identifies the ShowLeftStripes dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ShowRightStripesProperty">
            <summary>
            Identifies the ShowRightStripes dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ShowLeftSegmentLinesProperty">
            <summary>
            Identifies the ShowLeftSegmentLines dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ShowRightSegmentLinesProperty">
            <summary>
            Identifies the ShowRightSegmentLines dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.LeftStripesBrushProperty">
            <summary>
            Identifies the LeftStripesBrush dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.LeftStripesShiftGradientProperty">
            <summary>
            Identifies the LeftStripesShiftGradient dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.LeftStripesUseSegmentColorProperty">
            <summary>
            Identifies the LeftStripesUseSegmentColor dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RightStripesBrushProperty">
            <summary>
            Identifies the RightStripesBrush dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RightStripesShiftGradientProperty">
            <summary>
            Identifies the RightStripesShiftGradient dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.LeftSegmentLinesBrushProperty">
            <summary>
            Identifies the LeftSegmentLinesBrush dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RightSegmentLinesBrushProperty">
            <summary>
            Identifies the RightSegmentLinesBrush dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RightStripesUseSegmentColorProperty">
            <summary>
            Identifies the RightStripesUseSegmentColor dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.CenterLabelsTemplateProperty">
            <summary>
            Identifies the CenterLabelsTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.LeftLabelsTemplateProperty">
            <summary>
            Identifies the LeftLabelsTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RightLabelsTemplateProperty">
            <summary>
            Identifies the RightLabelsTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.PopupIndexTemplateProperty">
            <summary>
            Identifies the PopupIndexTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.PopupValueTemplateProperty">
            <summary>
            Identifies the PopupValueTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.EnableANimationProperty">
            <summary>
            Identifies the EnableANimation dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.AnimationDurationProperty">
            <summary>
            Identifies the AnimationDuration dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.SegmentAnimationOverlapProperty">
            <summary>
            Identifies the SegmentAnimationOverlap dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.Animate">
            <summary>
            Animates the Funnel for the duration of = <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.AnimationDuration"/>.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.InternalVisibilityProperty">
            <summary>
            Identifies the InternalVisibility dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.Palette">
            <summary>
            Palette object to inherit colors from, to be applied to data.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.EffectivePalette">
            <summary>
            The Palette that was used to inherit colors from and applied to the data.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.Appearance">
            <summary>
             Group of visual settings that cascade to the appropriate Chart properties.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.Theme">
            <summary>
            Name of the Theme to inherit colors from, to be applied to the control's visuals (excluding data).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ThemeVariant">
            <summary>
            ThemeVariant object which defines alternate sets of colors to be applied to the control's visuals while remaining visually compatible with the Theme.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.DataSource">
            <summary>
            The object that contains data for the Funnel to display.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ValuePath">
            <summary>
            Name of the data object property containing the numeric value that defines the size of each Funnel segment.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.LabelPath">
            <summary>
            Name of the data property that defines the text associated with each Funnel segment.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ColorPath">
            <summary>
            Name of the DataSource property from which the color of this segment's outside surface is to be extracted.
            </summary>
            <remarks>Value can be a string <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Calc_IntroductionTo.htm">Calc</a> expression that is evaluated at run-time. 
            Use Calc to create conditions or calculations on the actual values assigned.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.InnerColorPath">
            <summary>
            Name of the DataSource property from which the color of this segment's inside surface is to be extracted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RelativeNeckRadius">
            <summary>
            Funnel neck radius relative to the funnel radius, in percent (values between 0 and 100).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RelativeNeckHeight">
            <summary>
            Funnel neck height relative to the Funnel height, in percent (values between 0 and 100).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RelativeSegmentGap">
            <summary>
            Relative size of the space between Funnel segments, in percent.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.BackgroundAreasSeparatorHeight">
            <summary>
            Height of the space between background areas, in pixels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.Is3D">
            <summary>
            Whether to render the Funnel segments using 3D (true) or 2D (false) rendering.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.HasReflection">
            <summary>
            Whether to overlay a glare highlight on the Funnel segments.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ShowCenterLabels">
            <summary>
            Whether to render labels over the Funnel segments.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ShowLeftLabels">
            <summary>
            Whether to render labels to the left of the Funnel segments
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ShowRightLabels">
            <summary>
            Whether to render labels to the right of the Funnel segments.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ShowLeftStripes">
            <summary>
            Whether to render the label areas to the left of the Funnel segments.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ShowRightStripes">
            <summary>
            Whether to render the label areas to the right of the Funnel segments.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ShowLeftSegmentLines">
            <summary>
            Whether to render the spacing lines between left stripes.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.ShowRightSegmentLines">
            <summary>
            Whether to render the spacing lines between right stripes.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.LeftStripesBrush">
            <summary>
            Gets or sets the System.Windows.Media.Brush to apply to the left stripes.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.LeftStripesShiftGradient">
            <summary>
            Object describing the color fill for the labelled stripes to the left of the Funnel.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.LeftStripesUseSegmentColor">
            <summary>
            Whether strieps to the left of the Funnel should inherit their base color from their associated segments.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RightStripesBrush">
            <summary>
            Gets or sets the System.Windows.Media.Brush to apply to the right stripes.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RightStripesShiftGradient">
            <summary>
            Object describing the color fill for the labelled stripes to the right of the Funnel.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.LeftSegmentLinesBrush">
            <summary>
            Gets or sets the System.Windows.Media.Brush to apply to the left segment lines.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RightSegmentLinesBrush">
            <summary>
            Gets or sets the System.Windows.Media.Brush to apply to the right segment lines.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RightStripesUseSegmentColor">
            <summary>
            Whether stripes to the right of the Funnel should inherit their base color from their associated segments.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.CenterLabelsTemplate">
            <summary>
            Custom XAML template that replaces the default center labels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.LeftLabelsTemplate">
            <summary>
            Custom XAML template that replaces the default left labels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.RightLabelsTemplate">
            <summary>
            Custom XAML template that replaces the default right labels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.PopupIndexTemplate">
            <summary>
            Custom XAML template that replaces the default index area of the popup.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.PopupValueTemplate">
            <summary>
            Custom XAML template that replaces the default value area of the popup.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.EnableAnimation">
            <summary>
            Whether the startup animation is enabled. Default is true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.AnimationDuration">
            <summary>
            Duration of the startup animation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Funnel.SegmentAnimationOverlap">
            <summary>
            Gets or sets the amount of overlap on segment animations.
            </summary>
            <remarks>
            The value 0 means that there is no overlap and segments are animated sequentially.
            The value 1 means that animations completely overlap and animation of all segments is simultaneous.
            Values between 0 and 1 describe animations that combine these two extreme approaches.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.FunnelGeometry.FunnelRadius(System.Double)">
            <summary>
            Computes funnel raadius at the vertical coordinate H
            </summary>
            <param name="H">Vertical coordinate</param>
            <returns>Radius at H</returns>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.FunnelSegment">
            <summary>
            Representation of a single segment (data point) within a FunnelChart.
            </summary>
            <remarks>FunelSegments are created by the control when a FunnelChart is bound with its data.</remarks>\
            <seealso cref="!:FunnelChart"/>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FunnelSegment.Value">
            <summary>
            The numeric quantity that represents this FunnelSegment's relative size.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FunnelSegment.TopColor">
            <summary>
            Color of the FunnelSegment area.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FunnelSegment.SideColor">
            <summary>
            Color of the strip(s) beside the FunnelSegment.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FunnelSegment.Brush">
            <summary>
            Object describing how the segment is painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FunnelSegment.PromotionFrequency">
            <summary>
            The relative change in the bound values from this FunnelSegment to the following one.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FunnelSegment.Next">
            <summary>
            A reference to the FunnelSegment following this one.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FunnelSegment.Appearance">
            <summary>
            Appearance object inherited from the parent Funnel.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FunnelSegment.Label">
            <summary>
            Text to be used as a label for this segment.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FunnelSegment.DataSource">
            <summary>
            Object to which this FunnelSegment is bound to.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.IDataSourceProvider">
            <summary>
            Intefrace for abstracting data source providers within charts.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.IDataSourceProvider.InitialLoad">
            <summary>
            Summary:
                Starts the initial query to the underlying data model. The result is returned
                on the CADataSourceProvider.Data property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.IDataSourceProvider.Data">
             <summary>
                 Gets the underlying data object.
            
             Returns:
                 A value of type System.Object that is the underlying data object.
             </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.IDataSourceProvider.DataChanged">
            <summary>
                Occurs when the CADataSourceProvider.Data property has
                a new value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.IDataSourceProvider.IsInitialLoadEnabled">
             <summary>
             Summary:
                 Gets or sets a value that indicates whether to prevent or delay the automatic
                 loading of data.
            
             Returns:
                 false to prevent or delay the automatic loading of data; otherwise, true.
                 The default value is true.
             </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.PieChart">
            <summary>
             Control that displays a pie chart.  Multiple PieSeries can be added with varying heights, colours and slice shifts.
            </summary>
            <remarks>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataSource"/> property to a collection of data objects that hold the necessary data values for the chart series. </para>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.XPath"/> property to the name of the data property containing the implied X values for all the series. </para>
            <para>Add all series directly inside the PieChart tag in XAML or to the <see cref="!:PieChartChartMainArea"/> collection from code.</para>
            To learn more about this control see the list of <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Charting_PieChart_Welcome.htm">PieChart tutorials</a>.
            </remarks>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.PieSeries"/>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase">
            <summary>
            Base class for all chart-types.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.#ctor">
            <summary>
            Initializes a new instance of the Chart class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.Dispose">
            <summary>
            Disposes of any resources currently in use.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.OnApplyTemplate">
            <summary>
            Builds the visual tree for the charting control when a new template is applied.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.InternalVisibilityProperty">
            <summary>
            Identifies the InternalVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.SeriesValueProperty">
            <summary>
            Identifies the SeriesValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.XPathProperty">
            <summary>
            Identifies the XValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.RelativeDonutInnerCircleRadiusProperty">
            <summary>
            Identifies the RelativeDoughnutInnerCircleRadius dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.RelativeDonutOuterCircleRadiusProperty">
            <summary>
            Identifies the RelativeDonutOuterCircleRadius dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataSourceProperty">
            <summary>
            Identifies the DataSource dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataSourcePreprocessingProgressProperty">
            <summary>
            Identifies the DataSourcePreprocessingProgress dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.InnerMarginsProperty">
            <summary>
            Identifies the InnerMargins dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.LegendDockProperty">
            <summary>
            Identifies the LegendDock dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.LegendProperty">
            <summary>
            Identifies the Legend dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.LegendVisibleProperty">
            <summary>
            Identifies the LegendVisible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.GlareCoverVisibleProperty">
            <summary>
            Identifies the GlareCoverVisible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.LegendItemCollectionProperty">
            <summary>
            Identifies the LegendItemCollection dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.SelectionVisualHintProperty">
            <summary>
            Identifies the SelectionVisualHint dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.PaletteProperty">
            <summary>
            Identifies the Palette dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.EffectivePaletteProperty">
            <summary>
            Identifies the EffectivePalette dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.AppearanceProperty">
            <summary>
            Identifies the Appearance dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataPointSubsamplingEnabledProperty">
            <summary>
            Identifies the DataPointSubsamplingEnabled dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.BeginUpdate">
            <summary>
            Prevent chart from rendering and/or animating until an <see cref="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.EndUpdate"/> is invoked.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.EndUpdate">
            <summary>
            Resume chart rendering and animation.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.EnableShadowsProperty">
            <summary>
            Identifies the EnableShadows dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.Measure(System.Windows.FrameworkElement)">
            <summary>
            This measures ANY framework element when called after template load. If it is not in the visual tree, it is temporarily 
            set there, measured and removed from the tree.
            </summary>
            <param name="FE">FrameworkElement to be measured.</param>
            <returns>Returns the size of the element or Size.Empty if called before template load.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.Animate(System.TimeSpan)">
            <summary>
            Animates the Chart for the specified duration.
            </summary>
            <param name="duration">The duration that the Chart should animate for.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.Animate">
            <summary>
            Animates the Chart for the duration specified by <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.AnimationDuration"/>.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.EnableAnimationProperty">
            <summary>
            Identifies the EnableAnimation dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.AnimationOnLoadProperty">
            <summary>
            Identifies the AnimationOnLoad dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.AnimateOnDataSourceChangeProperty">
            <summary>
            Identifies the AnimateOnDataSourceChange dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.AnimationDurationProperty">
            <summary>
            Identifies the AnimationDuration dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.EnableDataPointPopupProperty">
            <summary>
            Identifies the EnableDataPointPopupProperty dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.BeginDrillDown(System.Object)">
            <summary>
            Initate drill step.
            </summary>
            <param name="drillTarget">The drilling target.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.BeginDrillUp">
            <summary>
            Initiate the step towards the previous position.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.BeginDrillUp(System.Int32)">
            <summary>
            Initiate the step towards the previous position.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.CancelDrill">
            <summary>
            Cancel the drill proces.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DrillDownTransitionDurationProperty">
            <summary>
            Identifies the DrillDownTransitionDuration dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DrillBackTransitionDurationProperty">
            <summary>
            Identifies the DrillBackTransitionDuration dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.ThemeProperty">
            <summary>
            Identifies the Theme dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.ThemeVariantProperty">
            <summary>
            Identifies the ThemeVariant dependency property.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataSourcePreprocessingProgressChanged">
            <summary>
            Occurs when the data source preproccessing reports progress.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DrillAnimationCompleted">
            <summary>
            Occurs when the drill-down or drill-up animation is completed.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseEnterDataPoint">
            <summary>
            Occurs when the mouse enters the bounding area of a DataPoint.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseLeaveDataPoint">
            <summary>
            Occurs when the mouse leaves the bounding area of a DataPoint.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseEnterSeries">
            <summary>
            Occurs when the mouse enters the bounding area of a Series.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseLeaveSeries">
            <summary>
            Occurs when the mouse leaves the bounding area of a DataPoint.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseHoverOverCoordinateSystem">
            <summary>
            Occurs when the coordinate position of the mouse changes while over the CoordinateSystem.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseLeftButtonDownOnCoordinateSystem">
            <summary>
            Occurs when the left mouse button is pressed while the mouse pointer is over the CoordinateSystem.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseLeftButtonDownOnDataPoint">
            <summary>
            Occurs when the left mouse button is pressed while the mouse pointer is over a DataPoint.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseLeftButtonDownOnSeries">
            <summary>
            Occurs when the left mouse button is pressed while the mouse pointer is over a Series.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseLeftButtonUpOnCoordinateSystem">
            <summary>
            Occurs when the left mouse button is released while the mouse pointer is over the CoordinateSystem.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseLeftButtonUpOnDataPoint">
            <summary>
            Occurs when the left mouse button is released while the mouse pointer is over a DataPoint.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseLeftButtonUpOnSeries">
            <summary>
            Occurs when the left mouse button is released while the mouse pointer is over a Series.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseRightButtonDownOnCoordinateSystem">
            <summary>
            Occurs when the left mouse button is pressed while the mouse pointer is over the CoordinateSystem.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseRightButtonDownOnDataPoint">
            <summary>
            Occurs when the left mouse button is pressed while the mouse pointer is over a DataPoint.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseRightButtonDownOnSeries">
            <summary>
            Occurs when the left mouse button is pressed while the mouse pointer is over a Series.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseRightButtonUpOnCoordinateSystem">
            <summary>
            Occurs when the left mouse button is released while the mouse pointer is over the CoordinateSystem.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseRightButtonUpOnDataPoint">
            <summary>
            Occurs when the left mouse button is released while the mouse pointer is over a DataPoint.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.MouseRightButtonUpOnSeries">
            <summary>
            Occurs when the left mouse button is released while the mouse pointer is over a Series.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataStructureCreated">
            <summary>
            Occurs when the Chart's internal data structure is created from the data-source.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.CustomDrawing">
            <summary>
            Occurs when the Chart's visual state has been updated to allow for custom drawing activities.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.AnimationCompleted">
            <summary>
            Occurs when the Chart's introductory animation has been completed.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataPointSelectionChanged">
            <summary>
            Occurs when the left mouse button is released while the mouse pointer is over a DataPoint.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.SeriesSelectionChanged">
            <summary>
            Occurs when the left mouse button is released while the mouse pointer is over a Series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.SeriesPath">
            <summary>
                The name of a property in a DataPoint DataContext object that contains the name of a data series that the data point belongs to. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.XPath">
            <summary>
                The name of a property in a DataPoint DataContext object that contains the data point's x-value.
            </summary>
            <remarks>Value can be a string <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Calc_IntroductionTo.htm">Calc</a> expression that is evaluated at run-time. 
            Use Calc to create conditions or calculations on the actual values assigned.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.RelativeDonutInnerCircleRadius">
            <summary>
                This property indicates the inner radius of a donut as a percentage of the outer radius. Default is 0.25.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.RelativeDonutOuterCircleRadius">
            <summary>
                This property indicates the outer radius of a doughnut or pie as a percentage of the available space on the chart. Default is 0.90. 
                This value should be decreased to accomodate slice shifting.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataSource">
            <summary>
                This property represents the data source. Any standard binding type can be assigned to it such as a collection of objects.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataSourcePreprocessingProgress">
            <summary>
            Percent of completed data source preprocessing, from 0 to 100.
            </summary>
            <remarks>
            The progress is reported in approximatelly 5% increments. Use this value to report progress in preprocessing large data sources.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.InnerMargins">
            <summary>
            Gets or sets the margins of the CoordinateSystem to the Chart's edge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.LegendDock">
            <summary>
            Position of the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.Legend"/> relative to the chart.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.Legend">
            <summary>
                This property is the Legend object. All legend related properties are located here.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.LegendVisible">
            <summary>
                This property indicates whether the legend is visible or not.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.GlareCoverVisible">
            <summary>
                This property indicates whether the glare cover is turned on or of.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.LegendItemCollection">
            <summary>
            Creates collection of legend items that can be used in stand-alone legends.
            </summary>
            <remarks>
            The result is a non-empty collection only after the chart data structure is created.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.SeriesHierarchyRoot">
            <summary>
            Root datapoint series for this chart. Read-only.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.ChartPalette">
            <summary>
            Gets the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.ChartPalette"/> object that keeps track of colors and brushes used throughout of the chart.
            </summary>
            <remarks>
            Note that this object is controlled by the theming mechanism.
            Use it to to get or modify internal color settings.
            For more details, see the <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/CommonConcepts_Theming.htm">Themes and Palettes</a> tutorial.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.SelectionVisualHint">
            <summary>
            Gets or sets the type of visual indication of selected data points and series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.Palette">
            <summary>
            Palette object to inherit colors from, to be applied to data.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.EffectivePalette">
            <summary>
            The Palette that was used to inherit colors from and applied to the data.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.Appearance">
            <summary>
            Group of visual settings that cascade to the appropriate Chart properties.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataPointSubsamplingEnabled">
            <summary>
            Whether data point subsampling for large data sources is enabled.  
            </summary>
            <remarks>This feature can improve performance with large data sets.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.SeriesAnimationTimings">
            <summary>
            ObservableCollection of <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AnimationTiming"/>s used by the graphed series. Read-only.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.CustomDrawingCanvas">
            <summary>
            Gets the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.CustomDrawingCanvas"/> where custom drawings can be placed.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataSeries">
            <summary>
                Contains a collection of data series objects.
            </summary>
            <remarks>
            Use this property to programmatically access members of the series hierarchy. Do not use it to add series to the chart.
            Instead, use the appropriate MainChartArea member in derived classes.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.Overlays">
            <summary>
                This property is a collection of Overlay elements that will be displayed on top of data points.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.HighlightDataPointOnHover">
            <summary>
            Gets or sets whether to highlight the DataPoint on mouse hover.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.EnableDataPointSelectionOnMouseClick">
            <summary>
            Gets or sets whether the data point selection on mouse click is enabled.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.EnableSeriesSelectionOnMouseClick">
            <summary>
            Gets or sets whether series selection on mouse click is enabled.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.SelectedDataPoints">
            <summary>
            Collection of DataPoints that are selected.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.ProcessDataSourceInBackgroundThread">
            <summary>
            Gets or sets whether data source is to be processed in background worker thread.
            </summary>
            <remarks>
            The default value is 'true' to provide better interactive behavior of the chart control. 
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.WaitingForEndUpdate">
            <summary>
            Whether a <see cref="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.BeginUpdate"/> has been invoked, without a subsequent <see cref="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.EndUpdate"/>.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.ActualHighlightXCoordinateOnHover">
            <summary>
            Gets or sets whether to highlight the x-coordinate on mouse hover.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.EnableShadows">
            <summary>
            Whether to render dropshadows on datapoints.  Default true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.XAxis">
            <summary>
            Object describing the coordinate system axis of independent values; typically indicated horizontally.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.YAxis">
            <summary>
            Object describing the coordinate system axis of dependent values; typically measured vertically.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.Animator">
            <summary>
            Gets or sets the Animator for the Chart.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.ActualAnimator">
            <summary>
            Gets the actual Animator for the Chart.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.EnableAnimation">
            <summary>
            Gets or sets whether animation is enabled. Default value is "true".
            </summary>
            <remarks>
            Setting this property to "false" disables all animations of this control, regardless of 
            other animation settings on the control, series etc.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.AnimationOnLoad">
            <summary>
            Gets or sets whether animation on control load is enabled.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.AnimateOnDataSourceChange">
            <summary>
            Whther to animate the chart when the data source is updated. Default value is "false".
            </summary>
            <remarks>
            Note that this property will be ignored unless <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.EnableAnimation"/> = true.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.AnimationDuration">
            <summary>
            Gets or sets the duration that the Chart should be animated for.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.EnableDataPointPopup">
            <summary>
            Gets or sets whether to enable DataPointPopups on mouse hover.
            </summary>        
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataPointPopup">
            <summary>
            Gets or sets a DataPointPopup object that defines how DataPoint popups are handled.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.Visibility">
            <summary>
            Whether to render the control.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DrillDownState">
            <summary>
            Object describing the current level when Chart is bound to a set of hierarchical data.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DrillDownTransitionDuration">
            <summary>
            Amount of time for the animation of the Chart drilling down a drilldown level.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DrillBackTransitionDuration">
            <summary>
            Amount of time for the animation of the Chart reverting up a drilldown level.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.Theme">
            <summary>
            Name of the Theme to inherit colors from, to be applied to the control's visuals (excluding data).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.ThemeVariant">
            <summary>
            ThemeVariant object which defines alternate sets of colors to be applied to the control's visuals while remaining visually compatible with the Theme.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.ChartKindProperty">
            <summary>
            Identifies the ChartKind dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.StartingAngleProperty">
            <summary>
            Identifies the StartingAngle dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.EndingAngleProperty">
            <summary>
            Identifies the EndingAngle dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.RelativeInnerCircleRadiusProperty">
            <summary>
            Identifies the RelativeInnerCircleRadius dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.RelativeCircleRadiusProperty">
            <summary>
            Identifies the RelativeCircleRadius dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.PieThicknessProperty">
            <summary>
            Identifies the PieThickness dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.AllowMaximumPieShiftProperty">
            <summary>
            Identifies the AllowMaximumPieShift dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.DefaultAnimator">
            <summary>
            Implementation of IAnimationProvider interface.  
            Returns the default animator.
            Use Animator property to set the animator for the series. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.ChartKind">
            <summary>
            The shape and perspective of the PieChart to render.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.StartingAngle">
            <summary>
            The starting angle for Pie/Donut charts, in degrees.  For full pie/doughnut charts set BeginPieDoughnutAngle = EndPieDoughnutAngle
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.EndingAngle">
            <summary>
            The ending angle for Pie/Donut charts, in degrees.  For full pie/donut charts set BeginPieDonutAngle = EndPieDonutAngle
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.RelativeInnerCircleRadius">
            <summary>
            Relative radius of the inner series circle to the default radius.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.RelativeCircleRadius">
            <summary>
            Relative radius of the series circle to the default radius.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.PieThickness">
            <summary>
            Depth or thickness of the PieChart series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.AllowMaximumPieShift">
            <summary>
            Gets or sets maximum shift value (in pixels) for pies and donuts.
            </summary>
            <remarks>
            The chart layout mechanism uses this value to provide space arround pies and donuts so that 
            slices can be shifted (as reaction to mouse events, for example) without being clipped by the chart area.
            This also ensures that the main part of the pie or donut remains in place when a slice is shifted.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieChart.PieChartMainArea">
            <summary>
            Contains the content placed within the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.PieChart"/>. All pie series and other objects implementing 
            <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.IPieMainChartAreaMember"/> interface belong to this collection and should be added directly to it.
            </summary>
            <remarks>
            Use this property to programmatically  populate the main chart area. Do not use <see cref="!:DataSeries"/> property 
            to add series objects to the main area.
            </remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.PieMainChartAreaMemberCollection">
            <summary>
            The collection of the main chart area members for PieChart.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart">
            <summary>
                ComponentArt RadarChart control.  Plots X-Y data on a circular X axis resembling a radar.  Area, line and marker series can be added to a radar chart.
            </summary>
            <remarks>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataSource"/> property to a collection of data objects that hold the necessary data values for the chart series. </para>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.XPath"/> property to the name of the data property containing the X values for all the series. </para>
            <para>Add all series directly inside the RadarChart tag in XAML or to the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart.RadarChartMainArea"/> collection from code.</para>
            To learn more about this control see the list of <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Charting_RadarChart_Welcome.htm">RadarChart tutorials</a>.
            </remarks>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarLineSeries"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeries"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarMarkerSeries"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarAreaSeriesRange"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries"/>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart.LineKindProperty">
            <summary>
            Identifies the LineKind dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart.ChartKindProperty">
            <summary>
            Identifies the ChartKind dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart.CompositionKindProperty">
            <summary>
            Identifies the CompositionKind dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart.SeriesStrokeProperty">
            <summary>
            Identifies the SeriesStroke dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart.SeriesStrokeThicknessProperty">
            <summary>
            Identifies the SeriesStrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart.LineKind">
            <summary>
                This property indicates what shape will be used for a line in a line chart or the top edge of an area in an area chart.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart.ChartKind">
            <summary>
            The type of chart: Line, Area or Marker to apply to the series of this chart.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart.CompositionKind">
            <summary>
            This property indicates the type of composition that will be performed if myltiple series are present. It can be overriden for each CompositeSeries.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart.SeriesStroke">
            <summary>
               This property is a Brush object that will be used to draw borders of a data series objects.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart.SeriesStrokeThickness">
            <summary>
               This property indicates the thickness of borders of data series objects.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart.RadarChartMainArea">
            <summary>
            Contains the content placed within the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarChart"/>. All radar series, coordinate lines, stripes and other objects implementing 
            <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.IRadarMainChartAreaMember"/> interface belong to this collection. 
            </summary>
            <remarks>
            Use this property to programmatically populate the main chart area. Do not use <see cref="!:DataSeries"/> property 
            to add series objects to the main area.
            </remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarMainChartAreaMemberCollection">
            <summary>
            The collection of the main chart area members for RadarChart.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesGroup">
            <summary>
                A class that provides common visual presentation for multiple series - members of the SubSeries property.
                It is the root series of every chart.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries">
            <summary>
             A group of series sharing the same X and Y axes, whose rendering may be combined.
            </summary>
            <remarks>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.CompositionKind"/> property to control how the child series will be positioned when rendered.</para>
            <para>Add all child series to the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.SubSeries"/> property collection.</para>
            <para>Any visual property changed on the composite series will automatically be applied to all sub-series.</para></remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.#ctor">
            <summary>
            Initializes a new instance of the CompositeSeries class, responsible for grouping multiple series. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.CompositionKindProperty">
            <summary>
            Identifies the CompositionKind dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.DefaultAnimator">
            <summary>
            Returns a default animator for CompositeSeries.
            </summary>
            <returns>A default animator for CompositeSeries.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.Animate(System.TimeSpan)">
            <summary>
            Invokes the animation on this series.
            </summary>
            <param name="duration">duration of animation.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.BuildTree">
            <summary>
            This is called only on the root composite series 
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.SelectAllPoints(System.Boolean)">
            <summary>
            Select or unselect all data points in this series.
            </summary>
            <param name="select">Indicates whether points should be selected or unselected.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.SelectAllSeries(System.Boolean)">
            <summary>
            Select or unselect all sub-series.
            </summary>
            <param name="select">Indicates whether sub-series should be selected or unselected.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.GetSeries(System.String)">
            <summary>
            Returns the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase"/> object with specified Id.
            </summary>
            <param name="seriesBaseId">Id of the series node.</param>
            <returns>
            Returns the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase"/> object with specified Id. The search is performed over all child nodes
            of the series hierarchy tree of this node.
            </returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.GetProperty(System.String)">
            <summary>
            Returns the sub-series with the given name.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.CompositionKind">
            <summary>
            This property indicates the type of composition that will be performed for the sub series. If not explicitly specified it will be inherited from the Chart control.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.SeriesName">
            <summary>
                The name of a property in a DataPoint DataContext object that contains the name of a data series that the data point belongs to. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.SubSeries">
            <summary>
             A collection of Series objects grouped under this composite series. CompositionKind property dictates how the series are to be combined. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.SubSeriesAnimationTimings">
            <summary>
            ObservableCollection of <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AnimationTiming"/>s used by the subseries of this composite group. Read-only.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries.Context">
            <summary>
            Contains coordinate mapping and axis relevant to this series.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesGroup.#ctor(ComponentArt.Silverlight.DataVisualization.Charting.ChartCoordinatesMapping,ComponentArt.Silverlight.DataVisualization.Charting.Axis,ComponentArt.Silverlight.DataVisualization.Charting.Axis)">
            <summary>
            Initializes a new instance of the SeriesGroup class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesGroup.CreateVisual(System.Object)">
            <summary>
            Draws the visual elements.  To be called by charting framework only, do not call directly from code.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesCrossSectionContext">
            <summary>
            Provides a dictionary of DataPointContext for a group of related series.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesCrossSectionContext.GetProperty(System.String)">
            <summary>
            Gets the DataPointContext of the given series.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.TransitionManager.#ctor(ComponentArt.Silverlight.DataVisualization.Charting.ChartBase)">
            <summary>
            Initializes a new instance of the DrillDownManager class with the specified Chart.
            </summary>
            <param name="chart">That top-most Chart to be managed.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.TransitionManager.BeginDrillUp">
            <summary>
            Back-steps and loads the previous Chart.
            </summary>
            <returns>False if DrillDownManager is busy with the previous request and this request is ignored. True otherwise.</returns>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.TransitionManager.DrillStepCompleted">
            <summary>
            Occurs when a drill-down step has completed.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.TransitionManager.BackStepCompleted">
            <summary>
            Occurs when a back-step has completed.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap">
            <summary>
            Control that represents a tree-map (also referred to as a Heat Map in some financial applications).  
            The value of each TreeMapNode is represented by the area it takes in the whole TreeMap.
            </summary>
            <remarks>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataSource"/> property to a collection of data objects that hold the necessary data values for the funnel segments. </para>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.ValuePath"/> property to the name of the data property containing the values for the nodes. </para>
            <para>Define at least one <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel"/> inside the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.Levels"/> property collection.  </para>
            To learn more about this control see the list of <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Charting_TreeMap_Welcome.htm">TreeMap tutorials</a>.
            </remarks>
             <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode"/>
              <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel"/>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.OnApplyTemplate">
            <summary>
            Silverlight lifecycle method, to be called by the framework only.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.HighlightTreeNodeOnHoverProperty">
            <summary>
            Identifies the HighlightTreeNodeOnHover dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.DataSourceProperty">
            <summary>
            Identifies the DataSource dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.ValuePathProperty">
            <summary>
            Identifies the ValuePath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.LevelsProperty">
            <summary>
            Identifies the Levels dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.PathSeparatorProperty">
            <summary>
            Identifies the PathSeparator dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.EnablePopupProperty">
            <summary>
            Identifies the EnablePopup dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.AppearanceProperty">
            <summary>
            Identifies the Appearance dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.PopupIndexTemplateProperty">
            <summary>
            Identifies the PopupIndexTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.PopupValueTemplateProperty">
            <summary>
            Identifies the PopupValueTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.ThemeProperty">
            <summary>
            Identifies the Theme dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.ThemeVariantProperty">
            <summary>
            Identifies the ThemeVariant dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.PaletteProperty">
            <summary>
            Identifies the Palette dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.EffectivePaletteProperty">
            <summary>
            Identifies the EffectivePalette dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.GetRootNode">
            <summary>
            Gets the root node.
            </summary>
            <returns>The root node.</returns>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.InternalVisibilityProperty">
            <summary>
            Identifies the InternalVisibility dependency property.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.MouseEnterTreeMapNode">
            <summary>
            Raised when the mouse cursor enters a TreeMapNode's area.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.MouseLeaveTreeMapNode">
            <summary>
            Raised when the mouse cursor leaves a TreeMapNode's area.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.MouseMoveOverTreeMapNode">
            <summary>
            Raised when the mouse cursor moves while within a TreeMapNode's area.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.MouseLeftButtonDownAtTreeMapNode">
            <summary>
            Raised when the mouse's left button is pressed within a TreeMapNode's area.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.MouseLeftButtonUpAtTreeMapNode">
            <summary>
            Raised when the mouse's left button is released within a TreeMapNode's area.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.MouseRightButtonDownAtTreeMapNode">
            <summary>
            Raised when the mouse's right button is pressed within a TreeMapNode's area.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.MouseRightButtonUpAtTreeMapNode">
            <summary>
            Raised when the mouse's right button is released within a TreeMapNode's area.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.HighlightTreeNodeOnHover">
            <summary>
            Whether to visually highlight TreeMapNodes when the mouse pointer hovers over them.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.DataSource">
            <summary>
            The object that contains data for the TreeMap to display.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.ValuePath">
            <summary>
            Name of a property in the bound object that represents the top level of grouping.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.Levels">
            <summary>
            Collection of TreeMapLevel objects, which define the structure of the TreeMap data groupings.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.PathSeparator">
            <summary>
            String used to demarcate TreeMapLevels when retrieving TreeMapNode Paths and ValueTexts.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.EnablePopup">
            <summary>
            Whether popups, displaying the actual value are enabled on mouse-over TreeMapNodes.  Default is true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.Appearance">
            <summary>
            Group of visual settings that cascade to the appropriate TreeMap properties.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.PopupIndexTemplate">
            <summary>
            Custom XAML template that replaces the default index area of the popup.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.PopupValueTemplate">
            <summary>
            Custom XAML template that replaces the default value area of the popup.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.Theme">
            <summary>
            Name of the Theme to inherit colors from, to be applied to the control's visuals (excluding data).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.ThemeVariant">
            <summary>
             Object which defines alternate sets of colors to be applied to the control's visuals while remaining visually compatible with the Theme.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.Palette">
            <summary>
            Palette object to inherit colors from, to be applied to data.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMap.EffectivePalette">
            <summary>
            The Palette that was used to inherit colors from and applied to the data.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapAppearance">
            <summary>
            Holds Brushes that describe the style in which the TreeMap is drawn.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapAppearance.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapAppearance.TreeNodePopupValueBrush">
            <summary>
            Object describing how the default TreeMapNode popup value area is painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapAppearance.TreeNodePopupIndexBrush">
            <summary>
            Object describing how the default TreeMapNode popup index area is painted.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel">
            <summary>
            Represents a grouping of TreeMapNodes into a single visualy grouped entity.
            </summary>
            <remarks><para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel.GroupPath"/> property to the data source property by which the grouping (by the same values of this property)
            is to be done for this level.  All subsequent levels will be grouped further by the common values of that level's GroupPath property. </para></remarks>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel.GroupPathProperty">
            <summary>
            Identifies the GroupPath dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel.VisibleProperty">
            <summary>
            Identifies the Visible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel.TemplateProperty">
            <summary>
            Identifies the DataTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel.HeaderTemplateProperty">
            <summary>
            Identifies the HeaderTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel.GapProperty">
            <summary>
            Identifies the Gap dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel.ShowAnnotationProperty">
            <summary>
            Identifies the ShowAnnotation dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel.HeaderHeightProperty">
            <summary>
            Identifies the HeaderHeight dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel.GroupPath">
            <summary>
            Name of a property in the bound DataContext object that contains the value to be grouped by on this TreeMapLevel.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel.Visible">
            <summary>
            Whether to render this TreeMapLevel.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel.DataTemplate">
            <summary>
            Custom XAML template that replaces the default TreeMapNode rendering.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel.Gap">
            <summary>
            Width of the space between TreeMapNodes on this TreeMapLevel.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel.ShowAnnotation">
            <summary>
            Whether to render TreeMapNode annotations (labels).
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevelCollection">
             <summary>
             An observable collection of TreeMapLevels.
             </summary>
             <remarks>Add at least one level inside the collection. All levels will be grouped by the common values of that level's GroupPath property. </remarks>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapLevel"/>"/&gt;
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNodeContext">
            <summary>
            Contains the relevant information relating to a TreeMapNode.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNodeContext.Node">
            <summary>
            The associated TreeMapNode.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNodeContext.PopupIndexBrush">
            <summary>
            Object describing how the popup's index area is painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNodeContext.PopupValueBrush">
            <summary>
            Object describing how the popup's value area is painted.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNodeEventArgs">
            <summary>
            Contains the relevant TreeMapNode and MouseEventArgs relevant to the event.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNodeEventArgs.#ctor(ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode,System.Windows.Input.MouseEventArgs)">
            <summary>
            Default constructor.
            </summary>
            <param name="node">TreeMapNode in question</param>
            <param name="mouseEventArgs">Relevant MouseEventArgs</param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNodeEventArgs.TreeMapNode">
            <summary>
            The TreeMapNode associated with the event.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNodeEventArgs.MouseEventArgs">
            <summary>
            The associated mouse event parameters.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode">
            <summary>
            A class representing a single building block (node) of a TreeMap.  Its value will be represented by its area within the TreeMap.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.BrushProperty">
            <summary>
            Identifies the Brush dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.GroupProperty">
            <summary>
            Identifies the Group dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.CountProperty">
            <summary>
            Identifies the Count dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.HighlightedProperty">
            <summary>
            Identifies the Highlighted dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.GetScreenRect">
            <summary>
            Returns screen rectangle of this node, not including the header.
            </summary>
            <returns>Screen rectangle of the node.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.GetHeaderScreenRect">
            <summary>
            Returns screen rectangle of the header of this node.
            </summary>
            <returns>Screen rectangle of the header of the node.</returns>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.Value">
            <summary>
            The actual value of this node, representing the area taken by the node in the TreeMap.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.Brush">
            <summary>
            Object describing how the TreeMapNode area is painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.Group">
            <summary>
            The group of values for which this TreeMapNode is contained within.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.Count">
            <summary>
            The number of leaf-nodes contained within this node.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.Highlighted">
            <summary>
            Whether this TreeMapNode is visually highlighted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.Depth">
            <summary>
            Number of TreeMapLevel levels below the top that this TreeMapNode sits.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.InputData">
            <summary>
            Object to which this particular TreeMapNode is bound to.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.ParentNode">
            <summary>
            Parent TreeMapNode.  Null if this TreeMapNode is already at the top TreeMapLevel level.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.Children">
            <summary>
            Collection of children nodes.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.Path">
            <summary>
            Ordered list of TreeMapNode groups leading to this TreeMapNode's, separated by the TreeMap.PathSeparator.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNode.ValueText">
            <summary>
            Formatted datapoint value for this TreeMapNode.  
            If this TreeMapNode is not on the top level, the ValueText is prefixed by an ordered list of TreeMapNode ValueTexts leading to this TreeMapNode's, separated by the TreeMap.PathSeparator.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.TreeMapNodeCollection">
            <summary>
            A collection of TreeMapNode objects.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode.#ctor(System.Object)">
            <summary>
            ObjectModelNode constructor.
            </summary>
            <param name="holder">The object holding this node. </param>
            <remarks>
            The holder has an "ObjectModelNode" property pointing to this node. Therefore, holder.ObjectModelNode == this;
            To comply with this assumtion, the holder should always instantiate this object using statement "objectModelNode = new ObjectModelNode(this)".
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode.AddPropertyChild(ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode,System.String)">
            <summary>
            Add child node associated to a property of this.Holder.
            </summary>
            <param name="childNode"></param>
            <param name="propertyName"></param>
            <remarks>
            By setting this parent-child relationship, we declare that this.Holder.propertyName = childNode.Holder.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode.AddPropertyChild(ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode,System.String,System.Object)">
            <summary>
            Add child node associated to a property of this.Holder.
            </summary>
            <param name="childNode"></param>
            <param name="propertyName"></param>
            <param name="defaultValue">Value set to the property when the child is removed.</param>
            <remarks>
            By setting this parent-child relationship, we declare that this.Holder.propertyName = childNode.Holder.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode.AddCollectionPropertyChild(ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode,System.String)">
            <summary>
            Add child node associated to a member of a collection property of this.Holder.
            </summary>
            <param name="childNode"></param>
            <param name="collectionPropertyName"></param>
            <remarks>
            By setting this parent-child relationship, we declare that this.Holder.collectionPropertyName.Contains(childNode.Holder).
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode.AddChild(ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode,System.String)">
            <summary>
            Private tree building helper
            </summary>
            <param name="childNode"></param>
            <param name="propertyName"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode.RootNode">
            <summary>
            Root object node . It holds the current build state
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode.Holder">
            <summary>
            Holder object of this node.
            </summary>
            <remarks>
            This relationship is true: Holder.ObjectModelNode = this
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode.ParentNode">
            <summary>
            Parent ObjectModelNode
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode.BuildState">
            <summary>
            Chart state at the moment this node is added to the object model tree.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ObjectModelNode.Visual">
            <summary>
            Chart visual object associated to this object model node.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeriesAnimator">
            <summary>
            Animator used to animate a Composite series composed of multiple data series.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeriesAnimator.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeriesAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeriesAnimator.SubSeriesAnimations">
            <summary>
            A collection of AnimationTiming objects that control the order of animations of sub-series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeriesAnimator.Series">
            <summary>
            This property has to be set when the animator is assigned to a composite series
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AnimationTiming">
            <summary>
            Description of when an animation occurs and how long it lasts.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AnimationTiming.ToString">
            <summary>
            String representation of this instance.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AnimationTiming.ItemId">
            <summary>
            Id of this instance.  For internal use.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AnimationTiming.BeginTime">
            <summary>
            Delay before the animation occurs.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AnimationTiming.Duration">
            <summary>
            Amount of time over which the animation occurs.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.Coordinate">
            <summary>
                This class represents a coordinate along an axis.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Coordinate.#ctor">
            <summary>
            Initializes a new instance of the Coordinate class.
            </summary>    
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Coordinate.ToString">
            <summary>
            String representation of this object, its Text field.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Coordinate.Value">
            <summary>
                Coordinate value wich is the distance from the origin along the axis.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Coordinate.Text">
            <summary>
                Coordinate text or label. If none suplied it is the coordinate value converted to string. 
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.Coordinates">
            <summary>
            Base class for coordinate collection classes.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Coordinates.#ctor">
            <summary>
            Initializes a new instance of the Coordinates class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Coordinates.ToString">
            <summary>
            String representation of this object.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.Coordinates.PropertyChanged">
            <summary>
            Fires when a property changes its value.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.StringCoordinates">
            <summary>
            A coordinates class where the axis values are strings.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.StringCoordinates.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.StringCoordinates.Step">
            <summary>
            Since arithemetic cannot be performed on strings, we need to define the step value to be applied between two neighbouring points.  Default is 1.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.NumericCoordinates">
            <summary>
                Coordinates for numeric data.
            </summary>
            <remarks>
            This class doesn't contain the exact collection of values. Instead, it describes how the coordinates are computed and it can compute values depending
            on the range of values along the associated axis.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.NumericCoordinates.#ctor">
            <summary>
            Initializes a new instance of the NumericCoordinates class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.NumericCoordinates.FromProperty">
            <summary>
            Identifies the From dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.NumericCoordinates.ToProperty">
            <summary>
            Identifies the To dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.NumericCoordinates.From">
            <summary>
                The value of the first coordiante. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.NumericCoordinates.To">
            <summary>
                The value of the last coordinate.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.NumericCoordinates.Step">
            <summary>
                The step (distance between points) used to calculate intermediate coordinates between the first and the last.
                If either of NumberOfPoints or NumberOfPointsAtLeast or NumberOfPointsAtMost is set then Step is ignored.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.NumericCoordinates.NumberOfPoints">
            <summary>
                Number of coordinates to create.
                Only one of NumberOfPoints, NumberOfPointsAtLeast and NumberOfPointsAtMost can be set otherwise and exception will be thrown.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.NumericCoordinates.NumberOfPointsAtLeast">
            <summary>
                The minimum number of points to create. The algorithm is free to create more.
                Only one of NumberOfPoints, NumberOfPointsAtLeast and NumberOfPointsAtMost can be set otherwise and exception will be thrown.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.NumericCoordinates.NumberOfPointsAtMost">
            <summary>
                The maximum number of points to create. The algorithm is free to create less.
                Only one of NumberOfPoints, NumberOfPointsAtLeast and NumberOfPointsAtMost can be set otherwise and exception will be thrown.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.NumericLogarithmicCoordinates">
            <summary>
                Main logarithmic coordinates for numeric data, containing powers of the logarithm base, such as 1, 10, 100, 1000... (for base = 10).
            </summary>
            <remarks>
            This class doesn't contain the exact collection of values. Instead, it describes how the coordinates are computed and it can compute values depending
            on the range of values along the associated axis.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.NumericLogarithmicCoordinates.#ctor">
            <summary>
            Initializes a new instance of the NumericCoordinates class.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.NumericLogarithmicCoordinates.Base">
            <summary>
                The Logarithm base. Must be greater than 1.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.NumericLogarithmicCoordinatesMinor">
            <summary>
                Minor logarithmic coordinates for numeric data, containing powers of the logarithm base as well as
                intermediate values, such as 1,2,3...,9,10,20,30...90,100,200,300... (for base = 10),
            </summary>
            <remarks>
            This class doesn't contain the exact collection of values. Instead, it describes how the coordinates are computed and it can compute values depending
            on the range of values along the associated axis.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.NumericLogarithmicCoordinatesMinor.#ctor">
            <summary>
            Initializes a new instance of the NumericCoordinates class.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.NumericLogarithmicCoordinatesMinor.Base">
            <summary>
                The Logarithm base. Must be greater than 1.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeCoordinates">
            <summary>
                Coordinates for DateTime data.
            </summary>
            <remarks>
            This class doesn't contain the exact collection of values. Instead, it describes how the coordinates are computed and it can compute values depending
            on the range of values along the associated axis.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeCoordinates.#ctor">
            <summary>
            Initializes a new instance of the DateTimeCoordinates class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeCoordinates.LabelAtMidPointProperty">
            <summary>
            Identifies the LabelAtMidPoint dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeCoordinates.DateLevel">
            <summary>
                The time resolution of coordinates. Possible values are Second, Minute, Hour, Day, Month, Year. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeCoordinates.DisplayValues">
            <summary>
            Gets or sets a list of valid Coordinate display values.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeCoordinates.From">
            <summary>
            Offset from the datapoint value and nearest <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeCoordinates.Step"/> interval to show the annotation.
            e.g. A From of 0 will show the annotation on a Step interval.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeCoordinates.Step">
            <summary>
            Interval, in the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeLevel"/> units, between Coordinate values.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeCoordinates.LabelAtMidPoint">
            <summary>
            Whether the axis annotation should appear at the midpoint of the datapoint place, or between two datapoints.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.Axis">
            <summary>
                This class represents a chart axis.
            </summary>
            <remarks>
            To learn more about Axis see the list of <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Charting_XyChart_Welcome.htm">XYChart tutorials</a>.	
            </remarks>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisCoordinates"/>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Axis.#ctor">
            <summary>
            Initializes a new instance of the Axis class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Axis.PositionProperty">
            <summary>
            Identifies the Position dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Axis.MinValueProperty">
            <summary>
            Identifies the MinValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Axis.MaxValueProperty">
            <summary>
            Identifies the MaxValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Axis.ReferenceValueProperty">
            <summary>
            Identifies the ReferenceValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Axis.UseReferenceValueProperty">
            <summary>
            Identifies the UseReferenceValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Axis.LogarithmicProperty">
            <summary>
            Identifies the Logarithmic dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Axis.LogarithmBaseProperty">
            <summary>
            Identifies the LogarithmBase dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Axis.UseOnlyVisiblePointsToComputeRangeProperty">
            <summary>
            Identifies the UseOnlyVisiblePointsToComputeRange dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Axis.ReversedProperty">
            <summary>
            Identifies the Reversed dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Axis.AnnotationFormattingStringProperty">
            <summary>
            Identifies the AnnotationFormattingString dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Axis.AnnotationValueConverterProperty">
            <summary>
            Identifies the AnnotationValueConverter dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Axis.MaxValueForAllZeroSeriesProperty">
            <summary>
            Identifies the MaxValueForAllZeroSeries dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Axis.MaximumAnnotationLevelProperty">
            <summary>
            Identifies the MaximumAnnotationLevel dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Axis.AnnotationProperty">
            <summary>
            Identifies the Annotation dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Axis.HighlightRange(System.Object,System.Object)">
            <summary>
            Highlights a range between the specified coordinates.
            </summary>
            <param name="coordinate0">The coordinate to start highlighting from.</param>
            <param name="coordinate1">The coordinate to end highlighting at.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Axis.Animate(System.TimeSpan)">
            <summary>
            Animates the ActualAnimator for the specified duration.
            </summary>
            <param name="duration">The duration for which the Animator should be animated.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Axis.UpdateFrom(ComponentArt.Silverlight.DataVisualization.Charting.Axis)">
            <summary>
            Updating properties from another instance.
            We update those properties that are set in the other instanca.
            The other instance properties have presedence.
            
            We do this to collect property values from all instances of an axis, appearing in multiple contexts, such as
            "Xaxis", "YAxis", "Axes" and independent axes specs.
            </summary>
            <param name="axis"></param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.Position">
            <summary>
             Position of the axis relative to the cooridnate system.
            </summary>
            <remarks>
            <item>If the chart is vertically orientated, the position for the X axes is either Top or Bottom and for the Y axes it is either Left or Right.</item>
            <item>If the chart is horizontally orientated, the position for the x axes is either Left or Right and for the Y axes it is either Top or Bottom.</item>
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.MinValue">
            <summary>
            Minimum value of the range to draw datapoints in.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.MaxValue">
            <summary>
            Maximum value of the range to draw datapoints in.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.ReferenceValue">
            <summary>
                A value on the axis that designates the reference value (the origin). 
                The default value is 0.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.UseReferenceValue">
            <summary>
                A flag that indicates whether a reference value is used or not. By default this property is true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.Logarithmic">
            <summary>
                A flag indicating whether the axis is logarithmic scale or linear. By default this property is false.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.LogarithmBase">
            <summary>
            The base of the logarithmic scale.  Default 10.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.UseOnlyVisiblePointsToComputeRange">
            <summary>
            Whether to consider only the visible datapoint when calculating the minimum and maximum axis values, if not manually set.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.Reversed">
            <summary>
                A flag indicating whether the axis direction should be reversed or not. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.AnnotationFormattingString">
            <summary>
            Formatting string applied to this axis' annotations.
            </summary>
            <remarks>
            <item>If the axis data-value type is DateTime then the format string should follow the convention of DateTime.ToString() format string.</item>
            <item>If the axis data-value type is double then the format string should follow the convention of double.ToString() format string.</item>
            <item>If the axis data-value type is String then AnnotationFormattingString is ignored.</item>
            </remarks>
            
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.AnnotationValueConverter">
            <summary>
            Gets or sets a custom ValueConverter used to convert annotation values to strings.
            </summary>
            <remarks>
            The converter should be able to covert to string. It uses <see cref="!:FormattingString"/> as the parameter.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.Id">
            <summary>
            Unique identifier for this Axis.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.MaxValueForAllZeroSeries">
            <summary>
            Maximum value of the Y-scale when all series values are equal to the reference value (0 in most cases).
            </summary>
            <remarks>
            This value is used to construct the coordinate system when all series values are equal to the reference value (0 by default).<br/>
            That situation normaly makes chart unable to determine y-coordinate span for the coordinate system. <br/>
            Default value is 1.0. It should be set in the case when the order of magnitude of the series values is different.<br/>
            <br/>
            This value is ignored for x-axis.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.MaximumAnnotationLevel">
            <summary>
            Gets or sets the maximum number of levels in this axis annotation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.Annotation">
            <summary>
                Axis annotation object responsible for axis annotations. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.ActualAnnotation">
            <summary>
            Annotation object that was used when the Chart was rendered.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.ComputedMinValue">
            <summary>
            Value set when the annotation values define axis values range
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.ComputedMaxValue">
            <summary>
            Value set when the annotation values define axis values range
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.ActualMinValue">
            <summary>
            Minimum axis value used in drawing and axis coordinate computations when the Chart was rendered.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.ActualMaxValue">
            <summary>
            Maximum axis value used in drawing and axis coordinate computations when the Chart was rendered.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.Axis.HighlightRangeChanged">
            <summary>
            Occurs when the axis highlighted range changes.
            </summary>
            <remarks>
            Event arguments are empty. The highlighted range can be obtained through properties <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.HighlightRangeStart"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.HighlightRangeEnd"/>.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.HighlightRangeStart">
            <summary>
            Axis value at which to start highlighting.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.HighlightRangeEnd">
            <summary>
            Axis value at which to stop highlighting.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.Animator">
            <summary>
            Gets or sets the Animator object for Axis animations.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.EnableAnimation">
            <summary>
            Gets or sets whether animation is enabled.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Axis.ActualAnimator">
            <summary>
            Animator object that was used for Axis animations when the Chart was rendered.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisCollection">
            <summary>
            A collection of <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.Axis"/> objects.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisCollection.Item(System.String)">
            <summary>
            /// Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisCollection"/> class.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationContext">
            <summary>
            Contains visual style and hirearchical information related to an Annotation.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationContext.SetFormattingString(System.String)">
            <summary>
            Sets a format string that will be applied to this annotation before it is displayed in the chart.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationContext.FontBrush">
            <summary>
            Brush used for drawing the Annotation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationContext.FontStyle">
            <summary>
            FontStyle of the Annotation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationContext.FontSize">
            <summary>
            Letter size of the Annotation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationContext.FontWeight">
            <summary>
            FontWeight of the Annotation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationContext.FontFamily">
            <summary>
            The family of fonts in which the annotation is drawn.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationContext.Value">
            <summary>
            Value of the Annotation.  Can be used to custom-format specific annotations.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationContext.Text">
            <summary>
            Annotation value formatted by the control. Can be customized through the Value property.
            </summary> 
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationLevel">
            <summary>
            Represents an AxisAnnotation grouping level.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationLevel.#ctor">
            <summary>
            Initializes a new instance of the AxisAnnotationLevel class.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationLevel.Angle">
            <summary>
            Rotation angle of annotation text from the default.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationLevel.Split">
            <summary>
             Whether the annotation should be split into two horizontal layers with annotations alternating between the two.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationLevel.FormattingString">
            <summary>
            Axis annotation formatting string. 
            </summary>
            <remarks>
            <item>If the axis data value type is DateTime then the format string should follow the convention of DateTime.ToString() format string.</item>
            <item>If the axis data value type is double then the format string should follow the convention of double.ToString() format string.</item>
            <item>If the axis data value type is String the FormattingString is ignored.</item>
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationLevel.AnnotationValueConverter">
            <summary>
            Gets or sets a custom ValueConverter used to convert annotation values to strings.
            </summary>
            <remarks>
            The converter should be able to covert to string. It uses <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationLevel.FormattingString"/> as the parameter.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationLevel.MergeCellsOnEqualProperty">
            <summary>
            Gets or sets whether to merge adjacent cells when grouping property is equal.
            </summary>		
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation">
            <summary>
                Class responsible for axis annotations. 
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.#ctor">
            <summary>
            Initializes a new instance of the AxisAnnotation class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.FormattingStringProperty">
            <summary>
            Identifies the FormattingString dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.AnnotationValueConverterProperty">
            <summary>
            Identifies the AnnotationValueConverter dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.LabelCoordinatesProperty">
            <summary>
            Identifies the LabelCoordinates dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.MajorGridLineCoordinatesProperty">
            <summary>
            Identifies the MajorGridLineCoordinates dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.MinorGridLineCoordinatesProperty">
            <summary>
            Identifies the MinorGridLineCoordinates dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.StripeCoordinatesProperty">
            <summary>
            Identifies the StripCoordinates dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.FormattingString">
            <summary>
                Axis annotation formatting string. 
                If the axis data value type is DateTime then the format string should follow the convention of DateTime.ToString() format string.
                If the axis data value type is double then the format string should follow the convention of double.ToString() format string.
                If the axis data value type is String the FormattingString is ignored.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.AnnotationValueConverter">
            <summary>
            Gets or sets a custom ValueConverter used to convert annotation values to strings.
            </summary>
            <remarks>
            The converter should be able to covert to string. It uses <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.FormattingString"/> as the parameter.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.LabelCoordinates">
            <summary>
                A collection of label coordinates.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.MajorGridLineCoordinates">
            <summary>
            Gets or sets the Coordinates for major grid lines.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.MinorGridLineCoordinates">
            <summary>
            Gets or sets the Coordinates for minor grid lines.
            </summary>        
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.StripeCoordinates">
            <summary>
            A collection of stripe coordinates.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.MaximumAnnotationLevel">
            <summary>
            Gets or sets the maximum number of levels in this axis annotation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotation.Levels">
            <summary>
            Gets a collection containing each level.
            </summary>        
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationScheme">
            <summary>
            Used in XAML to define annotation strategy.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.INamedObject">
            <summary>
            Provides a property so that objects can be uniquely identified.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.INamedObject.Id">
            <summary>
            Gets or sets the ID of the object.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationScheme.Id">
            <summary>
            Gets or sets the ID of the scheme.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationScheme.DimensionKind">
            <summary>
            Gets or sets a DataDimensionKind enumeration value that specifies how to interpret the axis data type.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationScheme.Orientation">
            <summary>
            Gets or sets whether the AxisAnnotation is displayed horizontally or vertically. 
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisAnnotationSchemeCollection">
            <summary>
            Represents a collection of AxisAnnotationScheme objects.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.NamedObjectList`1">
            <summary>
                A base class for some of the collections used in the chart control.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.NamedObjectList`1.Add(`0)">
            <summary>
            Ads a new object to the collection.
            </summary>
            <param name="obj">Object to add.</param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.NamedObjectList`1.Item(System.String)">
            <summary>
            Returns the object with the provided Id.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemPointEventArgs">
            <summary>
            Provides data for CoordinateSystem events.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemPointEventArgs.#ctor(System.Object,System.Object,System.Windows.Point)">
            <summary>
            Initializes a new instance of the CoordinateSystemPointEventArgs class.
            </summary>
            <param name="xCoordinate">The x-coordinate at which the event occurred.</param>
            <param name="yCoordinate">The y-coordinate at which the event occurred.</param>
            <param name="mainChartAreaPosition">Mouse position in the main chart area.</param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemPointEventArgs.XCoordinate">
            <summary>
            Gets the x-coordinate at which the event occurred.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemPointEventArgs.YCoordinate">
            <summary>
            Gets the y-coordinate at which the event occurred.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CoordinateSystemPointEventArgs.MousePosition">
            <summary>
            Gets the mouse position within main chart area.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesCollection">
            <summary>
               A collection of Series or CompositeSeries objects.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesCollection.Item(System.String)">
            <summary>
            Gets or sets the element specified by Series ID.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.CustomDrawingCanvas">
            <summary>
            Provides a Canvas for custom drawing and calculations.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CustomDrawingCanvas.BarRect(ComponentArt.Silverlight.DataVisualization.Charting.DataPoint)">
            <summary>
            Returns a Rect object that contains the bounds of the specified DataPoint.
            </summary>
            <param name="dataPoint">The DataPoint to calculate the bounds of.</param>
            <returns>A Rect object that contains the bounds of the specified DataPoint.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CustomDrawingCanvas.Data2Canvas(System.Object,System.Object,ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase)">
            <summary>
            Returns an absolute Point mapped to the specified (x,y) coordinates of a Series.
            </summary>
            <param name="xCoordinate">The x-coordinate of a Series.</param>
            <param name="yCoordinate">The y-coordinate of a Seties.</param>
            <param name="series">The Series to map the (x,y) coordinates to.</param>
            <returns>A Point mapped to the specified (x,y) coordinates of a Series.</returns>
            <remarks>
            The Point returned is relative to the upper-left corner of the Chart control. 
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CustomDrawingCanvas.Data2Canvas(System.Object,System.Object)">
            <summary>
            Returns an absolute Point mapped to the specified (x,y) coordinates of the default Series.
            </summary>
            <param name="xCoordinate">The x-coordinate of the default Series.</param>
            <param name="yCoordinate">The y-coordinate of the default Series.</param>
            <returns>A Point mapped to the specified (x,y) coordinates of the default Series.</returns>
            <remarks>
            The Point returned is relative to the upper-left corner of the Chart control. 
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CustomDrawingCanvas.Data2Logical(System.Object,System.Object,ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase)">
            <summary>
            Returns a logical Point mapped to the specified (x,y) coordinates of a Series.
            </summary>
            <param name="xCoordinate">The x-coordinate of a Series.</param>
            <param name="yCoordinate">The y-coordinate of a Seties.</param>
            <param name="series">The Series to map the (x,y) coordinates to.</param>
            <returns>A Point mapped to the specified (x,y) coordinates of a Series.</returns>
            <remarks>
            Internally, all series coordinates are mapped to numeric coordinates.  
            <list type="">
            	<item>If the series a numeric, the logical point has the same value as the datapoint.</item>
            	<item>If the series is DateTime, the logical point is mapped to a numeric timestamp.</item>
            	<item>If the series is String, the logical point is mapped to a 0 based index; however, actual data-points will not necessarily be logically mapped to a whole number.</item>
            </list>
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CustomDrawingCanvas.Data2Logical(System.Object,System.Object)">
            <summary>
            Returns a logical Point mapped to the specified (x,y) coordinates of the default Series.
            </summary>
            <param name="xCoordinate">The x-coordinate of the default Series.</param>
            <param name="yCoordinate">The y-coordinate of the default Series.</param>
            <returns>A Point mapped to the specified (x,y) coordinates of the default Series.</returns>
            <remarks>
            Internally, all series coordinates are mapped to numeric coordinates.  
            <list type="">
            	<item>If the series a numeric, the logical point has the same value as the datapoint.</item>
            	<item>If the series is DateTime, the logical point is mapped to a numeric timestamp.</item>
            	<item>If the series is String, the logical point is mapped to a 0 based index; however, actual data-points will not necessarily be logically mapped to a whole number.</item>
            </list>
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CustomDrawingCanvas.LogicalToCanvas(System.Double,System.Double)">
            <summary>
            Returns an absolute Point mapped to the specified logical (x,y) coordinates of the default Series.
            </summary>
            <param name="xCoordinate">The x-coordinate of the default Series.</param>
            <param name="yCoordinate">The y-coordinate of the default Series.</param>
            <returns>A Point mapped to the specified (x,y) coordinates of the default Series.</returns>
            <remarks>
            Internally, all series coordinates are mapped to numeric coordinates.  
            <list type="">
            	<item>If the series a numeric, the logical point has the same value as the datapoint.</item>
            	<item>If the series is DateTime, the logical point is mapped to a numeric timestamp.</item>
            	<item>If the series is String, the logical point is mapped to a 0 based index.</item>
            </list>
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.CustomDrawingCanvas.ReferentSeries">
            <summary>
            Gets or sets the referent series.  Coordinate transformation functions that don't use the series argument are assumed to use the referent series.
            By default, referent series is the first (and often the only) series in the series hierarchy.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataDimension.SafeMaxValue(System.Object,System.Boolean)">
            <summary>
            SafeMaxValue should return value that avoids problems with Min == Max case
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointBarStretchAnimator">
            <summary>
            Provides a StretchAnimator for animating Bar type DataPoints.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataPointBarStretchAnimator.#ctor(ComponentArt.Silverlight.DataVisualization.Charting.DataPoint)">
            <summary>
            Initializes a new instance of the DataPointBarStretchAnimator class with the specified DataPoint.
            </summary>
            <param name="dataPoint">The DataPoint to animate.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataPointBarStretchAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.BarGrowingAnimator">
            <summary>
            Animation for BarSeries datapoints where bars stretch to their full height.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.BarGrowingAnimator.#ctor(ComponentArt.Silverlight.DataVisualization.Charting.DataPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.BarGrowingAnimator"/> class.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.BarBouncingAnimator">
            <summary>
            Animation for BarSeries datapoints where bars hop into position.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.BarBouncingAnimator.#ctor(ComponentArt.Silverlight.DataVisualization.Charting.DataPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.BarBouncingAnimator"/> class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.BarBouncingAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ScaleInAnimator">
            <summary>
            Provides a ProgressAnimator for animating with a drop effect.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ScaleInAnimator.#ctor">
            <summary>
            Initializes a new instance of the ScaleInAnimator class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ScaleInAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ScaleInAnimator.HandleProgress(System.Double)">
            <summary>
            Part of the animation framework. For internal use only.  
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ScaleInAnimator.CenterX">
            <summary>
            Scale center x-coordinate relative to the data point rectangle.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ScaleInAnimator.CenterY">
            <summary>
            Scale center Y-coordinate relative to the data point rectangle.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointPopup">
            <summary>
            Defines the template and behavior of a DataPoint popup. Enabled by setting the chart's EnableDataPointPopup property to true.
            </summary>
            <remarks>
            <para>Default visual will combine the values of both X and Y Axis as well as the color assigned to each series.</para>
            To learn more, see the <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Charting_HowTo_CustomizingDataPointPopUp.htm">Customizing DataPointPopups</a> tutorial.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataPointPopup.#ctor">
            <summary>
            Initializes a new instance of the DataPointPopup class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointPopup.RelativePositionXProperty">
            <summary>
            Identifies the RelativePositionX dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointPopup.RelativePositionYProperty">
            <summary>
            Identifies the RelativePositionY dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointPopup.ValueTemplateProperty">
            <summary>
            Identifies the ValueTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointPopup.IndexTemplateProperty">
            <summary>
            Identifies the IndexTemplate dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointPopup.MouseTracking">
            <summary>
            Gets or sets whether the DataPointPopup follows the mouse.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointPopup.RelativePositionX">
            <summary>
            Gets or sets the position of the DataPointPopup relative to the x-coordinate.
            </summary>        
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointPopup.RelativePositionY">
            <summary>
            Gets or sets the position of the DataPointPopup relative to the y-coordinate.
            </summary>        
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointPopup.ValueTemplate">
            <summary>
            Custom XAML that replaces the default data section (typically the lower half) of the popup.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointPopup.IndexTemplate">
            <summary>
            Custom XAML that replaces the default index section (typically the upper half) of the popup.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointPopup.Series">
            <summary>
            Gets the Series object that the DataPointPopup is defined on.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DrillDownState">
            <summary>
            Describes drill down state, including depth and drill target object.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DrillDownState.Depth">
            <summary>
            The number of levels beneath the top level.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DrillDownState.Target">
            <summary>
            Object/value that is being drilled-down into.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DrillDownEventArgs">
            <summary>
            Provides data for drill-down events.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DrillDownEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the DrillDownEventArgs class with the specified x-coordinate.
            </summary>
            <param name="xCoord"></param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DrillDownEventArgs.XCoordinate">
            <summary>
            Gets the x-coordinate associated with the drill-down event.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandlerKind">
            <summary>
            Defines the missing point handling algorithm.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandlerKind.Auto">
            <summary>
            Use the handler kind defined in the parent composite series. 
            If the parent series doesn't exist, handle as in "Ignore".
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandlerKind.Ignore">
            <summary>
            Connect non-missing points in the line and area chart types, 
            skip missing points in other chart types.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandlerKind.Linear">
            <summary>
            Use linear interpolation and extrapolation to compute logical values at the missing points.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandlerKind.Zero">
            <summary>
            Set zero or other null value at missing points.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandlerKind.Cubic">
            <summary>
            Use cubic interpolation and extrapolation to compute logical values at the missing points.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandlerKind.Custom">
            <summary>
            Use a custom missing point handler.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler">
            <summary>
            Base class for missing points handlers.
            </summary>
            <remarks>
            <para>
            This class provides basic services to inherited classes: access to data points, x-coordinates of the
            data points and values along y-axis. The data points exposed to the derived class are always in 
            the increasing order by the x-coordinate, even if points don't have this order in the associated 
            <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.Series"/> object. 
            </para>
            <para>
            Note that missing points handling is possible even if values along the y-axis are not numerics.
            The derived classes get logical coordinates of the non-missing points (which are always numeric) and
            set logical computed values of the missing points. The complexity of mapping real to logical coordinates
            and v.v. is handled by this base class.
            </para>
            <para>
            There are 5 predefined missing point handler strategies immpemented in classes that inherit from 
            the base class <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler"/>. Custom handlers can also be implemented as classes 
            that inherit from the same base class.
            </para>
            <para>
            A predefined missing point handler can be associated with a <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase"/> object 
            using the <see cref="!:Seriesbase.MissingPointHandlerKind"/> property. The custom handler can be set
            using the method <see cref="!:SeriesBase.SetCustomMissingPointHandler"/>. If a handler is set on a
            <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries"/> node of the series hierarchy, it is used by all subnodes, unless overriden.
            </para>
            <para>
            A missing point handler can be set on the chart control level using "MissingPointHandlerKind" property, or
            "SetCustomMissingPointHandler" method. When set that way, the handler is used in all the series, unless overriden
            in some nodes of the series hierarchy.
            </para>
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.Point(System.Int32)">
            <summary>
            Data point at specified position. Note that data points are arranged in increasing x -coordinates,
            to make computation of missing values easier in derived classes. Consequently, the order is not 
            necessarily the same as in the data point collection of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.Series"/>object.
            </summary>
            <param name="i">Index of the point.</param>
            <returns><see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> object at position i.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.X(System.Int32)">
            <summary>
            Logical x -coordinate of the point. If the x-coordinate has a non-zero width, this is coordinate of
            the mid-point. 
            </summary>
            <param name="i">Index of the point.</param>
            <returns>Logical x -coordinate of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> at position i.</returns>
            <remarks>
            <para>
            	If the coordinate type is double, this value is equal to the coordinate.
            </para>
            <para>
            	If the coordinate type is string, then the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataDimension"/> object created by the control
            	assignes width equal 1 to all points and the first point has initial coordinate 0. Therefore, the
            	mid-point of the first coordinate is 0.5, the next is 1.5 etc.
            </para>
            <para>
            	If coordinate type is <see cref="T:System.DateTime"/>, the X coordinate is distance in days (and fractions
            	of days) from a fixed date.
            </para>
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.Y(System.Int32)">
            <summary>
            Logical y -coordinate of the point. If the y-coordinate has a non-zero width, this is coordinate of
            the mid-point. 
            </summary>
            <param name="i">Index of the point.</param>
            <returns>Logical y -coordinate of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> at position i.</returns>
            <remarks>
            <para>
            	If the coordinate type is double, this value is equal to the coordinate.
            </para>
            <para>
            	If the coordinate type is string, then the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataDimension"/> object created by the control
            	assignes width equal 1 to all points and the first point has initial coordinate 0. Therefore, the
            	mid-point of the first coordinate is 0.5, the next is 1.5 etc.
            </para>
            <para>
            	If coordinate type is <see cref="T:System.DateTime"/>, the X coordinate is distance in days (and fractions
            	of days) from a fixed date.
            </para>
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.From(System.Int32)">
            <summary>
            The "from" value of the point, for a range type of series. 
            </summary>
            <param name="i">Index of the point.</param>
            <returns>The "from" value of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> at position i.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.To(System.Int32)">
            <summary>
            The "to" value of the point, for a range type of series. 
            </summary>
            <param name="i">Index of the point.</param>
            <returns>The "to" value of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> at position i.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.Open(System.Int32)">
            <summary>
            The "open" value of the point, for a financial type of series. 
            </summary>
            <param name="i">Index of the point.</param>
            <returns>The "open" value of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> at position i.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.High(System.Int32)">
            <summary>
            The "high" value of the point, for a financial type of series. 
            </summary>
            <param name="i">Index of the point.</param>
            <returns>The "high" value of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> at position i.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.Low(System.Int32)">
            <summary>
            The "low" value of the point, for a financial type of series. 
            </summary>
            <param name="i">Index of the point.</param>
            <returns>The "low" value of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> at position i.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.Close(System.Int32)">
            <summary>
            The "close" value of the point, for a financial type of series. 
            </summary>
            <param name="i">Index of the point.</param>
            <returns>The "close" value of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint"/> at position i.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.Value(System.Int32,System.Int32)">
            <summary>
            Generic access to values in a data point.
            </summary>
            <param name="i">Index of the point.</param>
            <param name="j">Index of data item. </param>
            <returns>The value of the data item.</returns>
            <remarks>
            <para>
            This function provides unified access to data associated to a data point, that doesn't depend on
            the series type. It could make implementation of custom event handlers easier.
            </para>
            <para>
            	Value(i,0) is Y(i) or From(i) or Open(i), deppending on the type of series.
            </para>
            <para>
            	Value(i,1) is To(i) or High(i), deppending on the type of series.
            </para>
            <para>
            	Value(i,2) is Low(i), if the series is financial.
            </para>
            <para>
            	Value(i,3) is Close(i), if the series is financial.
            </para>
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.IsMissing(System.Int32)">
            <summary>
            Indicates whether the data related to  a data point are missing.
            </summary>
            <param name="i">Index of the point.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.SetLogicalValue(ComponentArt.Silverlight.DataVisualization.Charting.DataPoint,System.Double)">
            <summary>
            Sets computed "y" parameter of the data point.
            </summary>
            <param name="dp">Data point.</param>
            <param name="logicalValue">Logical value of the "y" parameter.</param>
            <remarks>
            The y -dimension object computes the value of the "y" parameter using its logical value. 
            This way we can handle any type of dimension.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.SetLogicalRange(ComponentArt.Silverlight.DataVisualization.Charting.DataPoint,System.Double,System.Double)">
            <summary>
            Sets computed "from" and "to" parameters of the data point.
            </summary>
            <param name="dp">Data point.</param>
            <param name="fromValue">Logical value of the "from" parameter.</param>
            <param name="toValue">Logical value of the "to" parameter.</param>
            <remarks>
            The y -dimension object computes values of "from" and "to" parameters using logical values. 
            This way we can handle any type of dimension.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.SetFinancial(ComponentArt.Silverlight.DataVisualization.Charting.DataPoint,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets computed "open", "high",  "low" and "close" parameters of the data point.
            </summary>
            <param name="dp">Data point.</param>
            <param name="open">The value of the "open" parameter.</param>
            <param name="high">The value of the "high" parameter.</param>
            <param name="low">The value of the "low" parameter.</param>
            <param name="close">The value of the "close" parameter.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.ComputeMissingPoints">
            <summary>
            Abstract method for missing points computation. Inherited classes must implement this method.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.NPoints">
            <summary>
            Gets the number of data points.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.IsRange">
            <summary>
            Indicates whether this series is range type. Range type series has parameters "from" and "to".
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.MissingPointHandler.IsFinancial">
            <summary>
            Indicates whether this series is financial type. Financial type series has parameters "open", "high", "low" and "close".
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.LinearMissingPointHandler">
            <summary>
            This missing point handler uses linear interpolation and extrapolation to compute values at the missing points.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.LinearMissingPointHandler.#ctor">
            <summary>
            Initializes a new instance of the LinearMissingPointHandler class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.LinearMissingPointHandler.ComputeMissingPoints">
            <summary>
            Performs computation of missing points.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.CubicMissingPointHandler">
            <summary>
            This missing point handler uses qubic interpolation and extrapolation to compute values at the missing points.
            </summary>
            <remarks>
            <para>
            	Two existing points to the left of the interpolated point and two to the right
            	are used to fit a qubic function and interpolate the value. If there is not
            	enough points to the left or to the right (esp. at the beginning and end of the series)
            	the rule "2+2" can be violated so that more than two points are used on the left
            	or the right of the point of interpolation.
            </para>
            <para>
            	If there is not enough existing points, the qubic function can degenerate to quadratic or linear 
            	function or constant function.
            </para>
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CubicMissingPointHandler.#ctor">
            <summary>
            Initializes a new instance of the CubicMissingPointHandler class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.CubicMissingPointHandler.ComputeMissingPoints">
            <summary>
            Performs computation of missing points.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ConstantMissingPointHandler">
            <summary>
            This missing point handler sets a constant numeric value to the missing points.
            </summary>	
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ConstantMissingPointHandler.#ctor">
            <summary>
            Initializes a new instance of the ConstantMissingPointHandler class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ConstantMissingPointHandler.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the ConstantMissingPointHandler class.
            </summary>
            <param name="val">Data point value to insert for missing points.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ConstantMissingPointHandler.ComputeMissingPoints">
            <summary>
            Performs computation of missing points.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ConstantMissingPointHandler.ConstantValue">
            <summary>
            Gets or sets the constant value used for missing points.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.Overlay">
            <summary>
                This is a base class for different overlays that can be overlayed on top of the chart elements.
            </summary> 
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Overlay.PredefinedTexture(ComponentArt.Silverlight.DataVisualization.Charting.TextureKind)">
            <summary>
            Returns one of the predefined textures.
            </summary>
            <param name="textureKind">The name of the predefined texture.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Overlay.Predefined(System.String)">
            <summary>
            Returns one of the predefined overlays.
            </summary>
            <param name="overlayName">The name of the predefined overlay.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Overlay.#ctor">
            <summary>
            Initializes a new instance of the Overlay class.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Overlay.Id">
            <summary>
                Overlay id.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.Overlay.Strength">
            <summary>
                Strength of the alpha value or transparency. 0 is completely transparent while 1 is completely opaque.
                Default is 0.3.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.OverlayCollection">
            <summary>
                A collection of Overlay objects.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.Overlays">
            <summary>
                A collection of Overlay objects.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.TextureOverlay">
            <summary>
                A class that is used to overlay a texture on top of chart elements.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.TextureOverlay.#ctor">
            <summary>
            Initializes a new instance of the TextureOverlay class.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.TextureOverlay.Image">
            <summary>
                Path of the texture image in the assembly resource.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.BrushCollection">
            <summary>
                A collection of Brush objects.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.GradientOverlay">
            <summary>
                A class that is used to overlay a series of brushes on top of chart elements.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.GradientOverlay.#ctor">
            <summary>
            Initializes a new instance of the GradientOverlay class.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.GradientOverlay.Gradients">
            <summary>
                A collection of Brushes to be applied.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.GradientOverlay.Clip">
            <summary>
                A Geometry defing the clip region of the overlay.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.GradientOverlay.Center">
            <summary>
                The center point of the overlay area that will be mapped to the center of the chart. By default it is (0.0, 0.0).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.GradientOverlay.Width">
            <summary>
                The width of the defined overlay. If Strech is set to true the overlay will be stretched to fit the width of the chart.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.GradientOverlay.Height">
            <summary>
                The height of the defined overlay. If Strech is set to true the overlay will be stretched to fit the height of the chart.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.GradientOverlay.Stretch">
            <summary>
                A flag that indicates whether the overlay shouuld be stretched to fit the size of the chart or not.
                Default is true.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.OverlayTypeConverter">
            <summary>
                A TypeConverter for the Overlay class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.OverlayTypeConverter.#ctor">
            <summary>
            Initializes a new instance of the OverlayTypeConverter class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.OverlayTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.OverlayTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.IAxisAnnotationPalette">
            <summary>
            Interface for the Brush applied to the annotation.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ICoordinateSystemPalette">
            <summary>
            Interface that defines brushes applied to the coordinate plane visual elements.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ICoordinateSystemPalette.HorizontalCoordinateLineBrush">
            <summary>
            Brush used for major horizontal lines in the coordinate XY plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ICoordinateSystemPalette.HorizontalMinorCoordinateLineBrush">
            <summary>
            Brush used for minor horizontal lines in the coordinate XY plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ICoordinateSystemPalette.VerticalCoordinateLineBrush">
            <summary>
            Brush used for major vertical lines in the coordinate XY plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ICoordinateSystemPalette.VerticalMinorCoordinateLineBrush">
            <summary>
            Brush used for minor vertical lines in the coordinate XY plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ICoordinateSystemPalette.XYPlaneBackgroundBrush">
            <summary>
            Brush used to fill the XY plane background.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ICoordinateSystemPalette.XZPlaneBackgroundBrush">
            <summary>
            Brush used to fill the XZ plane background.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ICoordinateSystemPalette.CoordinatePlaneFrameBrush">
            <summary>
            Brush used for the frame (border) of the Coordinate plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ICoordinateSystemPalette.PrimaryHorizontalStripeBrush">
            <summary>
            Brush used to fill the primary horizontal stripes in the background (XY plane).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ICoordinateSystemPalette.SecondaryHorizontalStripeBrush">
            <summary>
            Brush used to fill the secondary (alternating) horizontal stripes in the background (XY plane).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ICoordinateSystemPalette.PrimaryVerticalStripeBrush">
            <summary>
            Brush used to fill the primary vertical stripes in the background (XY plane).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ICoordinateSystemPalette.SecondaryVerticalStripeBrush">
            <summary>
            Brush used to fill the secondary vertical stripes in the background (XY plane).
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette">
            <summary>
               A class that keeps track of colors and brushes used throught of the chart.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.PrimaryColor(System.Int32)">
            <summary>
            Returns the primary colour at the given position
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.SecondaryColor(System.Int32)">
            <summary>
            Returns the secondary colour at the given position
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.DataPointsPalette">
            <summary>
            Palette object to inherit colors from, to be applied to data.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.Id">
            <summary>
            This palette's ID.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.PrimaryColors">
            <summary>
            Definition of primary colors used for series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.SecondaryColors">
            <summary>
            Definition of secondary colors used for negative values of the series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.Appearance">
            <summary>
            Group of visual settings that cascade to the appropriate Chart properties.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.HorizontalCoordinateLineBrush">
            <summary>
            Brush used for major horizontal lines in the coordinate XY plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.HorizontalMinorCoordinateLineBrush">
            <summary>
            Brush used for minor horizontal lines in the coordinate XY plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.VerticalCoordinateLineBrush">
            <summary>
            Brush used for major vertical lines in the coordinate XY plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.VerticalMinorCoordinateLineBrush">
            <summary>
            Brush used for minor vertical lines in the coordinate XY plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.XYPlaneBackgroundBrush">
            <summary>
            Brush used to fill the XY plane background.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.XZPlaneBackgroundBrush">
            <summary>
            Brush used to fill the XZ plane background.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.CoordinatePlaneFrameBrush">
            <summary>
            Brush used for the frame (border) of the Coordinate plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.AxisAnnotationFontBrush">
            <summary>
            Default brush for the text of the axis annotation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.PrimaryHorizontalStripeBrush">
            <summary>
            Brush used to fill the primary horizontal stripes in the background (XY plane).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.SecondaryHorizontalStripeBrush">
            <summary>
            Brush used to fill the secondary (alternating) horizontal stripes in the background (XY plane).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.PrimaryVerticalStripeBrush">
            <summary>
            Brush used to fill the primary vertical stripes in the background (XY plane).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.SecondaryVerticalStripeBrush">
            <summary>
            Brush used to fill the secondary vertical stripes in the background (XY plane).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.FinancialPointStrokeBrush">
            <summary>
            Default brush used for financial (candlestick) points.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.CandlestickDownColor">
            <summary>
            Colour for the lowest value of a candlestick chart point
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartPalette.CandlestickUpColor">
            <summary>
            Colour for the highest value of a candlestick chart point
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance">
            <summary>
            Group of visual properties common to all Chart-types.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance"/> class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.NotifyPropertyChanged(System.String)">
            <summary>
            Used to notify when a property's value changes.  Do not call directly.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.PropertyChanged">
            <summary>
            Raised when a property's value is set.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.HorizontalCoordinateLineBrush">
            <summary>
            Brush used for major horizontal lines in the coordinate XY plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.HorizontalMinorCoordinateLineBrush">
            <summary>
            Brush used for minor horizontal lines in the coordinate XY plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.VerticalCoordinateLineBrush">
            <summary>
            Brush used for major vertical lines in the coordinate XY plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.VerticalMinorCoordinateLineBrush">
            <summary>
            Brush used for minor vertical lines in the coordinate XY plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.XYPlaneBackgroundBrush">
            <summary>
            Brush used to fill the XY plane background.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.XZPlaneBackgroundBrush">
            <summary>
            Brush used to fill the XZ plane background.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.CoordinatePlaneFrameBrush">
            <summary>
            Brush used for the frame (border) of the Coordinate plane.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.AxisAnnotationFontBrush">
            <summary>
            Default brush for the text of the axis annotation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.PrimaryHorizontalStripeBrush">
            <summary>
            Brush used to fill the primary horizontal stripes in the background (XY plane).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.SecondaryHorizontalStripeBrush">
            <summary>
            Brush used to fill the secondary (alternating) horizontal stripes in the background (XY plane).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.PrimaryVerticalStripeBrush">
            <summary>
            Brush used to fill the primary vertical stripes in the background (XY plane).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.SecondaryVerticalStripeBrush">
            <summary>
            Brush used to fill the secondary vertical stripes in the background (XY plane).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.FinancialPointStrokeBrush">
            <summary>
            Default brush used for financial (candlestick) points.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.CandlestickDownColor">
            <summary>
            Colour for the lowest value of a candlestick chart point
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.CandlestickUpColor">
            <summary>
            Colour for the highest value of a candlestick chart point
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.DataPointPopupValueColor">
            <summary>
            The default color of the value text.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.DataPointPopupIndexColor">
            <summary>
            The default color of the index (x-coordinate) text.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.DataPointAnnotationValueColor">
            <summary>
            The default color of the value text.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.DataPointAnnotationIndexColor">
            <summary>
            The default color of the index (x-coordinate) text.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.DataPointAnnotationBackground">
            <summary>
            The default background color.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.FunnelSideAnnotationBrush">
            <summary>
            The default color for funnel side annotation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.FunnelCenterAnnotationBrush">
            <summary>
            The default color for funnel center annotation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.FunnelCenterAnnotationBackground">
            <summary>
            The default background color for funnel center annotation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartAppearance.DefaultMarkerFillColor">
            <summary>
            Default brush to be used for marker fill.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.PolygonRadialMorphingAnimator">
            <summary>
            Morphing animator for polygons in area and line series.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PolygonRadialMorphingAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PolygonRadialMorphingAnimator.HandleProgress(System.Double)">
            <summary>
            Part of the animation framework. For internal use only.  
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.PolygonMorphingAnimator">
            <summary>
            Morphing animator for polygons in area and line series.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PolygonMorphingAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PolygonMorphingAnimator.HandleProgress(System.Double)">
            <summary>
            Part of the animation framework. For internal use only.  
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesStretchAnimator">
            <summary>
            Animator that controls stretching and compressing of series with bars.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesStretchAnimator.#ctor(ComponentArt.Silverlight.DataVisualization.Charting.SeriesBase)">
            <summary>
            Default constructor.
            </summary>
            <param name="series">series to be animated</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesStretchAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.XRangeOpacityAnimator">
            <summary>
            Animates the transparent to opaque transition of bars given thier X range.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.XRangeOpacityAnimator.#ctor(ComponentArt.Silverlight.DataVisualization.Charting.ChartBase,System.Object,System.Object,System.Boolean)">
            <summary>
            Constructor with all the necessary settings
            </summary>
            <param name="chart">Owning chart</param>
            <param name="x0Coordinate">starting X coordinate</param>
            <param name="x1Coordinate">ending X coordinate</param>
            <param name="fadeIn">to fade in or go straight from visible to invisible</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.XRangeOpacityAnimator.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.XRangeOpacityAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.XRangeOpacityAnimator.HandleProgress(System.Double)">
            <summary>
            Part of the animation framework. For internal use only.  
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XRangeOpacityAnimator.Chart">
            <summary>
            Chart this animation will be applied to
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XRangeOpacityAnimator.X0Coordinate">
            <summary>
            Starting X coordinate for the range of bars that will be animated.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XRangeOpacityAnimator.X1Coordinate">
            <summary>
            Ending X coordinate for the range of bars that will be animated.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SwipeDirection">
            <summary>
            Swipe animation direction.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SwipeDirection.Horizontal">
            <summary>
            Object unveils from left to right.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SwipeDirection.HorizontalBackwards">
            <summary>
            Object unveils from right to left.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SwipeDirection.Vertical">
            <summary>
            Object unveils from bottom to top.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SwipeDirection.VerticalDownwards">
            <summary>
            Object unveils from top to bottom.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SwipeAnimator">
            <summary>
            Animates the transparent to opaque transition of bars given thier X range.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SwipeAnimator.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SwipeAnimator.SmoothnessProperty">
            <summary>
            Identifies the Smoothness dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SwipeAnimator.DirectionProperty">
            <summary>
            Identifies the Direction dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SwipeAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SwipeAnimator.HandleProgress(System.Double)">
            <summary>
            Part of the animation framework. For internal use only.  
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SwipeAnimator.Chart">
            <summary>
            Chart this animation will be applied to
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SwipeAnimator.Smoothness">
            <summary>
            Swipe smoothnes, between 0 and 1.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SwipeAnimator.Direction">
            <summary>
            Choice of direction both Horizontal-Vertical and Front-Back that the animation will be applied to.  Default is SwipeDirection.Horizontal.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.PieDonutAngleAnimator">
            <summary>
            Controls the the animation of Pie-Donut charts where the pie-doughnut opens up from 0 to 360 degrees.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PieDonutAngleAnimator.#ctor">
            <summary>
            default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PieDonutAngleAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.PieDonutAngleAnimator.HandleProgress(System.Double)">
            <summary>
            Part of the animation framework. For internal use only.  
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieDonutAngleAnimator.Series">
            <summary>
            Series this is applied to
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieDonutAngleAnimator.BeginAngleFrom">
            <summary>
            The angle from which the starting angle of the chart starts its animation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieDonutAngleAnimator.BeginAngleTo">
            <summary>
            The angle at which the starting angle of the chart ends its animation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieDonutAngleAnimator.EndAngleFrom">
            <summary>
            The angle from which the ending angle of the chart starts its animation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.PieDonutAngleAnimator.EndAngleTo">
            <summary>
            The angle at which the ending angle of the chart ends its animation.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationAnimator">
            <summary>
            Base animator for animating annotations of series.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationAnimator.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationAnimator.SetStatus(ComponentArt.Silverlight.DataVisualization.Utils.Animator.AnimationStatus)">
            <summary>
            For internal use. Setting the animator status at the beginning and at the end of animation.
            </summary>
            <param name="status">Indicates whether the status is to be set at the beginning or at the end of the animation.</param>
            <remarks>This method should not be used from user code.</remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationAnimator.AnimationKind">
            <summary>
            The type of animation being performed.  For internal use only.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SeriesAnnotationAnimator.PointsAnimationOverlap">
            <summary>
            Gets or sets the amount of overlap on DataPoint animations.
            The value 0 means that there is no overlap and data points are animated sequentially.
            The value 1 means that animations completely overlap and animation of all data points is simultaneous.
            Values between 0 and 1 describe animations that combine these two extreme approaches.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation">
            <summary>
                This class represents a data point annotation which is drawn ontop of a data point.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.#ctor">
            <summary>
            Initializes a new instance of the DataPointAnnotation class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.HorizontalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.HorizontalAlignment"/> dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.VerticalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.VerticalAlignment"/> dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.TemplateProperty">
            <summary>
            Identifies the Template dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.RelativeXProperty">
            <summary>
            Identifies the RelativeX dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.RelativeYProperty">
            <summary>
            Identifies the RelativeY dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.RelativeRadialOffsetProperty">
            <summary>
            Identifies the RelativeRadialOffset dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.HorizontalOffsetProperty">
            <summary>
            Identifies the HorizontalOffset dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.LineStrokeProperty">
            <summary>
            Identifies the LineStroke dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.LineThicknessProperty">
            <summary>
            Identifies the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.LineThickness"/> dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.MinimumPercentageProperty">
            <summary>
            Identifies the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.MinimumPercentage"/> dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.MaximumPercentageProperty">
            <summary>
            Identifies the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.MaximumPercentage"/> dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.HorizontalAlignment">
            <summary>
            The horizontal alignment of the annotation. Options are Left, Right, Center and Stretch.
            Default is Center.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.VerticalAlignment">
            <summary>
            The vertical alignment of the annotation. Options are Left, Right, Center and Stretch.
            Default is Center.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.Template">
            <summary>
            Custom XAML template that replaces the default datapoint rendering.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.RelativeX">
            <summary>
            Horizontal translation of the annotation's position, relative to the datapoint.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.RelativeY">
            <summary>
            Vertical translation of the annotation's position, relative to the datapoint.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.RelativeRadialOffset">
            <summary>
            Radial translation of the annotation's position, relative to the datapoint.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.HorizontalOffset">
            <summary>
            Horizontal translation of the rendered DataPoint annotation from its original calculated position.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.LineStroke">
            <summary>
            Object describing how the line of the annotation is painted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.LineThickness">
            <summary>
            Thickness of the strokes used in this annotation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.MinimumPercentage">
            <summary>
            Minimum percent (of this DataPoint's value) of the total series sum before hiding the annotation.  Used in <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.PieChart"/>s.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotation.MaximumPercentage">
            <summary>
            Maximum percent (of this DataPoint's value) of the total series sum before hiding the annotation.  Used in <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.PieChart"/>s.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnnotationCollection">
            <summary>
            A collection of DataPointAnnotation objects.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointState">
            <summary>
            Specifies how to handle DataPoint objects.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointState.Regular">
            <summary>
            Render as regular DataPoint.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointState.Missing">
            <summary>
            Render DataPoint as missing.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointState.Interpolated">
            <summary>
            Render DataPoint as interpolated value. 
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SelectedDataPointEventArgs">
            <summary>
                EventArgs for the following events: MouseEnterDataPoint, MouseLeaveDataPoint, MouseLeftButtonDownOnDataPoint and MouseLeftButtonUpOnDataPoint.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SelectedDataPointEventArgs.#ctor(ComponentArt.Silverlight.DataVisualization.Charting.DataPoint,System.Windows.Input.MouseEventArgs)">
            <summary>
            Initializes a new instance of the SelectedDataPointEventArgs class.
            </summary>
            <param name="dataPoint">The selected DataPoint object.</param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SelectedDataPointEventArgs.DataPointContext">
            <summary>
                The data context of the data point that corresponds to the event.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SelectedDataPointEventArgs.MouseEventArgs">
            <summary>
            The original mouse event arguments.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SelectedSeriesEventArgs">
            <summary>
                EventArgs for the following events: MouseEnterSeries, MouseLeaveSeries, MouseLeftButtonDownOnSeries and MouseLeftButtonUpOnSeries.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SelectedSeriesEventArgs.#ctor(ComponentArt.Silverlight.DataVisualization.Charting.Series,System.Windows.Input.MouseEventArgs)">
            <summary>
            Initializes a new instance of the SelectedSeriesEventArgs class with the specified Series.
            </summary>
            <param name="series">The Series where the event occurred.</param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SelectedSeriesEventArgs.Series">
            <summary>
                The data context of the series that corresponds to the event.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.SelectedSeriesEventArgs.MouseEventArgs">
            <summary>
            The original mouse event arguments.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint">
            <summary>
            Represents a single data-point.
            </summary>
            <remarks>DataPoints are created in each Series when the chart is bound to it's data.</remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.#ctor">
            <summary>
            Initializes a new instance of the DataPoint class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.GetAnnotations">
            <summary>
                Gets the annotation list of this data point.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.SelectedProperty">
            <summary>
            Identifies the Selected dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.LegendTextProperty">
            <summary>
            Identifies the LegendText dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.SeriesNameProperty">
            <summary>
            Identifies the SeriesName dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.LabelProperty">
            <summary>
            Identifies the Label dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.XProperty">
            <summary>
            Identifies the X dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.YProperty">
            <summary>
            Identifies the Y dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.ZProperty">
            <summary>
            Identifies the Z dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.StateProperty">
            <summary>
            Identifies the State dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.ShiftProperty">
            <summary>
            Identifies the Shift dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.ColorProperty">
            <summary>
            Identifies the Color dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.FromProperty">
            <summary>
            Identifies the From dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.ToProperty">
            <summary>
            Identifies the To dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.OpenProperty">
            <summary>
            Identifies the Open dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.LowProperty">
            <summary>
            Identifies the Low dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.HighProperty">
            <summary>
            Identifies the High dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.CloseProperty">
            <summary>
            Identifies the Close dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.HighlightedProperty">
            <summary>
            Identifies the Highlighted dependency property.
            </summary>
            
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.MarkerProperty">
            <summary>
            Identifies the Marker dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.MarkerSizeProperty">
            <summary>
            Identifies the MarkerSize dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.MarkerVisibleProperty">
            <summary>
            Identifies the MarkerVisible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.MarkerStrokeProperty">
            <summary>
            Identifies the MarkerStroke dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.MarkerStrokeThicknessProperty">
            <summary>
            Identifies the MarkerStrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.MarkerFillProperty">
            <summary>
            Identifies the MarkerFill dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.ValueFormattingStringProperty">
            <summary>
            Identifies the ValueFormattingString dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.InputDataProperty">
            <summary>
            Identifies the InputData dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.GetScreenBarRect">
            <summary>
            Screen rectangle that outlines the data point bar.
            </summary>
            <returns>
            Used only if this data point belongs to a <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeries"/>, otherwise empty Rect.
            </returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.GetScreenPoint">
            <summary>
            Screen coordinates of the midpoint of this data point.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.AnimatorProperty">
            <summary>
            Identifies the Animator dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Animate(System.TimeSpan)">
            <summary>
            Animates the DataPoint to its value.
            </summary>
            <param name="duration">The desired duration of the animation.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.ToString">
            <summary>
            String representation of this DataPoint.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Selected">
            <summary>
            Gets or sets whether data point is selected.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.LegendText">
            <summary>
                Text that represents a data point and appears in legends for pie and donut charts. If not explicitly set, X value is used.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Label">
            <summary>
                Data point label text. It appears in data point popups and legends for pie and doughnut charts.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.X">
            <summary>
                X value of the data point.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Y">
            <summary>
                Y value of the data point.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Z">
            <summary>
                Z value of the data point. In bubble charts used for the size of a bubble.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.State">
            <summary>
            Gets or sets the DataPointState enumeration value that specifies how the current DataPoint is displayed.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Shift">
            <summary>
            Visual displacement of this DataPoint from its calculated position.
            </summary>
            <remarks>
            Can be used to highlight points of data.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Color">
            <summary>
                Color used for the fill of the data point.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.From">
            <summary>
                From value of a data point used in range charts.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.To">
            <summary>
                To value of a data point used in range charts.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Open">
            <summary>
                Open value of a data point used in financial charts.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Low">
            <summary>
                Low value of a data point used in financial charts.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.High">
            <summary>
                High value of a data point used in financial charts.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Close">
            <summary>
                Close value of a data point used in financial charts.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Highlighted">
            <summary>
            Gets or sets whether the DataPoint is highlighted.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Marker">
            <summary>
            Gets or the DataPoint marker.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.MarkerSize">
            <summary>
            Gets or sets the size of a marker on the DataPoint.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.MarkerVisible">
            <summary>
            Gets or sets the visibility of a marker on the DataPoint.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.MarkerStroke">
            <summary>
            Gets of sets the Brush that specifies the stroke of a marker on the DataPoint.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.MarkerStrokeThickness">
            <summary>
            Gets or sets the stroke thickness of a marker on the DataPoint.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.MarkerFill">
            <summary>
            Gets or sets the Brush that specifies the fill of a marker on the DataPoint.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.ValueFormattingString">
            <summary>
            Gets or sets value formatting string used for data point annotation values.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.InputData">
            <summary>
            The raw object that this DataPoint was bound to.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.YBySeriesTotal">
            <summary>
            Y value divided by series total.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.ActualLabel">
            <summary>
            Gets the actual label text of the DataPoint.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Chart">
            <summary>
                Reference to the chart object this data point belongs to.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.IsVertical">
            <summary>
            True if the chart is horizontal; false otherwise.  Read-only.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Series">
            <summary>
                Reference to the series object this data point belongs to.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Brush">
            <summary>
                Gets the brush used to draw the fill of a data point.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Index">
            <summary>
            Numeric index of this DataPoint in its Series.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.ActualColor">
            <summary>
            Color object that was used when the Chart was rendered.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.EnableAnimation">
            <summary>
            Gets or sets whether DataPoint animation is enabled.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.Animator">
            <summary>
            Gets or sets the Animator object used to animate the DataPoint value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPoint.ActualAnimator">
            <summary>
            Gets a reference to the actual animator being used to animate the DataPoint value.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext">
            <summary>
                Helper class created so that DataPoint properties can easily be copied and used for data binding.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.#ctor(ComponentArt.Silverlight.DataVisualization.Charting.DataPoint)">
            <summary>
            Initializes a new instance of the DataPointContext class.
            </summary>
            <param name="dpi"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.Position(System.Double,System.Double)">
            <summary>
                Returns the position of the point specified relative to the control origin.
            </summary>
            <param name="relativeX"> X coordinate of the point relative to the bounding rectangle of the data point (0 to 1). </param>
            <param name="relativeY"> Y coordinate of the point relative to the bounding rectangle of the data point (0 to 1). </param>
            <returns>The position of the point specified relative to the control origin.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.GlobalPosition(System.Double,System.Double)">
            <summary>
                Returns the position of the point specified relative to the visual root.
            </summary>
            <param name="relativeX"> X coordinate of the point relative to the bounding rectangle of the data point (0 to 1). </param>
            <param name="relativeY"> Y coordinate of the point relative to the bounding rectangle of the data point (0 to 1). </param>
            <returns>The position of the point specified relative to the visual root</returns>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.ValueFormattingString">
            <summary>
            Gets value formatting string used for data point annotation values.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.DataPoint">
            <summary>
                The DataPoint object of this data context.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.Series">
            <summary>
                The Series object that the DataPoint belongs to.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.RootSeries">
            <summary>
            The root of the series hierarchy.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.PopupValueBrush">
            <summary>
            The default color of the value text.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.PopupIndexBrush">
            <summary>
            The default color of the index (x-coordinate) text.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.ValueBrush">
            <summary>
            The default color of the value text.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.IndexBrush">
            <summary>
            The default color of the index (x-coordinate) text.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.Background">
            <summary>
            The default background color.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.Chart">
            <summary>
                The Chart object that the Series belongs to.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.Tag">
            <summary>
                The Tag property of the DataPoint.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.BorderStroke">
            <summary>
            Border stroke of the data point.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.StrokeThickness">
            <summary>
            Stroke thickness (double) if the data point border.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointContext.BorderThickness">
            <summary>
            Thicknes of the data point used when drawing rectangle.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointCollection">
            <summary>
                A collection of DataPoint objects.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartLabelOrientation">
            <summary>
            Values for the orientation of <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartLabel"/> axis area members.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartLabelOrientation.Horizontal">
            <summary>
            Horizontal direction.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartLabelOrientation.Vertical">
            <summary>
            Vertical, upward.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartLabelOrientation.Downwards">
            <summary>
            Vertical, downward.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.LineDashStyle">
            <summary>
            Represents different visual styles in which a line series can be drawn.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineDashStyle.Solid">
            <summary>
            Solid line throughout.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineDashStyle.Dash">
            <summary>
            A pattern of dashes and spaces repeating.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineDashStyle.Dot">
            <summary>
            A pattern of dots and spaces repeating.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineDashStyle.DashDot">
            <summary>
            A pattern of dashes, dots and spaces repeating.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineDashStyle.DashDotDot">
            <summary>
            An alternate pattern with a dash, two dots and spaces repeating.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.PieDataPointAnnotationKind">
            <summary>
            Defines different styles for placement of data point annotations of pie charts.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieDataPointAnnotationKind.InsideRadial">
            <summary>
            All labels follow a circular pattern, placed inside the data point.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieDataPointAnnotationKind.InsideCircular">
            <summary>
            All labels are parallel to the tangent of the doughnut segment.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieDataPointAnnotationKind.InsideHorizontal">
            <summary>
            All labels are placed horizontally in the segments.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieDataPointAnnotationKind.Outside">
            <summary>
            All labels are placed horizontally at a specified distance outside the segment.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieDataPointAnnotationKind.OutsideAligned">
            <summary>
            All labels are placed horizontally outside the segment and are aligned with other labels.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarXLabelOrientation">
            <summary>
            Specifies tha way coordinate labels are displayed on the radar x-axis.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarXLabelOrientation.Circular">
            <summary>
            Labels are displayed along a circular circumference.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarXLabelOrientation.Horizontal">
            <summary>
            Labels are horizontal.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarXLabelOrientation.Radial">
            <summary>
            Labels are displayed from the center in the direction of the radius.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind">
            <summary>
            Specifies the type of Chart to render.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.Auto">
            <summary>
            Automatically chooses type based on data-source.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.Block">
            <summary>
            Chart or series is rendered as blocks.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.Cylinder">
            <summary>
            Chart or series is rendered as cylinders.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.RoundedBlock">
            <summary>
            Chart or series is rendered as rounded blocks.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.Rectangle">
            <summary>
            Chart or series is rendered as rectangular bars.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.Area">
            <summary>
            Chart or series is rendered as an area.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.Area2D">
            <summary>
            Chart or series is rendered as a 2D area.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.Line">
            <summary>
            Chart or series is rendered as lines.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.Marker">
            <summary>
            Chart or series is rendered as markers.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.Bubble">
            <summary>
            Chart or series is rendered as bubbles.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.Pie">
            <summary>
            Chart or series is rendered as a pie.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.Pie2D">
            <summary>
            Chart or series is rendered as a 2D pie.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.Donut">
            <summary>
            Chart or series is rendered as a donut.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.Donut2D">
            <summary>
            Chart or series is rendered as a 2D donut.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.Candlestick">
            <summary>
            Chart or series is rendered as candlestick markers (financial).
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.OpenHighLowClose">
            <summary>
            Chart or series is rendered as open-high-low-close markers (financial).
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartKind.None">
            <summary>
            Chart or series is not rendered.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.BarKind">
            <summary>
            Specifies the type of bar chart to render.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.BarKind.Block">
            <summary>
            Series is rendered as blocks.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.BarKind.Cylinder">
            <summary>
            Series is rendered as cylinders.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.BarKind.RoundedBlock">
            <summary>
            Series is rendered as rounded blocks.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.BarKind.Rectangle">
            <summary>
            Series is rendered as rectangular bars.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.XYChartKind">
            <summary>
            Specifies the type of XYChart to render.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChartKind.Auto">
            <summary>
            Automatically chooses type based on data-source.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChartKind.Block">
            <summary>
            Chart or series is rendered as blocks.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChartKind.Cylinder">
            <summary>
            Chart or series is rendered as cylinders.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChartKind.RoundedBlock">
            <summary>
            Chart or series is rendered as rounded blocks.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChartKind.Rectangle">
            <summary>
            Chart or series is rendered as rectangular bars.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChartKind.Area">
            <summary>
            Chart or series is rendered as an area.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChartKind.Area2D">
            <summary>
            Chart or series is rendered as a 2D area.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChartKind.Line">
            <summary>
            Chart or series is rendered as lines.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChartKind.Marker">
            <summary>
            Chart or series is rendered as markers.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChartKind.Bubble">
            <summary>
            Chart or series is rendered as bubbles.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChartKind.Candlestick">
            <summary>
            Chart or series is rendered as candlestick markers (financial).
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChartKind.OpenHighLowClose">
            <summary>
            Chart or series is rendered as open-high-low-close markers (financial).
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChartKind.None">
            <summary>
            Chart or series is not rendered.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.PieChartKind">
            <summary>
            Specifies the type of PieChart to render.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieChartKind.Pie">
            <summary>
            Chart or series is rendered as a pie.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieChartKind.Pie2D">
            <summary>
            Chart or series is rendered as a 2D pie.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieChartKind.Donut">
            <summary>
            Chart or series is rendered as a donut.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.PieChartKind.Donut2D">
            <summary>
            Chart or series is rendered as a 2D donut.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.RadarChartKind">
            <summary>
            The different style, Line, Area or Marker applied to the series of this RadarChart.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarChartKind.Auto">
            <summary>
            Automatically chooses type based on data-source.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarChartKind.Line">
            <summary>
            Chart or series is rendered as a line.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarChartKind.Area">
            <summary>
            Chart or series is rendered as an Area.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarChartKind.Marker">
            <summary>
            Chart or series is with Markers on data point values.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.RadarChartKind.None">
            <summary>
            Chart or series is not rendered.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.CompositionKind">
            <summary>
            Specifies the composition of multiple Series.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CompositionKind.SideBySide">
            <summary>
            Multiple Series are shown together, with data points side by side.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CompositionKind.Stacked">
            <summary>
            Multiple Series are stacked on top of each other.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.CompositionKind.Stacked100">
            <summary>
            Multiple Series are stacked on top of each other such that their combined height equals 100%.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ChartCategory">
            <summary>
            Specifies the category of Chart being rendered.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartCategory.XYChart">
            <summary>
            Chart uses XY coordinate system.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartCategory.Pie">
            <summary>
            Chart is a pie.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartCategory.Donut">
            <summary>
            Chart is a donut
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartCategory.Radar">
            <summary>
            Chart is a radar.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartCategory.Conflicting">
            <summary>
            Series types conflict; ie. Block and Pie.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ChartCategory.Unknown">
            <summary>
            Unknow chart type.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeLevel">
            <summary>
            Specifies the AxisAnnotation resolution of DateTime coordinates.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeLevel.Second">
            <summary>
            Group coordinate annotations by seconds.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeLevel.Minute">
            <summary>
            Group coordinate annotations by minutes.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeLevel.Hour">
            <summary>
            Group coordinate annotations by hours.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeLevel.Day">
            <summary>
            Group coordinate annotations by days.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeLevel.Month">
            <summary>
            Group coordinate annotations by months.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeLevel.Year">
            <summary>
            Group coordinate annotations by years.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DateTimeLevel.None">
            <summary>
            Do not group coordinate annotations.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.LineKind">
            <summary>
            Specifies the type of line to render when Chart.ChartKind is ChartKind.Line.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineKind.Polygon">
            <summary>
            Renders a straight line between each DataPoint.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineKind.Smooth">
            <summary>
            Renders a smooth (bezier) curve between each DataPoint.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineKind.Step">
            <summary>
            Renders a stepped line between each DataPoint (90 degree angles).
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LineKind.Auto">
            <summary>
            Automatically renders a line between each DataPoint.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisPosition">
            <summary>
            Specifies the position of an Axis relative to the CoordinateSystem.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisPosition.Left">
            <summary>
            Renders the Axis to the left of the CoordinateSystem.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisPosition.Right">
            <summary>
            Renders the Axis to the right of the CoordinateSystem.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisPosition.Top">
            <summary>
            Renders the Axis above the CoordinateSystem.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisPosition.Bottom">
            <summary>
            Renders the Axis below the CoordinateSystem.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.AxisValueKind">
            <summary>
            Specifies the data-type of an Axis.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisValueKind.String">
            <summary>
            Treat axis coordinates as String values.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisValueKind.Numeric">
            <summary>
            Treat axis coordinates as Numeric values.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisValueKind.DateTime">
            <summary>
            Treat axis coordinates as DateTime values.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.AxisValueKind.Unknown">
            <summary>
            Treat axis coordinates as unknown values.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.VerticalTextDirection">
            <summary>
            Specifies the text-direction when rendering text vertically.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.VerticalTextDirection.Downwards">
            <summary>
            Render text from top-down.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.VerticalTextDirection.Upwards">
            <summary>
            Render text from bottom-up.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.GridLineKind">
            <summary>
            Specifies the type of grid lines to render.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.GridLineKind.None">
            <summary>
            Do not render grid lines.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.GridLineKind.TickMarkNear">
            <summary>
            Render grid lines as dotted line.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.GridLineKind.TickMark">
            <summary>
            Render grid lines as dashed line.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.GridLineKind.FullLine">
            <summary>
            Render grid lines as fill line.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ScalingType">
            <summary>
            Specifies how DataPoints and Series are scaled.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ScalingType.ScaleByWidth">
            <summary>
            Scales width only.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ScalingType.ScaleByHeight">
            <summary>
            Scales height only.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.ScalingType.ScaleByArea">
            <summary>
            Scales width and height proportionally.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.LegendItemOrientation">
            <summary>
            Specifies the orientation of LegendItem objects in a Legend.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LegendItemOrientation.Horizontal">
            <summary>
            Renders LegendItem objects horizontally.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.LegendItemOrientation.Vertical">
            <summary>
            Renders LegendItem objects vertically.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataDimensionKind">
            <summary>
            Specifies how to treat an Axis data type.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataDimensionKind.DateTime">
            <summary>
            Treat axis coordinates as DateTime values.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataDimensionKind.String">
            <summary>
            Treat axis coordinates as String values.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataDimensionKind.Numeric">
            <summary>
            Treat axis coordinates as Numeric values.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.Dock">
            <summary>
            Specifies how a Legend is docked to the Chart.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Dock.Left">
            <summary>
            Renders the Axis to the left of the Chart.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Dock.Right">
            <summary>
            Renders the Axis to the right of the Chart.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Dock.Top">
            <summary>
            Renders the Axis above the Chart.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.Dock.Bottom">
            <summary>
            Renders the Axis below the Chart.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.TextureKind">
            <summary>
            Specifies the type of Texture to apply to a Series.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TextureKind.None">
            <summary>
            Do not render a texture.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TextureKind.Boomerang">
            <summary>
            Renders a boomerang texture.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TextureKind.BrushedMetal">
            <summary>
            Renders a brushed-metal texture.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.TextureKind.Leather">
            <summary>
            Renders a leather texture.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnimationKind">
            <summary>
            Specifies the type of animation to apply to DataPoints.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnimationKind.None">
            <summary>
            Do not animate DataPoints.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnimationKind.Default">
            <summary>
            Use default animation for DataPoints.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnimationKind.Growing">
            <summary>
            Grow the DataPoints from a specified position.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnimationKind.Bouncing">
            <summary>
            Bounce DataPoints into place.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnimationKind.Dropping">
            <summary>
            Drop DataPoints into place.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnimationKind.FadeIn">
            <summary>
            Fade-in DataPoints.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointAnimationKind.FadeOut">
            <summary>
            Fade-out DataPoints.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SelectionVisualHint">
            <summary>
            Specifies the type of visual indication on selected data points and series.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SelectionVisualHint.DashedLine">
            <summary>
            Draws a dashed line arround the selected object.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SelectionVisualHint.InvertedColor">
            <summary>
            Inverts the color of the selected object.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.SelectionVisualHint.None">
            <summary>
            No visual indication of the selected object rendered by the control. 
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.NumericConverter">
            <summary>
            A type converter for numeric values.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.NumericConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the given value to the type of this converter. 
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.NumericConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DefaultLegendItemDataContext">
            <summary>
            Default data context class for objects provided to LegendItem objects.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DefaultLegendItemDataContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.DefaultLegendItemDataContext"/> class.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DefaultLegendItemDataContext.Series">
            <summary>
            The data series related to this LegendItem.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DefaultLegendItemDataContext.DataPoint">
            <summary>
            DataPoint related to this LegendItem. May be null if the legend item is related to a <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.DefaultLegendItemDataContext.Series"/> object.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DefaultDataTemplateConverter">
            <summary>
            TypeConverter for data templates.  For internal use.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DefaultDataTemplateConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DefaultDataTemplateConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Implementation of standard TypeConverter method.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SimpleLine">
            <summary>
            Summary description for SimpleLine.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.SimpleLineCollection">
            <summary>
            Summary description for SimpleLineCollection.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SimpleLineCollection.IsPositiveArea">
            <summary>
            Area is positive if it is oriented clocl-wise in the x-y coordinate plane
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SimpleLineCollection.CropLineAtX(System.Double,System.Boolean)">
            <summary>
            Crops all lines in the collection so that the resulting collection contains
            only the line segments left of the specified x-coordinate if left = true, or right of 
            the specified x-coordinate if left = false.
            </summary>
            <param name="x">The cropping x-coordinate.</param>
            <param name="left">A flag thatindicates if left part is taken (if left = true) 
            or right part (if left = false) </param>
            <returns>Collection of lines on one side of the x-coordinate.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SimpleLineCollection.CropLineAtY(System.Double,System.Boolean)">
            <summary>
            Crops all lines in the collection so that the resulting collection contains
            only the line segments below the specified y-coordinate if below = true, or above 
            the y-coordinate if below = false.
            </summary>
            <param name="y">The cropping y-coordinate.</param>
            <param name="below">A flag that indicates if the lower part is taken (if below = true) 
            or the upper part (if below = false). </param>
            <returns>Collection of lines on one side of the y-coordinate.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SimpleLineCollection.CropAreaAtX(System.Double,System.Boolean)">
            <summary>
            Crops the area covered by this collection so that the resulting collection 
            covers only the part of the original area which is to the left of the specified 
            x-coordinate if left = true, or right of the x-coordinate if left = false.
            </summary>
            <param name="x">The cropping x-coordinate.</param>
            <param name="left">A flag that indicates if the left part is taken (if left = true) or 
            the right part (if left = false). </param>
            <returns>Collection covering the area on one side of the x-coordinate.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.SimpleLineCollection.CropAreaAtY(System.Double,System.Boolean)">
            <summary>
            Crops the area covered by this collection so that the resulting collection 
            covers only the part of the original area which is below of the specified 
            y-coordinate if below = true, or above the y-coordinate if below = false.
            </summary>
            <param name="y">The cropping y-coordinate.</param>
            <param name="below">A flag that indicates if the lower part is taken (if below = true) 
            or the upper part (if below = false). </param>
            <returns>Collection covering the area on one side of the y-coordinate.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ComponentArt.Silverlight.DataVisualization.Charting.Utils.PaletteColorFromString(System.String,ComponentArt.Silverlight.DataVisualization.Charting.ChartBase)" -->
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Utils.NumberOfApproximationPoints(System.Double,System.Double)">
            <summary>
            Get the number of approximation points for a circular arch.
            </summary>
            <param name="radius">Radius of the circle</param>
            <param name="alphaDeg">Angle of the arch in degrees</param>
            <returns>
            Returns the number of points needed to smootly approximate the arch with a polygon. 
            Starting and ending pointsa are counted in. If alpha > 0, the result is > 1.
            </returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.Utils.GetSize(System.Windows.FrameworkElement)">
            <summary>
            Gets the size of a FrameworkElement when it is in the visual tree
            </summary>
            <param name="fe"></param>
            <returns></returns>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.VerticalContainer">
            <summary>
            A custom layout container for charting labeling purposes.  For internal use only.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.VerticalContainer.ChildProperty">
            <summary>
            Identifies the Child dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.VerticalContainer.UpwardsProperty">
            <summary>
            Identifies the Upwards dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.VerticalContainer.Child">
            <summary>
            UIElement child element.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.VerticalContainer.Upwards">
            <summary>
            Whether the text is oriented to read from the bottom towards the top, default is true.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock">
            <summary>
            TextBlock control with support for binding to an adjoining <see cref="T:ComponentArt.Silverlight.DataVisualization.Common.CalcContainer"/>'s Computing expression result.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock"/> class. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.FormatProperty">
            <summary>
            Identifies the Format dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.TextAlignmentProperty">
            <summary>
            Identifies the TextAlignment dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.DataProperty">
            <summary>
            Identifies the Data dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.FontFamilyProperty">
            <summary>
            Identifies the FontFamily dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.FontSizeProperty">
            <summary>
            Identifies the FontSize dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.FontStretchProperty">
            <summary>
            Identifies the FontStretch dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.FontStyleProperty">
            <summary>
            Identifies the FontStyle dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.FontWeightProperty">
            <summary>
            Identifies the FontWeight dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.ForegroundProperty">
            <summary>
            Identifies the Foreground dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.PaddingProperty">
            <summary>
            Identifies the Padding dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.MarginProperty">
            <summary>
            Identifies the Margin dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.OnApplyTemplate">
            <summary>
            Lifecycle method to be called by the Silverlight framework.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.Format">
            <summary>
            Defines how the output text is to be formatted, using the String.Format method.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.TextAlignment">
            <summary>
            Specifies whether the text in the object is left-aligned, right-aligned, centered, or justified.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.Value">
            <summary>
            The unformatted value to which the Format is applied to, before it is displayed as a String.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.Data">
            <summary>
            Underlying object that is being bound to.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.CornerRadius">
            <summary>
            The corner radius of the element containing the text.  
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.FontFamily">
            <summary>
            Preferred top-level font family for the text content in this element.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.FontSize">
            <summary>
            Font size for the text content.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.FontStretch">
            <summary>
            Gets or sets the font stretch for the text.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.FontStyle">
            <summary>
            Represents the style of a font face, such as normal or italic.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.FontWeight">
            <summary>
            Gets or sets the top-level font weight.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.Foreground">
            <summary>
            Gets or sets the System.Windows.Media.Brush to apply to the text contents.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.Padding">
            <summary>
            Gets or sets a value that indicates the thickness of padding space between
            the boundaries of the content area and the content displayed.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.Margin">
            <summary>
            Gets or sets the outer margin.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.FormattedTextBlock.Text">
            <summary>
            The formatted text that was created by formating the Value property.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangleFrame">
            <summary>
            Used in to customize appearance of data point bars when overriding BarSeries.DataPointRectangleTemplate.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangleFrame.ThicknessProperty">
            <summary>
            Identifies the Thickness dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangleFrame.ColorShiftProperty">
            <summary>
            Identifies the ColorShift dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangleFrame.Thickness">
            <summary>
            Width of the border around this DataPoint rectangle.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangleFrame.ColorShift">
            <summary>
            Object describing gradient-specific properties of this DataPoint rectangle's border.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangleFrameCollection">
            <summary>
            Collection of DataPointRectangleFrame objects.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle">
            <summary>
            Used to customize appearance of data point bars. 
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle.ColorProperty">
            <summary>
            Identifies the Color dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle.IsDataPointVerticalProperty">
            <summary>
            Identifies the IsDataPointVertical dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle.IsGradientVerticalProperty">
            <summary>
            Identifies the IsGradientVertical dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle.ColorShiftsProperty">
            <summary>
            Identifies the ColorShifts dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle.AbsoluteMappingModeProperty">
            <summary>
            Identifies the AbsoluteMappingMode dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle.Color">
            <summary>
            Color of the bar.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle.IsDataPointVertical">
            <summary>
            Indicates whether the bar belongs to horizontal or vertical chart.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle.IsGradientVertical">
            <summary>
            Indicates whether the gradient on the bar is horizontal or vertical. Default: false.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle.ColorShifts">
            <summary>
            Collection of <see cref="T:ComponentArt.Silverlight.DataVisualization.Common.ColorShiftStop"/>s that outline the gradient on the bar.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle.CornerRadius">
            <summary>
            The amount of roundnes on the corners of the bar.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle.AbsoluteMappingMode">
            <summary>
            Whether the values are absolute in pixels or relative to the size of the bar (between 0 and 1)
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.DataPointRectangle.Frames">
            <summary>
            Used in to customize appearance of drop shadows on data point bars when overriding BarSeries.DataPointRectangleTemplate.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.ViewPoint">
            <summary>
            Represents a 3D angle of view from the given point to the origin.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ViewPoint.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.ViewPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor that takes a 3D definition for the point of view.
            </summary>
            <param name="x">X value of the point</param>
            <param name="y">Y value of the point</param>
            <param name="z">Z value of the point</param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ViewPoint.X">
            <summary>
            X value of the point
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ViewPoint.Y">
            <summary>
            Y value of the point
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.ViewPoint.Z">
            <summary>
            Z value of the point
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.XYChart">
            <summary>
                ComponentArt XYChart control.  Line, Area, Bar, Marker as well as financial series can be added and combined within an XYChart.
            </summary>
            <remarks>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.DataSource"/> property to a collection of data objects that hold the necessary data values for the chart series. </para>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.ChartBase.XPath"/> property to the name of the data property containing the X-axis values for all the series. </para>
            <para>Add all series directly inside the XYChart tag in XAML or to the <see cref="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.XYChartMainArea"/> collection from code.</para>
            To learn more about this control see the list of <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Charting_XyChart_Welcome.htm">XYChart tutorials</a>.
            </remarks>
             <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.BarSeries"/>
              <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.LineSeries"/>
               <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeries"/>
                <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.MarkerSeries"/>
                 <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.OHLCSeries"/>
                  <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.AreaSeriesRange"/>
                   <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Charting.CompositeSeries"/>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.CompositionKindProperty">
            <summary>
            Identifies the CompositionKind dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.Is3DProperty">
            <summary>
            Identifies the Is3D dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.DefaultCoordinateSystemFrameVisibleProperty">
            <summary>
            Identifies the DefaultCoordinateSystemFrameVisible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.DefaultAxisAnnotationsVisibleProperty">
            <summary>
            Identifies the DefaultAxisAnnotationsVisible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.DefaultGridLinesVisibleProperty">
            <summary>
            Identifies the DefaultGridLinesVisible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.DefaultStripesVisibleProperty">
            <summary>
            Identifies the DefaultStripesVisible dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.AllowFractionalPointXRangeProperty">
            <summary>
            Identifies the AllowFractionalPointXRange dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.XRangeStartProperty">
            <summary>
            Identifies the XRangeStart dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.XRangeEndProperty">
            <summary>
            Identifies the XRangeEnd dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.UseDifferentBarColorsProperty">
            <summary>
            Identifies the UseDifferentBarColors dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.PopupPositionOnTopProperty">
            <summary>
            Identifies the PopupPositionOnTop dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.PopupPositionYOffsetProperty">
            <summary>
            Identifies the PopupPositionYOffset dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.LineKindProperty">
            <summary>
            Identifies the LineKind dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.SeriesStrokeProperty">
            <summary>
            Identifies the SeriesStroke dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.SeriesStrokeThicknessProperty">
            <summary>
            Identifies the SeriesStrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.ActualXRangeStartProperty">
            <summary>
            Identifies the ActualXRangeStart dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.ActualXRangeEndProperty">
            <summary>
            Identifies the ActualXRangeEnd dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.CoordinatesPaddingPercentageProperty">
            <summary>
            Identifies the CoordinatesPaddingPercentage  dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.EnableXCoordinatePopupProperty">
            <summary>
            Identifies the EnableXCoordinatePopup dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.XCoordinatePopupProperty">
            <summary>
            Identifies the XCoordinatePopup dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.GetMainAreaScreenRect">
            <summary>
            A rectangle that represents the boundaries of the chart.
            </summary>
            <returns>Main chart area screen rectangle. The value is set after the chart layout is completed.</returns>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.CompositionKind">
            <summary>
            This property indicates the type of composition that will be performed if myltiple series are present. It can be overriden for each CompositeSeries.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.Is3D">
            <summary>
            Whether to apply 3D effects when rendering the Chart.  Default true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.DefaultCoordinateSystemFrameVisible">
            <summary>
            Whether to render the border around the main Chart area (not enclosing the axis annotations).  Default true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.DefaultAxisAnnotationsVisible">
            <summary>
            Whether to render the default axis annotations (labels), generated by Chart.  Default true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.DefaultGridLinesVisible">
            <summary>
            Whether to render the vertical and horizontal background lines which indicate intervals between axis values.  Default true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.DefaultStripesVisible">
            <summary>
            Whether to render the horizontal background areas which indicate intervals between Y-axis values.  Default true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.AllowFractionalPointXRange">
            <summary>
            Whether to draw DataPoints to fit the applied XRangeStart and XRangeEnd (possibly resulting in partial 
            DataPoint graphics at the edges) or to always draw whole DataPoint graphics (thus choosing an XRangeStart
            and XRangeEnd that allow for this).  Default is the latter.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.XRangeStart">
            <summary>
            X-axis range minimum to be used.  If AllowFractionalPointXRange is false, XRangeStart may be overwritten
            by Chart's rendering engine to fit DataPoints that sit near the X-axis range minimum.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.XRangeEnd">
            <summary>
            X-axis range maximum to be used.  If AllowFractionalPointXRange is false, XRangeEnd may be overwritten
            by Chart's rendering engine to fit DataPoints that sit near the X-axis range maximum.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.UseDifferentBarColors">
            <summary>
            Whether to cycle through the Palette when applying colors to DataPoints, rather than using
            one color per Series and cycling through the Series.  Default is the latter.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.PopupPositionOnTop">
            <summary>
            Whether to draw the DataPointPopup at the top of the Chart, rather than at the point of mouse hover.
            Default is false.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.PopupPositionYOffset">
            <summary>
            Vertical offset of the DataPointPopup, in pixels.  Default is 0.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.LineKind">
            <summary>
                This property indicates what shape will be used for a line in a line chart or the top edge of an area in an area chart. In other chart types this property is ignored.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.Orientation">
            <summary>
                This property indicates whether the chart is oriented horizontally (by default) or vertically.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.SeriesStroke">
            <summary>
               This property is a Brush object that will be used to draw borders of a data series objects.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.SeriesStrokeThickness">
            <summary>
               This property indicates the thickness of borders of data series objects.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.ActualXRangeStart">
            <summary>
            Value used as the X-axis range minimum when the Chart was rendered.  Read-only.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.ActualXRangeEnd">
            <summary>
            Value used as the X-axis range maximum when the Chart was rendered.  Read-only.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.CoordinatesPaddingPercentage">
            <summary>
            Sets the amount of padding as a percentage (0-100) of the main chart area.
            </summary>
            <remarks>
            This property can be used to add additional space at the edges of main chart area to accomodate 
            content that would otherwise be clipped, such as data point annotations, big markers etc.<br/>
            It is applied to numeric X and Y axes. For other axes this property is ignored.<br/>
            Values are expressed in percentages, not pixels. For example, 10 means "add 10% to the standard coordinate span".
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.Axes">
            <summary>
            Collection of Axes used by this Chart.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.XYChartMainArea">
            <summary>
            Contains the content placed within the <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.XYChart"/>. All series, coordinate lines, stripes and other objects implementing 
            <see cref="T:ComponentArt.Silverlight.DataVisualization.Charting.IXYMainChartAreaMember"/> interface belong to this collection and should be added directly to it. 
            </summary>
            <remarks>
            Use this property to programmatically add series and populate the main chart area. Do not use <see cref="!:DataSeries"/> property 
            to add series objects to the main area.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.XAxisArea">
            <summary>
            Primary X-axis area.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.YAxisArea">
            <summary>
            Primary Y-axis area.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.X2AxisArea">
            <summary>
            Secondary X-axis area, if any.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.Y2AxisArea">
            <summary>
            Secondary Y-axis area, if any.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.HighlightXCoordinateOnHover">
            <summary>
            Gets or sets whether to highlight the x-coordinate on mouse hover.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.EnableXCoordinatePopup">
            <summary>
            Whether to show the X-coordinate popup when the mouse cursor hovers over a Series.  Default false.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Charting.XYChart.XCoordinatePopup">
            <summary>
            Popup which summarizes all Series that are spanned in the X-Axis on a mouse hover.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Charting.XYMainChartAreaMemberCollection">
            <summary>
            The collection of the main chart area members for XYChart.
            </summary>
        </member>
    </members>
</doc>
